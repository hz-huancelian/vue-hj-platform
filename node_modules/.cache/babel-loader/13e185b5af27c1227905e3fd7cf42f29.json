{"remainingRequest":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\babel-loader\\lib\\index.js!F:\\webstormProjects\\vue-hj-platform\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\webstormProjects\\vue-hj-platform\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\webstormProjects\\vue-hj-platform\\src\\components\\FactorChoseList\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\webstormProjects\\vue-hj-platform\\src\\components\\FactorChoseList\\index.vue","mtime":1652844810000},{"path":"F:\\webstormProjects\\vue-hj-platform\\babel.config.js","mtime":1637214064000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"F:\\\\webstormProjects\\\\vue-hj-platform\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\interopRequireWildcard.js\");\n\nvar _interopRequireDefault = require(\"F:\\\\webstormProjects\\\\vue-hj-platform\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\interopRequireDefault.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nrequire(\"core-js/modules/es6.array.find-index\");\n\nrequire(\"core-js/modules/es6.array.find\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _Pagination = _interopRequireDefault(require(\"@/components/Pagination\"));\n\nvar factorServer = _interopRequireWildcard(require(\"@/api/factor\"));\n\nvar _vueUuid = require(\"vue-uuid\");\n\nvar dictServer = _interopRequireWildcard(require(\"@/api/dict\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar MEAN_STATUS = {\n  '0': '日均值',\n  '1': '时均值',\n  '2': '八小时均值'\n};\nvar _default = {\n  name: 'FactorChoseList',\n  components: {\n    Pagination: _Pagination.default\n  },\n  props: {\n    clearType: {\n      type: String,\n      default: ''\n    }\n  },\n  data: function data() {\n    return {\n      MEAN_STATUS: MEAN_STATUS,\n      factorTreeData: [],\n      addressArray: [],\n      currentNodeId: '',\n      currentNodeName: '',\n      lookPosition: '',\n      defaultProps: {\n        children: 'children',\n        label: 'name',\n        id: 'id'\n      },\n      factTotal: 0,\n      factorForm: {\n        classId: '',\n        factorName: '',\n        pageNumber: 1,\n        pageSize: 10\n      },\n      choseFatcors: [],\n      showChoseData: [],\n      multipleSelection: [],\n      maxTotal: 10,\n      setDay: 1,\n      frequency: 1,\n      // 频次\n      meanType: '0'\n    };\n  },\n  watch: {\n    clearType: function clearType() {\n      this.factorForm.factorName = '';\n      this.showChoseData = [];\n      this.addressArray = [];\n      this.choseFatcors = [];\n      this.multipleSelection = [];\n      this.setDay = 1;\n      this.frequency = 1;\n      this.lookPosition = '';\n    }\n  },\n  created: function created() {\n    this.getTreeClassList();\n  },\n  methods: {\n    getTreeClassList: function getTreeClassList() {\n      var _this = this;\n\n      dictServer.findTreeClasses().then(function (res) {\n        _this.factorTreeData = res.result || [];\n      });\n    },\n    handleTreeFactorSearch: function handleTreeFactorSearch(val, node) {\n      var _this2 = this;\n\n      if (!val.children || val.children == null) {\n        // if (!this.currentNodeId || this.currentNodeId !== val.id) {\n        this.addressArray = [];\n        this.currentNodeId = val.id;\n        this.currentNodeName = val.name;\n        this.factorForm.classId = node.parent.data.id;\n        this.factorForm.factorName = '';\n        this.factorForm.pageNumber = 1;\n        this.handleFactorSearch(); // 清空已经选择的信息\n\n        this.choseFatcors = [];\n        this.multipleSelection = [];\n\n        if (val.id === '002001' && this.meanType === '0') {\n          this.maxTotal = 1;\n        } else if (val.id === '004001') {\n          this.maxTotal = 2;\n        } else {\n          this.maxTotal = 10;\n        }\n\n        if (val.id === '002003') {\n          // 厂界无组织/ 环境空气 自动生成5个点位\n          this.$nextTick(function () {\n            for (var i = 0; i < 4; i++) {\n              _this2.addressArray.push({\n                value: '',\n                windNum: 3,\n                key: Date.now() + i\n              });\n            }\n          });\n        } else if (val.id === '002001') {\n          this.$nextTick(function () {\n            for (var i = 0; i < 3; i++) {\n              _this2.addressArray.push({\n                value: '',\n                windNum: 3,\n                key: Date.now() + i\n              });\n            }\n          });\n        } // }\n        // 为底层的时候\n\n      }\n    },\n    handleFactorSearch: function handleFactorSearch() {\n      var _this3 = this;\n\n      if (this.currentNodeId && this.currentNodeId.length > 0) {\n        factorServer.getFactorListForPage(this.factorForm).then(function (res) {\n          if (res.code === 200) {\n            _this3.showChoseData = res.result.records || [];\n            _this3.factTotal = res.result.total;\n          }\n        });\n      }\n    },\n    handleSelectionChange: function handleSelectionChange(val) {\n      var _this4 = this;\n\n      this.multipleSelection = val;\n\n      if (val) {\n        val.forEach(function (i) {\n          var ob = _this4.choseFatcors.find(function (j) {\n            return j.id === i.id;\n          });\n\n          if (!ob) {\n            _this4.choseFatcors.push(i);\n          }\n        });\n      }\n    },\n    handleSelectChange: function handleSelectChange(val, row) {\n      // 先判定是否取消\n      if (val) {\n        if (val.indexOf(row) === -1) {\n          var index = this.choseFatcors.findIndex(function (i) {\n            return i.id === row.id;\n          });\n          this.choseFatcors.splice(index, 1);\n        }\n      }\n    },\n    changeMeanType: function changeMeanType(val) {\n      var curTotal = 0;\n\n      if (val === '0') {\n        this.maxTotal = curTotal = 1;\n      } else if (val === '1') {\n        this.maxTotal = curTotal = 4;\n      } else if (val === '2') {\n        this.maxTotal = curTotal = 2;\n      }\n\n      if (this.frequency > curTotal) {\n        this.frequency = curTotal;\n      }\n    },\n    addAddress: function addAddress() {\n      var _this5 = this;\n\n      this.$nextTick(function () {\n        _this5.addressArray.push({\n          value: '',\n          windNum: 3,\n          key: Date.now()\n        });\n      });\n    },\n    handleClose: function handleClose(item) {\n      // 移除存储的因子\n      this.choseFatcors.splice(this.choseFatcors.indexOf(item), 1);\n      this.$refs.multipleTable.toggleRowSelection(item, false);\n    },\n    confirmChoseFactor: function confirmChoseFactor() {\n      var _this6 = this;\n\n      if (!this.choseFatcors || this.choseFatcors.length <= 0) {\n        this.$message.warning('因子不能为空');\n        return;\n      }\n\n      if (!this.lookPosition || this.lookPosition.length <= 0) {\n        this.$message.warning('初始检测位置不能为空');\n        return;\n      }\n\n      var dynamic = {};\n\n      if (this.currentNodeId === '002001') {\n        this.$set(dynamic, 'meanType', this.meanType);\n        this.$set(dynamic, 'meanName', this.MEAN_STATUS[this.meanType]);\n      }\n\n      var groupId = '';\n\n      if (this.currentNodeId === '002001' || this.currentNodeId === '002003') {\n        groupId = this.currentNodeId;\n      }\n\n      var retListArray = this.choseFatcors.map(function (i) {\n        var standardCode = i.standardCode,\n            className = i.className,\n            dataEntryStep = i.dataEntryStep,\n            standardNo = i.standardNo,\n            standardName = i.standardName,\n            factorName = i.factorName,\n            price = i.price;\n        var cost = parseFloat(price * _this6.frequency * _this6.setDay).toFixed(2);\n\n        var n_UUid = _vueUuid.uuid.v4().replaceAll('-', '');\n\n        _this6.$set(i, 'factorGroupKey', n_UUid);\n\n        return {\n          checkStandardId: standardCode,\n          className: className,\n          standardName: standardName,\n          factorName: factorName,\n          fbFlag: '0',\n          isFactor: '0',\n          factorFlag: '0',\n          standardNo: standardNo,\n          dataEntryStep: dataEntryStep,\n          secdClassId: _this6.currentNodeId,\n          secdClassName: _this6.currentNodeName,\n          frequency: _this6.frequency,\n          dayCount: _this6.setDay,\n          totalNum: Number(_this6.frequency * _this6.setDay).toFixed(0),\n          costPerTime: price,\n          totalCost: cost,\n          meanName: _this6.currentNodeId === '002001' ? _this6.MEAN_STATUS[_this6.meanType] : undefined,\n          factorPoint: _this6.lookPosition.trim(),\n          groupClassId: groupId !== '' ? groupId + '/' + standardCode : '',\n          dynamicParam: JSON.stringify(dynamic),\n          factorGroupKey: n_UUid // 每次添加因子，同组的归为一类\n\n        };\n      });\n\n      if (this.addressArray && this.addressArray.length > 0) {\n        this.addressArray.forEach(function (item) {\n          if (item.value && item.value.length > 0) {\n            _this6.choseFatcors.forEach(function (j) {\n              var standardCode = j.standardCode,\n                  className = j.className,\n                  standardNo = j.standardNo,\n                  dataEntryStep = j.dataEntryStep,\n                  standardName = j.standardName,\n                  factorName = j.factorName,\n                  price = j.price,\n                  factorGroupKey = j.factorGroupKey;\n              var cost = parseFloat(price * _this6.frequency * _this6.setDay).toFixed(2);\n              retListArray.push({\n                checkStandardId: standardCode,\n                className: className,\n                standardName: standardName,\n                factorName: factorName,\n                fbFlag: '0',\n                isFactor: '0',\n                factorFlag: '0',\n                standardNo: standardNo,\n                dataEntryStep: dataEntryStep,\n                secdClassId: _this6.currentNodeId,\n                secdClassName: _this6.currentNodeName,\n                frequency: _this6.frequency,\n                dayCount: _this6.setDay,\n                totalNum: Number(_this6.frequency * _this6.setDay).toFixed(0),\n                costPerTime: price,\n                totalCost: cost,\n                factorPoint: item.value,\n                remark: '',\n                meanName: _this6.currentNodeId === '002001' ? _this6.MEAN_STATUS[_this6.meanType] : undefined,\n                groupClassId: groupId !== '' ? groupId + '/' + standardCode : '',\n                dynamicParam: JSON.stringify(dynamic),\n                factorGroupKey: factorGroupKey // 每次添加因子，同组的归为一类\n\n              });\n            });\n          }\n        });\n      }\n\n      this.formComfig(retListArray);\n    },\n    formComfig: function formComfig(items) {\n      debugger;\n      this.$emit('handleConfim', items);\n    },\n    cancelComfig: function cancelComfig() {\n      this.$emit('handleCancel', false);\n    }\n  }\n};\nexports.default = _default;",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <el-row :gutter=\"10\">\n      <el-col :span=\"6\">\n        <el-card class=\"card-left\" shadow=\"never\" style=\"min-height: 400px;\">\n          <div>\n            <el-tree\n              ref=\"tree\"\n              class=\"filter-tree\"\n              :data=\"factorTreeData\"\n              :props=\"defaultProps\"\n              highlight-current\n              default-expand-all\n              :expand-on-click-node=\"true\"\n              style=\"height: 100%;\"\n              @node-click=\"handleTreeFactorSearch\"\n            />\n          </div>\n        </el-card>\n      </el-col>\n      <el-col :span=\"18\">\n        <el-container>\n          <el-header height=\"45px\">\n            <el-input v-model=\"factorForm.factorName\" style=\"width:200px\" placeholder=\"输入检测因子名称\" @change=\"handleFactorSearch\" />\n            <el-button type=\"primary\" style=\"margin-left: 10px\" @click=\"handleFactorSearch\">查询</el-button>\n          </el-header>\n          <el-main class=\"main-body\">\n            <el-table\n              ref=\"multipleTable\"\n              :data=\"showChoseData\"\n              stripe\n              border\n              max-height=\"450px\"\n              :header-cell-style=\"{background:'#ECF3FC'}\"\n              @select=\"handleSelectChange\"\n              @selection-change=\"handleSelectionChange\"\n            >\n              <el-table-column type=\"selection\" width=\"50\" align=\"center\" />\n              <el-table-column prop=\"className\" label=\"检测对象\" width=\"100px\" align=\"center\" />\n              <el-table-column prop=\"factorName\" label=\"检测因子\" align=\"center\" />\n              <el-table-column prop=\"standardNo\" label=\"标准号\" align=\"center\" />\n              <el-table-column prop=\"standardName\" label=\"检测标准\" min-width=\"130px\" align=\"center\" />\n              <el-table-column prop=\"analysisMethod\" label=\"分析方法\" align=\"center\" />\n              <el-table-column prop=\"MoneyFormat\" label=\"价格\" align=\"center\">\n                <template slot-scope=\"{row}\">\n                  {{ row.price|MoneyFormat }} 元\n                </template>\n              </el-table-column>\n            </el-table>\n          </el-main>\n          <el-footer height=\"45px\">\n            <pagination\n              v-show=\"factTotal>0\"\n              :total=\"factTotal\"\n              :page.sync=\"factorForm.pageNumber\"\n              :limit.sync=\"factorForm.pageSize\"\n              @pagination=\"handleFactorSearch\"\n            />\n          </el-footer>\n        </el-container>\n\n      </el-col>\n    </el-row>\n    <el-divider content-position=\"left\">已选因子</el-divider>\n    <el-row style=\"min-height:36px;line-height: 30px\">\n      <el-col :span=\"2\">\n        <span>已选中因子:</span>\n      </el-col>\n      <el-col :span=\"22\">\n        <template v-if=\"choseFatcors && choseFatcors.length > 0\">\n          <el-tag\n            v-for=\"item in choseFatcors\"\n            :key=\"item.id\"\n            closable\n            :disable-transitions=\"false\"\n            style=\"margin:2px 3px\"\n            @close=\"handleClose(item)\"\n          >\n            {{ item.factorName }}\n          </el-tag>\n        </template>\n        <template v-else>\n          无\n        </template>\n      </el-col>\n    </el-row>\n    <el-divider content-position=\"left\">因子配置</el-divider>\n    <el-form>\n      <el-row :gutter=\"10\">\n        <el-col :span=\"6\">\n          <el-form-item v-if=\"currentNodeId === '002001'\" label=\"均值类型:\" label-width=\"100px\">\n            <el-select v-model=\"meanType\" placeholder=\"请选择均值类型\" @change=\"changeMeanType\">\n              <el-option value=\"0\" label=\"日均值\" />\n              <el-option value=\"1\" label=\"时均值\" />\n              <el-option value=\"2\" label=\"八小时均值\" />\n            </el-select>\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"6\">\n          <el-form-item label=\"天数:\" label-width=\"100px\">\n            <el-input-number v-model=\"setDay\" controls-position=\"right\" :min=\"1\" :step=\"1\" :precision=\"0\" />\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"6\">\n          <el-form-item label=\"频次(次/天):\" label-width=\"110px\">\n            <el-input-number v-model=\"frequency\" controls-position=\"right\" :max=\"maxTotal\" :min=\"1\" :step=\"1\" :precision=\"0\" />\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"24\">\n          <el-form-item :label=\"addressArray && addressArray.length >0 ?'检测位置1:':'检测位置:'\" label-width=\"100px\">\n            <el-input v-model=\"lookPosition\" placeholder=\"检测位置\" style=\"width: 250px;margin-right:3px\" />\n          </el-form-item>\n        </el-col>\n      </el-row>\n      <el-row>\n        <el-col v-for=\"(item, index) in addressArray\" :key=\"item.key\" :span=\"24\">\n          <el-form-item :label=\"'检测位置'+(index+2)+':'\" label-width=\"100px\">\n            <el-input v-model=\"item.value\" placeholder=\"检测位置\" style=\"width: 250px;margin-right:3px\" />\n            <el-button v-if=\"currentNodeId !== '002001' && currentNodeId !== '002003'\" type=\"text\" size=\"small\" @click.prevent=\"removeAddDomain(item)\">删除</el-button>\n          </el-form-item>\n        </el-col>\n        <el-col v-if=\"currentNodeId !== '002003' && currentNodeId !== '002001'\" :span=\"24\" style=\"padding-left:20px\">\n          <el-form-item>\n            <el-button type=\"primary\" @click=\"addAddress\">添加位置</el-button>\n          </el-form-item>\n        </el-col>\n      </el-row>\n    </el-form>\n    <el-divider />\n    <el-row>\n      <el-col :span=\"24\" style=\"text-align: right;\">\n        <el-button type=\"\" @click=\"cancelComfig\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"confirmChoseFactor\">确 定</el-button>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nconst MEAN_STATUS = {\n  '0': '日均值',\n  '1': '时均值',\n  '2': '八小时均值'\n}\nimport Pagination from '@/components/Pagination' // Secondary\nimport * as factorServer from '@/api/factor'\nimport { uuid } from 'vue-uuid'\nimport * as dictServer from '@/api/dict'\nexport default {\n  name: 'FactorChoseList',\n  components: { Pagination },\n  props: {\n    clearType: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      MEAN_STATUS,\n      factorTreeData: [],\n      addressArray: [],\n      currentNodeId: '',\n      currentNodeName: '',\n      lookPosition: '',\n      defaultProps: {\n        children: 'children',\n        label: 'name',\n        id: 'id'\n      },\n      factTotal: 0,\n      factorForm: {\n        classId: '',\n        factorName: '',\n        pageNumber: 1,\n        pageSize: 10\n      },\n      choseFatcors: [],\n      showChoseData: [],\n      multipleSelection: [],\n      maxTotal: 10,\n      setDay: 1,\n      frequency: 1, // 频次\n      meanType: '0'\n\n    }\n  },\n  watch: {\n    clearType() {\n      this.factorForm.factorName = ''\n      this.showChoseData = []\n      this.addressArray = []\n      this.choseFatcors = []\n      this.multipleSelection = []\n      this.setDay = 1\n      this.frequency = 1\n      this.lookPosition = ''\n    }\n  },\n  created() {\n    this.getTreeClassList()\n  },\n  methods: {\n    getTreeClassList() {\n      dictServer.findTreeClasses().then(res => {\n        this.factorTreeData = res.result || []\n      })\n    },\n    handleTreeFactorSearch(val, node) {\n      if (!val.children || val.children == null) {\n        // if (!this.currentNodeId || this.currentNodeId !== val.id) {\n        this.addressArray = []\n        this.currentNodeId = val.id\n        this.currentNodeName = val.name\n        this.factorForm.classId = node.parent.data.id\n        this.factorForm.factorName = ''\n        this.factorForm.pageNumber = 1\n        this.handleFactorSearch()\n        // 清空已经选择的信息\n        this.choseFatcors = []\n        this.multipleSelection = []\n\n        if (val.id === '002001' && this.meanType === '0') {\n          this.maxTotal = 1\n        } else if (val.id === '004001') {\n          this.maxTotal = 2\n        } else {\n          this.maxTotal = 10\n        }\n        if (val.id === '002003') { // 厂界无组织/ 环境空气 自动生成5个点位\n          this.$nextTick(() => {\n            for (var i = 0; i < 4; i++) {\n              this.addressArray.push({\n                value: '',\n                windNum: 3,\n                key: Date.now() + i\n              })\n            }\n          })\n        } else if (val.id === '002001') {\n          this.$nextTick(() => {\n            for (var i = 0; i < 3; i++) {\n              this.addressArray.push({\n                value: '',\n                windNum: 3,\n                key: Date.now() + i\n              })\n            }\n          })\n        }\n        // }\n        // 为底层的时候\n      }\n    },\n    handleFactorSearch() {\n      if (this.currentNodeId && this.currentNodeId.length > 0) {\n        factorServer.getFactorListForPage(this.factorForm).then(res => {\n          if (res.code === 200) {\n            this.showChoseData = res.result.records || []\n            this.factTotal = res.result.total\n          }\n        })\n      }\n    },\n    handleSelectionChange(val) {\n      this.multipleSelection = val\n      if (val) {\n        val.forEach(i => {\n          const ob = this.choseFatcors.find(j => j.id === i.id)\n          if (!ob) {\n            this.choseFatcors.push(i)\n          }\n        })\n      }\n    },\n    handleSelectChange(val, row) {\n      // 先判定是否取消\n      if (val) {\n        if (val.indexOf(row) === -1) {\n          const index = this.choseFatcors.findIndex(i => i.id === row.id)\n          this.choseFatcors.splice(index, 1)\n        }\n      }\n    },\n    changeMeanType(val) {\n      let curTotal = 0\n      if (val === '0') {\n        this.maxTotal = curTotal = 1\n      } else if (val === '1') {\n        this.maxTotal = curTotal = 4\n      } else if (val === '2') {\n        this.maxTotal = curTotal = 2\n      }\n      if (this.frequency > curTotal) {\n        this.frequency = curTotal\n      }\n    },\n    addAddress() {\n      this.$nextTick(() => {\n        this.addressArray.push({\n          value: '',\n          windNum: 3,\n          key: Date.now()\n        })\n      })\n    },\n    handleClose(item) {\n      // 移除存储的因子\n      this.choseFatcors.splice(this.choseFatcors.indexOf(item), 1)\n      this.$refs.multipleTable.toggleRowSelection(item, false)\n    },\n    confirmChoseFactor() {\n      if (!this.choseFatcors || this.choseFatcors.length <= 0) {\n        this.$message.warning('因子不能为空')\n        return\n      }\n      if (!this.lookPosition || this.lookPosition.length <= 0) {\n        this.$message.warning('初始检测位置不能为空')\n        return\n      }\n      const dynamic = {}\n      if (this.currentNodeId === '002001') {\n        this.$set(dynamic, 'meanType', this.meanType)\n        this.$set(dynamic, 'meanName', this.MEAN_STATUS[this.meanType])\n      }\n      let groupId = ''\n      if (this.currentNodeId === '002001' || this.currentNodeId === '002003') {\n        groupId = this.currentNodeId\n      }\n      const retListArray = this.choseFatcors.map(i => {\n        const { standardCode, className, dataEntryStep, standardNo, standardName, factorName, price } = i\n        const cost = parseFloat(price * this.frequency * this.setDay).toFixed(2)\n        const n_UUid = uuid.v4().replaceAll('-', '')\n        this.$set(i, 'factorGroupKey', n_UUid)\n        return {\n          checkStandardId: standardCode,\n          className,\n          standardName,\n          factorName,\n          fbFlag: '0',\n          isFactor: '0',\n          factorFlag: '0',\n          standardNo,\n          dataEntryStep,\n          secdClassId: this.currentNodeId,\n          secdClassName: this.currentNodeName,\n          frequency: this.frequency,\n          dayCount: this.setDay,\n          totalNum: Number(this.frequency * this.setDay).toFixed(0),\n          costPerTime: price,\n          totalCost: cost,\n          meanName: this.currentNodeId === '002001' ? this.MEAN_STATUS[this.meanType] : undefined,\n          factorPoint: this.lookPosition.trim(),\n          groupClassId: groupId !== '' ? (groupId + '/' + standardCode) : '',\n          dynamicParam: JSON.stringify(dynamic),\n          factorGroupKey: n_UUid // 每次添加因子，同组的归为一类\n        }\n      })\n      if (this.addressArray && this.addressArray.length > 0) {\n        this.addressArray.forEach(item => {\n          if (item.value && item.value.length > 0) {\n            this.choseFatcors.forEach(j => {\n              const { standardCode, className, standardNo, dataEntryStep, standardName, factorName, price, factorGroupKey } = j\n              const cost = parseFloat(price * this.frequency * this.setDay).toFixed(2)\n              retListArray.push({\n                checkStandardId: standardCode,\n                className,\n                standardName,\n                factorName,\n                fbFlag: '0',\n                isFactor: '0',\n                factorFlag: '0',\n                standardNo,\n                dataEntryStep,\n                secdClassId: this.currentNodeId,\n                secdClassName: this.currentNodeName,\n                frequency: this.frequency,\n                dayCount: this.setDay,\n                totalNum: Number(this.frequency * this.setDay).toFixed(0),\n                costPerTime: price,\n                totalCost: cost,\n                factorPoint: item.value,\n                remark: '',\n                meanName: this.currentNodeId === '002001' ? this.MEAN_STATUS[this.meanType] : undefined,\n                groupClassId: groupId !== '' ? (groupId + '/' + standardCode) : '',\n                dynamicParam: JSON.stringify(dynamic),\n                factorGroupKey // 每次添加因子，同组的归为一类\n              })\n            })\n          }\n        })\n      }\n      this.formComfig(retListArray)\n    },\n    formComfig(items) {\n      debugger\n      this.$emit('handleConfim', items)\n    },\n    cancelComfig() {\n      this.$emit('handleCancel', false)\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/components/FactorChoseList"}]}