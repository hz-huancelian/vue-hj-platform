{"remainingRequest":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\babel-loader\\lib\\index.js!F:\\webstormProjects\\vue-hj-platform\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\webstormProjects\\vue-hj-platform\\src\\api\\check.js","dependencies":[{"path":"F:\\webstormProjects\\vue-hj-platform\\src\\api\\check.js","mtime":1648122982000},{"path":"F:\\webstormProjects\\vue-hj-platform\\babel.config.js","mtime":1637214064000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"F:\\\\webstormProjects\\\\vue-hj-platform\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\interopRequireDefault.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assignmentsFactor = assignmentsFactor;\nexports.auditCheckFactor = auditCheckFactor;\nexports.batchAuditCheckFactor = batchAuditCheckFactor;\nexports.batchSampDrawApply = batchSampDrawApply;\nexports.findByCondition = findByCondition;\nexports.findCheckFactorByCondition = findCheckFactorByCondition;\nexports.findCheckTaskByCondition = findCheckTaskByCondition;\nexports.findCheckTaskDetailByCondition0 = findCheckTaskDetailByCondition0;\nexports.findCheckTaskDetailByCondition1 = findCheckTaskDetailByCondition1;\nexports.findHisFactorByCondition = findHisFactorByCondition;\nexports.findHistoryByCondition = findHistoryByCondition;\nexports.findSubFactorByCheckStandId = findSubFactorByCheckStandId;\nexports.getCheckFactorInfos = getCheckFactorInfos;\nexports.getCheckUsers = getCheckUsers;\nexports.getOfferFactorsByTaskId = getOfferFactorsByTaskId;\nexports.sampDrawApply = sampDrawApply;\nexports.saveCheckFactorData = saveCheckFactorData;\nexports.submitCheckFactor = submitCheckFactor;\n\nvar _request = _interopRequireDefault(require(\"@/utils/request\"));\n\n/* ***************************化验室任务调度*************************** */\n// 分页查询检测任务列表(未完成的)\nfunction findByCondition(params) {\n  return (0, _request.default)({\n    url: \"/checkTask/findByCondition\",\n    method: 'get',\n    params: params\n  });\n} // 分页查询检测任务列表(历史，已完成)\n\n\nfunction findHistoryByCondition(params) {\n  return (0, _request.default)({\n    url: \"/checkTask/findHistoryByCondition\",\n    method: 'get',\n    params: params\n  });\n} // 根据检测任务号查询检测列表\n\n\nfunction getCheckFactorInfos(params) {\n  return (0, _request.default)({\n    url: \"/checkTask/getCheckFactorInfos\",\n    method: 'get',\n    params: params\n  });\n} // 根据检测任务查询检测因子\n\n\nfunction getOfferFactorsByTaskId(checkTaskId) {\n  return (0, _request.default)({\n    url: \"/checkTask/getOfferFactorsByTaskId/\".concat(checkTaskId),\n    method: 'get'\n  });\n} // 因子分配\n\n\nfunction assignmentsFactor(data) {\n  return (0, _request.default)({\n    url: \"/checkTask/assignmentsFactor\",\n    method: 'post',\n    data: data\n  });\n} // 检测员列表\n\n\nfunction getCheckUsers() {\n  return (0, _request.default)({\n    url: \"/checkTask/getCheckUsers\",\n    method: 'get'\n  });\n}\n/* ***************************化验室样品列表*************************** */\n// 检测列表\n\n\nfunction findCheckFactorByCondition(params) {\n  return (0, _request.default)({\n    url: \"/checkFactor/findAuditCheckFactorByCondition\",\n    method: 'get',\n    params: params\n  });\n} // 检测列表历史\n\n\nfunction findHisFactorByCondition(params) {\n  return (0, _request.default)({\n    url: \"/checkFactor/findHistoryByCondition\",\n    method: 'get',\n    params: params\n  });\n} // 根据检测列表中的检测标准ID查询子因子\n\n\nfunction findSubFactorByCheckStandId(checkStandardId) {\n  return (0, _request.default)({\n    url: \"/checkFactor/findSubFactorByCheckStandId/\".concat(checkStandardId),\n    method: 'get'\n  });\n} // 检测录入结果提交\n\n\nfunction saveCheckFactorData(data) {\n  return (0, _request.default)({\n    url: \"/checkFactor/saveCheckFactorData\",\n    method: 'post',\n    data: data\n  });\n} // 检测列表提交审核\n\n\nfunction submitCheckFactor(params) {\n  return (0, _request.default)({\n    url: \"/checkFactor/submitCheckFactor\",\n    method: 'get',\n    params: params\n  });\n} // 检测负责人审核检测列表\n\n\nfunction auditCheckFactor(data) {\n  return (0, _request.default)({\n    url: \"/checkFactor/auditCheckFactor\",\n    method: 'post',\n    data: data\n  });\n} // 检测员单个申请领样\n\n\nfunction sampDrawApply(data) {\n  return (0, _request.default)({\n    url: \"/checkFactor/sampDrawApply\",\n    method: 'post',\n    data: data\n  });\n} // 批量审核\n\n\nfunction batchAuditCheckFactor(data) {\n  return (0, _request.default)({\n    url: \"/checkFactor/batchAuditCheckFactor\",\n    method: 'post',\n    data: data\n  });\n}\n/** **********************检测列表任务查看**************************/\n// 分页查询检测任务列表-用于检测列表\n\n\nfunction findCheckTaskByCondition(params) {\n  return (0, _request.default)({\n    url: \"/checkTask/findCheckTaskByCondition\",\n    method: 'get',\n    params: params\n  });\n} // 分页查询检测因子明显-通过任务获取\n\n\nfunction findCheckTaskDetailByCondition0(params) {\n  return (0, _request.default)({\n    url: \"/checkTask/findCheckTaskDetailByCondition0\",\n    method: 'get',\n    params: params\n  });\n} // 分页查询检测因子明显-通过任务获取\n\n\nfunction findCheckTaskDetailByCondition1(params) {\n  return (0, _request.default)({\n    url: \"/checkTask/findCheckTaskDetailByCondition1\",\n    method: 'get',\n    params: params\n  });\n} // 分页查询检测因子明显-通过任务获取\n\n\nfunction batchSampDrawApply(data) {\n  return (0, _request.default)({\n    url: \"/checkFactor/batchSampDrawApply\",\n    method: 'post',\n    data: data\n  });\n}",{"version":3,"sources":["F:/webstormProjects/vue-hj-platform/src/api/check.js"],"names":["findByCondition","params","url","method","findHistoryByCondition","getCheckFactorInfos","getOfferFactorsByTaskId","checkTaskId","assignmentsFactor","data","getCheckUsers","findCheckFactorByCondition","findHisFactorByCondition","findSubFactorByCheckStandId","checkStandardId","saveCheckFactorData","submitCheckFactor","auditCheckFactor","sampDrawApply","batchAuditCheckFactor","findCheckTaskByCondition","findCheckTaskDetailByCondition0","findCheckTaskDetailByCondition1","batchSampDrawApply"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;AACA;AACO,SAASA,eAAT,CAAyBC,MAAzB,EAAiC;AACtC,SAAO,sBAAQ;AACbC,IAAAA,GAAG,8BADU;AAEbC,IAAAA,MAAM,EAAE,KAFK;AAGbF,IAAAA,MAAM,EAANA;AAHa,GAAR,CAAP;AAKD,C,CAED;;;AACO,SAASG,sBAAT,CAAgCH,MAAhC,EAAwC;AAC7C,SAAO,sBAAQ;AACbC,IAAAA,GAAG,qCADU;AAEbC,IAAAA,MAAM,EAAE,KAFK;AAGbF,IAAAA,MAAM,EAANA;AAHa,GAAR,CAAP;AAKD,C,CAED;;;AACO,SAASI,mBAAT,CAA6BJ,MAA7B,EAAqC;AAC1C,SAAO,sBAAQ;AACbC,IAAAA,GAAG,kCADU;AAEbC,IAAAA,MAAM,EAAE,KAFK;AAGbF,IAAAA,MAAM,EAANA;AAHa,GAAR,CAAP;AAKD,C,CAED;;;AACO,SAASK,uBAAT,CAAiCC,WAAjC,EAA8C;AACnD,SAAO,sBAAQ;AACbL,IAAAA,GAAG,+CAAwCK,WAAxC,CADU;AAEbJ,IAAAA,MAAM,EAAE;AAFK,GAAR,CAAP;AAID,C,CAED;;;AACO,SAASK,iBAAT,CAA2BC,IAA3B,EAAiC;AACtC,SAAO,sBAAQ;AACbP,IAAAA,GAAG,gCADU;AAEbC,IAAAA,MAAM,EAAE,MAFK;AAGbM,IAAAA,IAAI,EAAJA;AAHa,GAAR,CAAP;AAKD,C,CAED;;;AACO,SAASC,aAAT,GAAyB;AAC9B,SAAO,sBAAQ;AACbR,IAAAA,GAAG,4BADU;AAEbC,IAAAA,MAAM,EAAE;AAFK,GAAR,CAAP;AAID;AAED;AACA;;;AACO,SAASQ,0BAAT,CAAoCV,MAApC,EAA4C;AACjD,SAAO,sBAAQ;AACbC,IAAAA,GAAG,gDADU;AAEbC,IAAAA,MAAM,EAAE,KAFK;AAGbF,IAAAA,MAAM,EAANA;AAHa,GAAR,CAAP;AAKD,C,CACD;;;AACO,SAASW,wBAAT,CAAkCX,MAAlC,EAA0C;AAC/C,SAAO,sBAAQ;AACbC,IAAAA,GAAG,uCADU;AAEbC,IAAAA,MAAM,EAAE,KAFK;AAGbF,IAAAA,MAAM,EAANA;AAHa,GAAR,CAAP;AAKD,C,CAED;;;AACO,SAASY,2BAAT,CAAqCC,eAArC,EAAsD;AAC3D,SAAO,sBAAQ;AACbZ,IAAAA,GAAG,qDAA8CY,eAA9C,CADU;AAEbX,IAAAA,MAAM,EAAE;AAFK,GAAR,CAAP;AAID,C,CAED;;;AACO,SAASY,mBAAT,CAA6BN,IAA7B,EAAmC;AACxC,SAAO,sBAAQ;AACbP,IAAAA,GAAG,oCADU;AAEbC,IAAAA,MAAM,EAAE,MAFK;AAGbM,IAAAA,IAAI,EAAJA;AAHa,GAAR,CAAP;AAKD,C,CACD;;;AACO,SAASO,iBAAT,CAA2Bf,MAA3B,EAAmC;AACxC,SAAO,sBAAQ;AACbC,IAAAA,GAAG,kCADU;AAEbC,IAAAA,MAAM,EAAE,KAFK;AAGbF,IAAAA,MAAM,EAANA;AAHa,GAAR,CAAP;AAKD,C,CAED;;;AACO,SAASgB,gBAAT,CAA0BR,IAA1B,EAAgC;AACrC,SAAO,sBAAQ;AACbP,IAAAA,GAAG,iCADU;AAEbC,IAAAA,MAAM,EAAE,MAFK;AAGbM,IAAAA,IAAI,EAAJA;AAHa,GAAR,CAAP;AAKD,C,CAED;;;AACO,SAASS,aAAT,CAAuBT,IAAvB,EAA6B;AAClC,SAAO,sBAAQ;AACbP,IAAAA,GAAG,8BADU;AAEbC,IAAAA,MAAM,EAAE,MAFK;AAGbM,IAAAA,IAAI,EAAJA;AAHa,GAAR,CAAP;AAKD,C,CAED;;;AACO,SAASU,qBAAT,CAA+BV,IAA/B,EAAqC;AAC1C,SAAO,sBAAQ;AACbP,IAAAA,GAAG,sCADU;AAEbC,IAAAA,MAAM,EAAE,MAFK;AAGbM,IAAAA,IAAI,EAAJA;AAHa,GAAR,CAAP;AAKD;AAED;AACA;;;AACO,SAASW,wBAAT,CAAkCnB,MAAlC,EAA0C;AAC/C,SAAO,sBAAQ;AACbC,IAAAA,GAAG,uCADU;AAEbC,IAAAA,MAAM,EAAE,KAFK;AAGbF,IAAAA,MAAM,EAANA;AAHa,GAAR,CAAP;AAKD,C,CAED;;;AACO,SAASoB,+BAAT,CAAyCpB,MAAzC,EAAiD;AACtD,SAAO,sBAAQ;AACbC,IAAAA,GAAG,8CADU;AAEbC,IAAAA,MAAM,EAAE,KAFK;AAGbF,IAAAA,MAAM,EAANA;AAHa,GAAR,CAAP;AAKD,C,CAED;;;AACO,SAASqB,+BAAT,CAAyCrB,MAAzC,EAAiD;AACtD,SAAO,sBAAQ;AACbC,IAAAA,GAAG,8CADU;AAEbC,IAAAA,MAAM,EAAE,KAFK;AAGbF,IAAAA,MAAM,EAANA;AAHa,GAAR,CAAP;AAKD,C,CACD;;;AACO,SAASsB,kBAAT,CAA4Bd,IAA5B,EAAkC;AACvC,SAAO,sBAAQ;AACbP,IAAAA,GAAG,mCADU;AAEbC,IAAAA,MAAM,EAAE,MAFK;AAGbM,IAAAA,IAAI,EAAJA;AAHa,GAAR,CAAP;AAKD","sourcesContent":["import request from '@/utils/request'\n\n/* ***************************化验室任务调度*************************** */\n// 分页查询检测任务列表(未完成的)\nexport function findByCondition(params) {\n  return request({\n    url: `/checkTask/findByCondition`,\n    method: 'get',\n    params\n  })\n}\n\n// 分页查询检测任务列表(历史，已完成)\nexport function findHistoryByCondition(params) {\n  return request({\n    url: `/checkTask/findHistoryByCondition`,\n    method: 'get',\n    params\n  })\n}\n\n// 根据检测任务号查询检测列表\nexport function getCheckFactorInfos(params) {\n  return request({\n    url: `/checkTask/getCheckFactorInfos`,\n    method: 'get',\n    params\n  })\n}\n\n// 根据检测任务查询检测因子\nexport function getOfferFactorsByTaskId(checkTaskId) {\n  return request({\n    url: `/checkTask/getOfferFactorsByTaskId/${checkTaskId}`,\n    method: 'get'\n  })\n}\n\n// 因子分配\nexport function assignmentsFactor(data) {\n  return request({\n    url: `/checkTask/assignmentsFactor`,\n    method: 'post',\n    data\n  })\n}\n\n// 检测员列表\nexport function getCheckUsers() {\n  return request({\n    url: `/checkTask/getCheckUsers`,\n    method: 'get'\n  })\n}\n\n/* ***************************化验室样品列表*************************** */\n// 检测列表\nexport function findCheckFactorByCondition(params) {\n  return request({\n    url: `/checkFactor/findAuditCheckFactorByCondition`,\n    method: 'get',\n    params\n  })\n}\n// 检测列表历史\nexport function findHisFactorByCondition(params) {\n  return request({\n    url: `/checkFactor/findHistoryByCondition`,\n    method: 'get',\n    params\n  })\n}\n\n// 根据检测列表中的检测标准ID查询子因子\nexport function findSubFactorByCheckStandId(checkStandardId) {\n  return request({\n    url: `/checkFactor/findSubFactorByCheckStandId/${checkStandardId}`,\n    method: 'get'\n  })\n}\n\n// 检测录入结果提交\nexport function saveCheckFactorData(data) {\n  return request({\n    url: `/checkFactor/saveCheckFactorData`,\n    method: 'post',\n    data\n  })\n}\n// 检测列表提交审核\nexport function submitCheckFactor(params) {\n  return request({\n    url: `/checkFactor/submitCheckFactor`,\n    method: 'get',\n    params\n  })\n}\n\n// 检测负责人审核检测列表\nexport function auditCheckFactor(data) {\n  return request({\n    url: `/checkFactor/auditCheckFactor`,\n    method: 'post',\n    data\n  })\n}\n\n// 检测员单个申请领样\nexport function sampDrawApply(data) {\n  return request({\n    url: `/checkFactor/sampDrawApply`,\n    method: 'post',\n    data\n  })\n}\n\n// 批量审核\nexport function batchAuditCheckFactor(data) {\n  return request({\n    url: `/checkFactor/batchAuditCheckFactor`,\n    method: 'post',\n    data\n  })\n}\n\n/** **********************检测列表任务查看**************************/\n// 分页查询检测任务列表-用于检测列表\nexport function findCheckTaskByCondition(params) {\n  return request({\n    url: `/checkTask/findCheckTaskByCondition`,\n    method: 'get',\n    params\n  })\n}\n\n// 分页查询检测因子明显-通过任务获取\nexport function findCheckTaskDetailByCondition0(params) {\n  return request({\n    url: `/checkTask/findCheckTaskDetailByCondition0`,\n    method: 'get',\n    params\n  })\n}\n\n// 分页查询检测因子明显-通过任务获取\nexport function findCheckTaskDetailByCondition1(params) {\n  return request({\n    url: `/checkTask/findCheckTaskDetailByCondition1`,\n    method: 'get',\n    params\n  })\n}\n// 分页查询检测因子明显-通过任务获取\nexport function batchSampDrawApply(data) {\n  return request({\n    url: `/checkFactor/batchSampDrawApply`,\n    method: 'post',\n    data\n  })\n}\n"]}]}