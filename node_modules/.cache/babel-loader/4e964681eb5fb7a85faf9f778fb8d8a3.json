{"remainingRequest":"F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\babel-loader\\lib\\index.js!F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\webstormProjectsJiu\\vue-hj-platform\\src\\views\\system\\user\\userList.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\src\\views\\system\\user\\userList.vue","mtime":1647225793000},{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\babel.config.js","mtime":1637214064000},{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"F:\\\\webstormProjectsJiu\\\\vue-hj-platform\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\interopRequireDefault.js\");\n\nvar _interopRequireWildcard = require(\"F:\\\\webstormProjectsJiu\\\\vue-hj-platform\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\interopRequireWildcard.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.array.find\");\n\nvar userServer = _interopRequireWildcard(require(\"@/api/user\"));\n\nvar deptServer = _interopRequireWildcard(require(\"@/api/dept\"));\n\nvar _Pagination = _interopRequireDefault(require(\"@/components/Pagination\"));\n\nvar _validate = require(\"@/utils/validate\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// Secondary package based on el-pagination\nvar ACCOUNT_STATUS = {\n  '0': '有效',\n  '1': '无效'\n};\nvar _default = {\n  name: 'UserList',\n  components: {\n    Pagination: _Pagination.default\n  },\n  data: function data() {\n    var validatePhone = function validatePhone(rule, value, callback) {\n      if (value && value.length > 0) {\n        if ((0, _validate.validPhone)(value)) {\n          callback();\n        } else {\n          callback(new Error('输入正确的电话号码'));\n        }\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      ACCOUNT_STATUS: ACCOUNT_STATUS,\n      userData: [],\n      searchForm: {\n        empCode: '',\n        empName: '',\n        deptId: '',\n        status: '',\n        pageNumber: 1,\n        pageSize: 10\n      },\n      total: 0,\n      titleMap: {\n        edit: '修改用户',\n        create: '新增用户'\n      },\n      userForm: {\n        empCode: '',\n        userId: '',\n        deptId: '',\n        empName: '',\n        platformPositionId: '',\n        phone: ''\n      },\n      userRules: {\n        phone: [{\n          required: true,\n          message: '请录入联系方式',\n          trigger: 'blur'\n        }, {\n          required: true,\n          validator: validatePhone,\n          trigger: 'blur'\n        }],\n        empName: [{\n          required: true,\n          message: '请录入姓名信息',\n          trigger: 'blur'\n        }],\n        empCode: [{\n          required: true,\n          message: '请录入员工编号',\n          trigger: 'blur'\n        }],\n        deptId: [{\n          required: true,\n          message: '请选择部门',\n          trigger: 'change'\n        }],\n        platformPositionId: [{\n          required: true,\n          message: '请选择岗位',\n          trigger: 'change'\n        }]\n      },\n      userDialogStatus: 'create',\n      userDialogVisible: false,\n      deptArray: [],\n      currentRow: {},\n      postionVisible: false,\n      chosePosition: [],\n      postionArray: {},\n      otherPositArray: {},\n      otherDeptId: '',\n      otherPostId: ''\n    };\n  },\n  created: function created() {\n    this.getDeptTreeList();\n    this.handleSearch();\n  },\n  methods: {\n    getDeptTreeList: function getDeptTreeList() {\n      var _this = this;\n\n      deptServer.getDeptList().then(function (res) {\n        _this.deptArray = res.result || [];\n      });\n    },\n    handleSearch: function handleSearch() {\n      var _this2 = this;\n\n      userServer.getUserListForPage(this.searchForm).then(function (res) {\n        if (res.code === 200) {\n          _this2.userData = res.result.records || [];\n          _this2.total = res.result.total;\n        }\n      });\n    },\n    // 重置\n    handleCreate: function handleCreate() {\n      this.clearForm();\n      this.userDialogStatus = 'create';\n      this.userDialogVisible = true;\n\n      if (this.$refs.userForm !== undefined) {\n        this.$refs.userForm.resetFields();\n      }\n    },\n    handleUpdate: function handleUpdate(row) {\n      if (this.$refs.userForm !== undefined) {\n        this.$refs.userForm.resetFields();\n      }\n\n      this.userForm.userId = row.id;\n      this.userForm.empCode = row.empCode;\n      this.userForm.empName = row.empName || '';\n      this.userForm.deptId = row.deptId || '';\n      this.userForm.phone = row.phone || '';\n      this.handleChange(row.deptId);\n      this.userForm.platformPositionId = row.platformPositionId || '';\n      this.userDialogStatus = 'edit';\n      this.userDialogVisible = true;\n    },\n    confirmDialog: function confirmDialog() {\n      if (this.userDialogStatus === 'create') {\n        this.confirmCreate();\n      } else {\n        this.confirmUpdate();\n      }\n    },\n    confirmOtherDialog: function confirmOtherDialog() {\n      var _this3 = this;\n\n      if (this.chosePosition && this.chosePosition.length > 0) {\n        var data = {\n          userId: this.currentRow.id,\n          postIds: this.chosePosition.map(function (i) {\n            var deptId = i.deptId,\n                platformPositionId = i.platformPositionId;\n            return {\n              deptId: deptId,\n              platformPositionId: platformPositionId\n            };\n          })\n        };\n        userServer.saveOtherPositions(data).then(function (result) {\n          if (result.code === 200) {\n            _this3.$notify({\n              title: '成功',\n              message: result.message,\n              type: 'success'\n            });\n\n            _this3.handleSearch();\n\n            _this3.postionVisible = false;\n          } else {\n            _this3.$notify({\n              title: '失败',\n              message: result.message,\n              type: 'error'\n            });\n          }\n        });\n      } else {\n        this.$message.warning('至少选择一个挂职的岗位');\n      }\n    },\n    confirmCreate: function confirmCreate() {\n      var _this4 = this;\n\n      this.$refs.userForm.validate(function (valid) {\n        if (valid) {\n          userServer.addUserInfo(_this4.userForm).then(function (request) {\n            _this4.$notify({\n              title: '成功',\n              message: request.message,\n              type: 'success'\n            });\n\n            _this4.handleSearch();\n\n            _this4.userDialogVisible = false;\n\n            _this4.$refs.userForm.resetFields();\n          }).catch(function () {});\n        } else {\n          return false;\n        }\n      });\n    },\n    confirmUpdate: function confirmUpdate() {\n      var _this5 = this;\n\n      this.$refs.userForm.validate(function (valid) {\n        if (valid) {\n          userServer.saveUserInfo(_this5.userForm).then(function (request) {\n            _this5.$notify({\n              title: '成功',\n              message: request.message,\n              type: 'success'\n            });\n\n            _this5.handleSearch();\n\n            _this5.userDialogVisible = false;\n\n            _this5.$refs.userForm.resetFields();\n          }).catch(function () {});\n        } else {\n          return false;\n        }\n      });\n    },\n    handleDelete: function handleDelete(userId) {\n      var _this6 = this;\n\n      this.$confirm('确定注销?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        userServer.resetUser(userId).then(function (result) {\n          if (result.code === 200) {\n            _this6.$notify({\n              title: '成功',\n              message: result.message,\n              type: 'success'\n            });\n\n            _this6.handleSearch();\n          } else {\n            _this6.$notify({\n              title: '失败',\n              message: result.message,\n              type: 'error'\n            });\n          }\n        });\n      }).catch(function () {});\n    },\n    handleResetPwd: function handleResetPwd(userId) {\n      var _this7 = this;\n\n      this.$confirm('确定重置?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        userServer.resetUser(userId).then(function (result) {\n          if (result.code === 200) {\n            _this7.$notify({\n              title: '成功',\n              message: result.message,\n              type: 'success'\n            });\n\n            _this7.handleSearch();\n          } else {\n            _this7.$notify({\n              title: '失败',\n              message: result.message,\n              type: 'error'\n            });\n          }\n        });\n      }).catch(function () {});\n    },\n    clearForm: function clearForm() {\n      this.userForm = {\n        userId: '',\n        deptId: '',\n        empCode: '',\n        empName: '',\n        platformPositionId: '',\n        phone: ''\n      };\n    },\n    handleChange: function handleChange(val) {\n      var _this8 = this;\n\n      this.postionArray = {};\n      this.userForm.platformPositionId = '';\n\n      if (val) {\n        var obj = this.deptArray.find(function (i) {\n          return i.id === val;\n        });\n\n        if (obj) {\n          deptServer.dpfindPositionIdByDeptId(obj.platformDeptId).then(function (res) {\n            _this8.$nextTick(function () {\n              _this8.postionArray = res.result || {};\n            });\n          });\n        }\n      }\n    },\n    handleDepartChange: function handleDepartChange(val) {\n      var _this9 = this;\n\n      this.otherPositArray = {};\n      this.otherPostId = '';\n\n      if (val) {\n        var obj = this.deptArray.find(function (i) {\n          return i.id === val;\n        });\n\n        if (obj) {\n          deptServer.dpfindPositionIdByDeptId(obj.platformDeptId).then(function (res) {\n            _this9.otherPositArray = res.result || {};\n          });\n        }\n      }\n    },\n    handlePosChange: function handlePosChange(val) {\n      if (val) {\n        var ob = this.chosePosition.find(function (j) {\n          return j.platformPositionId === val;\n        });\n\n        if (!ob) {\n          this.chosePosition.push({\n            platformPositionId: val,\n            deptId: this.otherDeptId,\n            platformDeptName: this.otherPositArray[val]\n          });\n        }\n      }\n    },\n    handleRelation: function handleRelation(row) {\n      var _this10 = this;\n\n      this.chosePosition = [];\n      this.currentRow = Object.assign({}, row);\n      var posIds = [];\n      var depNames = [];\n      var posNames = [];\n\n      if (row.positionNames && row.positionNames.length > 0) {\n        var firstPos = row.positionNames.split(';');\n        var firstPosIds = row.positionIds.split(',');\n\n        if (firstPos && firstPos.length > 0) {\n          firstPos.forEach(function (element) {\n            depNames.push(element.split('/')[0]);\n            posNames.push(element.split('/')[1]);\n          });\n          posIds = firstPosIds;\n        } else {\n          posIds.push(row.positionIds);\n          depNames.push(row.positionNames.split('/')[0]);\n          posNames.push(row.positionNames.split('/')[1]);\n        }\n\n        posIds.forEach(function (i, index) {\n          var ob = {\n            platformPositionId: i,\n            deptId: _this10.getDepartIdForName(depNames[index]),\n            platformDeptName: posNames[index]\n          };\n\n          _this10.chosePosition.push(ob);\n        });\n      }\n\n      this.postionVisible = true;\n    },\n    getDepartIdForName: function getDepartIdForName(name) {\n      var o = this.deptArray.find(function (i) {\n        return i.deptName === name;\n      });\n      return o.id || '';\n    },\n    handleClose: function handleClose(item) {\n      // 移除存储的因子\n      this.chosePosition.splice(this.chosePosition.indexOf(item), 1);\n    }\n  }\n};\nexports.default = _default;",{"version":3,"sources":["userList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-form :model=\"searchForm\" :inline=\"true\">\n      <el-row>\n        <el-col :span=\"20\">\n          <el-form-item label=\"工号:\">\n            <el-input v-model=\"searchForm.empCode\" style=\"width:165px\" placeholder=\"员工工号\" />\n          </el-form-item>\n          <el-form-item label=\"名称:\">\n            <el-input v-model=\"searchForm.empName\" style=\"width:165px\" placeholder=\"员工名称\" />\n          </el-form-item>\n          <el-form-item label=\"状态:\">\n            <el-select v-model=\"searchForm.status\" clearable style=\"width:165px\" filterable placeholder=\"账号状态\">\n              <el-option\n                v-for=\"item in Object.keys(ACCOUNT_STATUS)\"\n                :key=\"item\"\n                :label=\"ACCOUNT_STATUS[item]\"\n                :value=\"item\"\n              />\n            </el-select>\n          </el-form-item>\n          <el-form-item>\n            <el-button type=\"primary\" class=\"iconfont icon-chaxun1\" @click=\"handleSearch\"> 查询</el-button>\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"4\" class=\"search-right\">\n          <el-button type=\"text\" icon=\"el-icon-plus\" @click=\"handleCreate\">新增</el-button>\n          <el-button type=\"text\" icon=\"el-icon-refresh\" @click=\"handleSearch\">刷新</el-button>\n        </el-col>\n      </el-row>\n    </el-form>\n    <div>\n      <el-table\n        stripe\n        :data=\"userData\"\n        highlight-current-row\n        :header-cell-style=\"{background:'#ECF3FC'}\"\n        style=\"width: 100%\"\n      >\n        <template slot=\"empty\">\n          <div class=\"table_empty\">\n            <div class=\"empty_tips\">\n              <span>\n                暂无用户,\n              </span>\n              <el-button type=\"text\" size=\"small\" style=\"font-size:14px;\" @click=\"handleCreate\">新建用户信息</el-button>\n            </div>\n          </div>\n        </template>\n        <el-table-column type=\"index\" width=\"55\" label=\"序号\" align=\"center\" />\n        <el-table-column prop=\"empCode\" label=\"员工工号\" align=\"center\" />\n        <el-table-column prop=\"username\" label=\"登录账号\" align=\"center\" />\n        <el-table-column prop=\"empName\" label=\"员工名称\" align=\"center\" />\n        <el-table-column prop=\"deptName\" label=\"部门/角色\" align=\"center\">\n          <template slot-scope=\"{row}\">\n            {{ row.deptName }}{{ row.platformPositionName?'/'+row.platformPositionName:'' }}\n          </template>\n        </el-table-column>\n        <el-table-column label=\"兼职\" align=\"center\">\n          <template slot-scope=\"{row}\">\n            {{ row.positionNames }}\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"phone\" label=\"绑定手机号1\" align=\"center\" />\n        <el-table-column prop=\"status\" label=\"账号状态\" align=\"center\" width=\"90\">\n          <template slot-scope=\"{row}\">\n            <el-tag :type=\"row.status==='0'?'success':'danger'\">{{ row.status==='0'?'有效':'停用' }}</el-tag>\n          </template>\n        </el-table-column>\n\n        <el-table-column fixed=\"right\" align=\"center\" label=\"操作\" width=\"210\">\n          <template slot-scope=\"scope\">\n            asd\n            <el-button type=\"text\" size=\"small\" @click=\"handleUpdate(scope.row)\"> 编辑</el-button>\n            <div v-if=\"scope.row.deptId!=='-1'\" class=\"erc-divider-vertical\" />\n            <el-button v-if=\"scope.row.deptId!=='-1'\" type=\"text\" size=\"small\" @click=\"handleRelation(scope.row)\"> 兼职</el-button>\n            <div v-if=\"scope.row.deptId!=='-1'\" class=\"erc-divider-vertical\" />\n            <el-button v-if=\"scope.row.deptId!=='-1'\" type=\"text\" size=\"small\" @click=\"handleDelete(scope.row.userId)\"> 离职注销</el-button>\n            <div v-if=\"scope.row.deptId!=='-1'\" class=\"erc-divider-vertical\" />\n            <el-button v-if=\"scope.row.deptId!=='-1'\" type=\"text\" size=\"small\" @click=\"handleResetPwd(scope.row.userId)\"> 重置密码</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </div>\n    <div style=\"float: right\">\n      <pagination\n        v-show=\"total>0\"\n        :total=\"total\"\n        :page.sync=\"searchForm.pageNumber\"\n        :limit.sync=\"searchForm.pageSize\"\n        @pagination=\"handleSearch\"\n      />\n    </div>\n\n    <el-dialog :title=\"titleMap[userDialogStatus]\" :visible.sync=\"userDialogVisible\" width=\"50%\">\n      <div style=\"width: 550px;margin:0 auto;\">\n        <el-form ref=\"userForm\" :model=\"userForm\" :rules=\"userRules\" label-width=\"140px\">\n          <el-form-item prop=\"empCode\" label=\"员工工号:\">\n            <el-input v-model=\"userForm.empCode\" placeholder=\"员工工号\" maxlength=\"15\" style=\"width: 70%;\" />\n          </el-form-item>\n          <el-form-item prop=\"empName\" label=\"姓名:\">\n            <el-input v-model=\"userForm.empName\" placeholder=\"用户姓名\" maxlength=\"15\" style=\"width: 70%;\" />\n          </el-form-item>\n\n          <el-form-item prop=\"deptId\" label=\"部门:\">\n            <el-select\n              v-model=\"userForm.deptId\"\n              filterable\n              placeholder=\"主部门选择\"\n              style=\"width: 70%;\"\n              @change=\"handleChange\"\n            >\n              <el-option\n                v-for=\"item in deptArray\"\n                :key=\"item.id\"\n                :label=\"item.deptName\"\n                :value=\"item.id\"\n              />\n            </el-select>\n          </el-form-item>\n\n          <el-form-item prop=\"platformPositionId\" label=\"岗位:\">\n            <el-select\n              v-model=\"userForm.platformPositionId\"\n              filterable\n              placeholder=\"岗位选择\"\n              style=\"width: 70%;\"\n            >\n              <el-option\n                v-for=\"item in Object.keys(postionArray)\"\n                :key=\"item\"\n                :label=\"postionArray[item]\"\n                :value=\"item\"\n              />\n            </el-select>\n          </el-form-item>\n          <el-form-item prop=\"phone\" label=\"手机号:\">\n            <el-input v-model=\"userForm.phone\" placeholder=\"手机号\" maxlength=\"11\" style=\"width: 70%;\" />\n          </el-form-item>\n\n        </el-form>\n      </div>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"userDialogVisible=false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"confirmDialog\">确认</el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog title=\"兼职岗位信息\" :visible.sync=\"postionVisible\">\n      <el-form label-width=\"100px\">\n        <el-form-item label=\"岗位:\">\n          <el-input v-model=\"currentRow.platformPositionName\" disabled style=\"width:300px;\" />\n        </el-form-item>\n        <el-form-item label=\"兼职岗位:\">\n          <template v-if=\"chosePosition && chosePosition.length > 0\">\n            <el-tag\n              v-for=\"item in chosePosition\"\n              :key=\"item.platformPositionId\"\n              closable\n              :disable-transitions=\"false\"\n              style=\"margin:2px 3px\"\n              @close=\"handleClose(item)\"\n            >\n              {{ item.platformDeptName }}\n            </el-tag>\n          </template>\n        </el-form-item>\n        <el-form-item label=\"岗位选择:\">\n          <el-row>\n            <el-col :span=\"6\">\n              <el-select\n                v-model=\"otherDeptId\"\n                clearable\n                filterable\n                placeholder=\"部门选择\"\n                style=\"width: 98%;\"\n                @change=\"handleDepartChange\"\n              >\n                <el-option\n                  v-for=\"item in deptArray\"\n                  :key=\"item.id\"\n                  :label=\"item.deptName\"\n                  :value=\"item.id\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"6\">\n              <el-select\n                v-model=\"otherPostId\"\n                clearable\n                filterable\n                style=\"width: 98%;\"\n                placeholder=\"请选择角色\"\n                @change=\"handlePosChange\"\n              >\n                <el-option\n                  v-for=\"item in Object.keys(otherPositArray)\"\n                  :key=\"item\"\n                  :label=\"otherPositArray[item]\"\n                  :value=\"item\"\n                />\n              </el-select>\n            </el-col>\n          </el-row>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"postionVisible=false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"confirmOtherDialog\">确认</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport * as userServer from '@/api/user'\nimport * as deptServer from '@/api/dept'\nimport Pagination from '@/components/Pagination' // Secondary package based on el-pagination\nimport { validPhone } from '@/utils/validate'\nconst ACCOUNT_STATUS = {\n  '0': '有效',\n  '1': '无效'\n}\nexport default {\n  name: 'UserList',\n  components: { Pagination },\n  data() {\n    const validatePhone = (rule, value, callback) => {\n      if (value && value.length > 0) {\n        if (validPhone(value)) {\n          callback()\n        } else {\n          callback(new Error('输入正确的电话号码'))\n        }\n      } else {\n        callback()\n      }\n    }\n    return {\n      ACCOUNT_STATUS,\n      userData: [],\n      searchForm: {\n        empCode: '',\n        empName: '',\n        deptId: '',\n        status: '',\n        pageNumber: 1,\n        pageSize: 10\n      },\n      total: 0,\n      titleMap: {\n        edit: '修改用户',\n        create: '新增用户'\n      },\n      userForm: {\n        empCode: '',\n        userId: '',\n        deptId: '',\n        empName: '',\n        platformPositionId: '',\n        phone: ''\n      },\n      userRules: {\n        phone: [{ required: true, message: '请录入联系方式', trigger: 'blur' }, { required: true, validator: validatePhone, trigger: 'blur' }],\n        empName: [{ required: true, message: '请录入姓名信息', trigger: 'blur' }],\n        empCode: [{ required: true, message: '请录入员工编号', trigger: 'blur' }],\n        deptId: [{ required: true, message: '请选择部门', trigger: 'change' }],\n        platformPositionId: [{ required: true, message: '请选择岗位', trigger: 'change' }]\n      },\n      userDialogStatus: 'create',\n      userDialogVisible: false,\n      deptArray: [],\n      currentRow: {},\n      postionVisible: false,\n      chosePosition: [],\n      postionArray: {},\n      otherPositArray: {},\n      otherDeptId: '',\n      otherPostId: ''\n    }\n  },\n  created() {\n    this.getDeptTreeList()\n    this.handleSearch()\n  },\n  methods: {\n    getDeptTreeList() {\n      deptServer.getDeptList().then(res => {\n        this.deptArray = res.result || []\n      })\n    },\n    handleSearch() {\n      userServer.getUserListForPage(this.searchForm).then(res => {\n        if (res.code === 200) {\n          this.userData = res.result.records || []\n          this.total = res.result.total\n        }\n      })\n    },\n    // 重置\n    handleCreate() {\n      this.clearForm()\n      this.userDialogStatus = 'create'\n      this.userDialogVisible = true\n      if (this.$refs.userForm !== undefined) {\n        this.$refs.userForm.resetFields()\n      }\n    },\n    handleUpdate(row) {\n      if (this.$refs.userForm !== undefined) {\n        this.$refs.userForm.resetFields()\n      }\n      this.userForm.userId = row.id\n      this.userForm.empCode = row.empCode\n      this.userForm.empName = row.empName || ''\n      this.userForm.deptId = row.deptId || ''\n      this.userForm.phone = row.phone || ''\n      this.handleChange(row.deptId)\n      this.userForm.platformPositionId = row.platformPositionId || ''\n      this.userDialogStatus = 'edit'\n      this.userDialogVisible = true\n    },\n    confirmDialog() {\n      if (this.userDialogStatus === 'create') {\n        this.confirmCreate()\n      } else {\n        this.confirmUpdate()\n      }\n    },\n    confirmOtherDialog() {\n      if (this.chosePosition && this.chosePosition.length > 0) {\n        const data = {\n          userId: this.currentRow.id,\n          postIds: this.chosePosition.map(i => {\n            const { deptId, platformPositionId } = i\n            return { deptId, platformPositionId }\n          })\n        }\n        userServer.saveOtherPositions(data).then(result => {\n          if (result.code === 200) {\n            this.$notify({\n              title: '成功',\n              message: result.message,\n              type: 'success'\n            })\n            this.handleSearch()\n            this.postionVisible = false\n          } else {\n            this.$notify({\n              title: '失败',\n              message: result.message,\n              type: 'error'\n            })\n          }\n        })\n      } else {\n        this.$message.warning('至少选择一个挂职的岗位')\n      }\n    },\n    confirmCreate() {\n      this.$refs.userForm.validate(valid => {\n        if (valid) {\n          userServer.addUserInfo(this.userForm).then(request => {\n            this.$notify({\n              title: '成功',\n              message: request.message,\n              type: 'success'\n            })\n            this.handleSearch()\n            this.userDialogVisible = false\n            this.$refs.userForm.resetFields()\n          }).catch(() => {})\n        } else {\n          return false\n        }\n      })\n    },\n    confirmUpdate() {\n      this.$refs.userForm.validate(valid => {\n        if (valid) {\n          userServer.saveUserInfo(this.userForm).then(request => {\n            this.$notify({\n              title: '成功',\n              message: request.message,\n              type: 'success'\n            })\n            this.handleSearch()\n            this.userDialogVisible = false\n            this.$refs.userForm.resetFields()\n          }).catch(() => {})\n        } else {\n          return false\n        }\n      })\n    },\n    handleDelete(userId) {\n      this.$confirm('确定注销?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        userServer.resetUser(userId).then(result => {\n          if (result.code === 200) {\n            this.$notify({\n              title: '成功',\n              message: result.message,\n              type: 'success'\n            })\n            this.handleSearch()\n          } else {\n            this.$notify({\n              title: '失败',\n              message: result.message,\n              type: 'error'\n            })\n          }\n        })\n      }).catch(() => {})\n    },\n    handleResetPwd(userId) {\n      this.$confirm('确定重置?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        userServer.resetUser(userId).then(result => {\n          if (result.code === 200) {\n            this.$notify({\n              title: '成功',\n              message: result.message,\n              type: 'success'\n            })\n            this.handleSearch()\n          } else {\n            this.$notify({\n              title: '失败',\n              message: result.message,\n              type: 'error'\n            })\n          }\n        })\n      }).catch(() => {})\n    },\n    clearForm() {\n      this.userForm = {\n        userId: '',\n        deptId: '',\n        empCode: '',\n        empName: '',\n        platformPositionId: '',\n        phone: ''\n      }\n    },\n    handleChange(val) {\n      this.postionArray = {}\n      this.userForm.platformPositionId = ''\n      if (val) {\n        const obj = this.deptArray.find(i => i.id === val)\n        if (obj) {\n          deptServer.dpfindPositionIdByDeptId(obj.platformDeptId).then(res => {\n            this.$nextTick(() => {\n              this.postionArray = res.result || {}\n            })\n          })\n        }\n      }\n    },\n    handleDepartChange(val) {\n      this.otherPositArray = {}\n      this.otherPostId = ''\n      if (val) {\n        const obj = this.deptArray.find(i => i.id === val)\n        if (obj) {\n          deptServer.dpfindPositionIdByDeptId(obj.platformDeptId).then(res => {\n            this.otherPositArray = res.result || {}\n          })\n        }\n      }\n    },\n    handlePosChange(val) {\n      if (val) {\n        const ob = this.chosePosition.find(j => j.platformPositionId === val)\n        if (!ob) {\n          this.chosePosition.push({\n            platformPositionId: val,\n            deptId: this.otherDeptId,\n            platformDeptName: this.otherPositArray[val]\n          })\n        }\n      }\n    },\n    handleRelation(row) {\n      this.chosePosition = []\n      this.currentRow = Object.assign({}, row)\n      let posIds = []\n      const depNames = []\n      const posNames = []\n      if (row.positionNames && row.positionNames.length > 0) {\n        const firstPos = row.positionNames.split(';')\n        const firstPosIds = row.positionIds.split(',')\n        if (firstPos && firstPos.length > 0) {\n          firstPos.forEach(element => {\n            depNames.push(element.split('/')[0])\n            posNames.push(element.split('/')[1])\n          })\n          posIds = firstPosIds\n        } else {\n          posIds.push(row.positionIds)\n          depNames.push(row.positionNames.split('/')[0])\n          posNames.push(row.positionNames.split('/')[1])\n        }\n        posIds.forEach((i, index) => {\n          const ob = {\n            platformPositionId: i,\n            deptId: this.getDepartIdForName(depNames[index]),\n            platformDeptName: posNames[index]\n          }\n          this.chosePosition.push(ob)\n        })\n      }\n      this.postionVisible = true\n    },\n    getDepartIdForName(name) {\n      const o = this.deptArray.find(i => i.deptName === name)\n      return o.id || ''\n    },\n    handleClose(item) {\n      // 移除存储的因子\n      this.chosePosition.splice(this.chosePosition.indexOf(item), 1)\n    }\n\n  }\n}\n</script>\n\n<style scoped lang=\"scss\" type=\"text/scss\">\n  .search_div {\n    >div {\n      &:nth-child(1){\n        margin-right: 10px;\n      }\n      display: inline-block;\n    }\n  }\n\n  .search_input {\n    width: 200px;\n    margin-bottom: 5px;\n  }\n  .search-right {\n    text-align: right;\n    padding-right: 25px;\n  }\n</style>\n"],"sourceRoot":"src/views/system/user"}]}