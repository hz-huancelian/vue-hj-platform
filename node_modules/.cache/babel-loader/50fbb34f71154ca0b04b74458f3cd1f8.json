{"remainingRequest":"F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\babel-loader\\lib\\index.js!F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\webstormProjectsJiu\\vue-hj-platform\\src\\views\\system\\role\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\src\\views\\system\\role\\index.vue","mtime":1639466945000},{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\babel.config.js","mtime":1637214064000},{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"F:\\\\webstormProjectsJiu\\\\vue-hj-platform\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\interopRequireDefault.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _role = require(\"@/api/system/role\");\n\nvar _menu = require(\"@/api/system/menu\");\n\nvar _Pagination = _interopRequireDefault(require(\"@/components/Pagination\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import { roleMenuTreeselect } from '@/api/system/dept'\n// Secondary package based on el-pagination\nvar ROLE_STATUS = {\n  '0': '正常',\n  '1': '停用'\n};\nvar AUTH_STATUS = {\n  '1': '所有数据权限',\n  // '2': '本部门数据权限',\n  '3': '本部门及以下数据权限',\n  '4': '仅本人数据权限'\n};\nvar _default = {\n  name: 'Role',\n  components: {\n    Pagination: _Pagination.default\n  },\n  data: function data() {\n    return {\n      ROLE_STATUS: ROLE_STATUS,\n      AUTH_STATUS: AUTH_STATUS,\n      // 遮罩层\n      loading: true,\n      // 导出遮罩层\n      exportLoading: false,\n      // 选中数组\n      ids: [],\n      // 非单个禁用\n      single: true,\n      // 非多个禁用\n      multiple: true,\n      // 显示搜索条件\n      showSearch: true,\n      // 总条数\n      total: 0,\n      // 角色表格数据\n      roleList: [],\n      // 弹出层标题\n      title: '',\n      // 是否显示弹出层\n      open: false,\n      // 是否显示弹出层（数据权限）\n      openDataScope: false,\n      menuNodeAll: false,\n      // 菜单列表\n      menuOptions: [],\n      // 部门列表\n      deptOptions: [],\n      // 选择控制\n      menuCheckStrictly: true,\n      // 查询参数\n      queryParams: {\n        pageNumber: 1,\n        pageSize: 20,\n        roleName: '',\n        roleKey: '',\n        status: ''\n      },\n      // 表单参数\n      form: {},\n      defaultProps: {\n        children: 'children',\n        label: 'label'\n      },\n      // 表单校验\n      rules: {\n        roleName: [{\n          required: true,\n          message: '角色名称不能为空',\n          trigger: 'blur'\n        }],\n        roleKey: [{\n          required: true,\n          message: '权限字符不能为空',\n          trigger: 'blur'\n        }],\n        roleSort: [{\n          required: true,\n          message: '角色顺序不能为空',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created: function created() {\n    this.getList();\n  },\n  methods: {\n    /** 查询角色列表 */\n    getList: function getList() {\n      var _this = this;\n\n      this.loading = true;\n      (0, _role.listRole)(this.queryParams).then(function (response) {\n        _this.roleList = response.result.records || [];\n        _this.total = response.result.total;\n        _this.loading = false;\n      }).catch(function () {\n        _this.loading = false;\n      });\n    },\n\n    /** 查询菜单树结构 */\n    getMenuTreeselect: function getMenuTreeselect() {\n      var _this2 = this;\n\n      (0, _menu.menuTreeselect)().then(function (response) {\n        _this2.menuOptions = response.result;\n      });\n    },\n\n    /** 查询部门树结构 */\n    getDeptTreeselect: function getDeptTreeselect() {// deptTreeselect().then(response => {\n      //   this.deptOptions = response.data\n      // })\n    },\n    // 所有菜单节点数据\n    getMenuAllCheckedKeys: function getMenuAllCheckedKeys() {\n      // 目前被选中的菜单节点\n      var checkedKeys = this.$refs.menu.getCheckedKeys(); // 半选中的菜单节点\n\n      var halfCheckedKeys = this.$refs.menu.getHalfCheckedKeys();\n      checkedKeys.unshift.apply(checkedKeys, halfCheckedKeys);\n      return checkedKeys;\n    },\n    // 所有部门节点数据\n    getDeptAllCheckedKeys: function getDeptAllCheckedKeys() {\n      // 目前被选中的部门节点\n      var checkedKeys = this.$refs.dept.getCheckedKeys(); // 半选中的部门节点\n\n      var halfCheckedKeys = this.$refs.dept.getHalfCheckedKeys();\n      checkedKeys.unshift.apply(checkedKeys, halfCheckedKeys);\n      return checkedKeys;\n    },\n\n    /** 根据角色ID查询菜单树结构 */\n    getRoleMenuTreeselect: function getRoleMenuTreeselect(roleId) {\n      var _this3 = this;\n\n      return (0, _menu.roleMenuTreeselect)(roleId).then(function (response) {\n        _this3.menuOptions = response.result.treeSelect;\n        return response.result;\n      });\n    },\n\n    /** 根据角色ID查询部门树结构 */\n    getRoleDeptTreeselect: function getRoleDeptTreeselect(roleId) {// return roleDeptTreeselect(roleId).then(response => {\n      //   this.deptOptions = response.depts\n      //   return response\n      // })\n    },\n    // 角色状态修改\n    handleStatusChange: function handleStatusChange(row) {\n      var _this4 = this;\n\n      var text = row.status === '0' ? '启用' : '停用';\n      this.$confirm('确认要\"' + text + '\"\"' + row.roleName + '\"角色吗?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        return (0, _role.changeRoleStatus)(row.roleId, row.status);\n      }).then(function () {\n        _this4.msgSuccess(text + '成功');\n      }).catch(function () {\n        row.status = row.status === '0' ? '1' : '0';\n      });\n    },\n    // 取消按钮\n    cancel: function cancel() {\n      this.open = false;\n      this.reset();\n    },\n    // 取消按钮（数据权限）\n    cancelDataScope: function cancelDataScope() {\n      this.openDataScope = false;\n      this.reset();\n    },\n    // 表单重置\n    reset: function reset() {\n      if (this.$refs.menu !== undefined) {\n        this.$refs.menu.setCheckedKeys([]);\n      }\n\n      this.menuNodeAll = false;\n      this.form = {\n        roleId: undefined,\n        roleName: '',\n        roleKey: '',\n        roleSort: 0,\n        status: '0',\n        menuIds: [],\n        dataScope: '',\n        remark: ''\n      };\n      this.resetForm('form');\n    },\n\n    /** 搜索按钮操作 */\n    handleQuery: function handleQuery() {\n      this.queryParams.pageNumber = 1;\n      this.getList();\n    },\n\n    /** 重置按钮操作 */\n    resetQuery: function resetQuery() {\n      this.dateRange = [];\n      this.resetForm('queryForm');\n      this.handleQuery();\n    },\n    // 多选框选中数据\n    handleSelectionChange: function handleSelectionChange(selection) {\n      this.ids = selection.map(function (item) {\n        return item.roleId;\n      });\n      this.single = selection.length !== 1;\n      this.multiple = !selection.length;\n    },\n    // 更多操作触发\n    handleCommand: function handleCommand(command, row) {\n      switch (command) {\n        case 'handleDataScope':\n          this.handleDataScope(row);\n          break;\n\n        case 'handleAuthUser':\n          this.handleAuthUser(row);\n          break;\n\n        default:\n          break;\n      }\n    },\n    // 树权限（展开/折叠）\n    handleCheckedTreeExpand: function handleCheckedTreeExpand(value, type) {\n      if (type === 'menu') {\n        var treeList = this.menuOptions;\n\n        for (var i = 0; i < treeList.length; i++) {\n          this.$refs.menu.store.nodesMap[treeList[i].id].expanded = value;\n        }\n      } else if (type === 'dept') {\n        var _treeList = this.deptOptions;\n\n        for (var _i = 0; _i < _treeList.length; _i++) {\n          this.$refs.dept.store.nodesMap[_treeList[_i].id].expanded = value;\n        }\n      }\n    },\n    // 树权限（全选/全不选）\n    handleCheckedTreeNodeAll: function handleCheckedTreeNodeAll(value, type) {\n      if (type === 'menu') {\n        this.$refs.menu.setCheckedNodes(value ? this.menuOptions : []);\n      } else if (type === 'dept') {\n        this.$refs.dept.setCheckedNodes(value ? this.deptOptions : []);\n      }\n    },\n    // 树权限（父子联动）\n    handleCheckedTreeConnect: function handleCheckedTreeConnect(value, type) {\n      this.menuCheckStrictly = !!value;\n    },\n\n    /** 新增按钮操作 */\n    handleAdd: function handleAdd() {\n      this.reset();\n      this.getMenuTreeselect();\n      this.open = true;\n      this.title = '添加角色';\n    },\n\n    /** 修改按钮操作 */\n    handleUpdate: function handleUpdate(row) {\n      var _this5 = this;\n\n      this.reset();\n      var roleId = row.roleId || this.ids;\n      var roleMenu = this.getRoleMenuTreeselect(roleId);\n      (0, _role.getRole)(roleId).then(function (response) {\n        _this5.form = response.result;\n\n        _this5.$delete(_this5.form, 'createTime');\n\n        _this5.$delete(_this5.form, 'updateTime');\n\n        _this5.$delete(_this5.form, 'delFlag');\n\n        _this5.open = true;\n\n        _this5.$nextTick(function () {\n          roleMenu.then(function (res) {\n            var checkedKeys = res.checkedKeys;\n            checkedKeys.forEach(function (v) {\n              _this5.$nextTick(function () {\n                _this5.$refs.menu.setChecked(v, true, false);\n              });\n            });\n          });\n        });\n\n        _this5.title = '修改角色';\n      });\n    },\n\n    /** 选择角色权限范围触发 */\n    dataScopeSelectChange: function dataScopeSelectChange(value) {\n      if (value !== '2') {\n        this.$refs.dept.setCheckedKeys([]);\n      }\n    },\n\n    /** 分配数据权限操作 */\n    handleDataScope: function handleDataScope(row) {\n      var _this6 = this;\n\n      this.reset();\n      var roleDeptTreeselect = this.getRoleDeptTreeselect(row.roleId);\n      (0, _role.getRole)(row.roleId).then(function (response) {\n        _this6.form = response.data;\n        _this6.openDataScope = true;\n\n        _this6.$nextTick(function () {\n          roleDeptTreeselect.then(function (res) {\n            _this6.$refs.dept.setCheckedKeys(res.checkedKeys);\n          });\n        });\n\n        _this6.title = '分配数据权限';\n      });\n    },\n\n    /** 分配用户操作 */\n    handleAuthUser: function handleAuthUser(row) {\n      var roleId = row.roleId;\n      this.$router.push('/auth/user/' + roleId);\n    },\n\n    /** 提交按钮 */\n    submitForm: function submitForm() {\n      var _this7 = this;\n\n      this.$refs['form'].validate(function (valid) {\n        if (valid) {\n          if (_this7.form.roleId !== undefined) {\n            _this7.form.menuIds = _this7.getMenuAllCheckedKeys();\n            (0, _role.updateRole)(_this7.form).then(function (response) {\n              _this7.msgSuccess('修改成功');\n\n              _this7.open = false;\n\n              _this7.getList();\n            });\n          } else {\n            _this7.form.menuIds = _this7.getMenuAllCheckedKeys();\n            (0, _role.addRole)(_this7.form).then(function (response) {\n              _this7.msgSuccess('新增成功');\n\n              _this7.open = false;\n\n              _this7.getList();\n            });\n          }\n        }\n      });\n    },\n\n    /** 提交按钮（数据权限） */\n    submitDataScope: function submitDataScope() {\n      var _this8 = this;\n\n      if (this.form.roleId !== undefined) {\n        this.form.deptIds = this.getDeptAllCheckedKeys();\n        (0, _role.dataScope)(this.form).then(function (response) {\n          _this8.msgSuccess('修改成功');\n\n          _this8.openDataScope = false;\n\n          _this8.getList();\n        });\n      }\n    },\n\n    /** 删除按钮操作 */\n    handleDelete: function handleDelete(row) {\n      var _this9 = this;\n\n      var roleIds = row.roleId || this.ids;\n      this.$confirm('是否确认删除角色编号为\"' + roleIds + '\"的数据项?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        return (0, _role.delRole)(roleIds);\n      }).then(function () {\n        _this9.getList();\n\n        _this9.msgSuccess('删除成功');\n      }).catch(function () {});\n    },\n\n    /** 导出按钮操作 */\n    handleExport: function handleExport() {\n      var _this10 = this;\n\n      var queryParams = this.queryParams;\n      this.$confirm('是否确认导出所有角色数据项?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        _this10.exportLoading = true;\n        return (0, _role.exportRole)(queryParams);\n      }).then(function (response) {\n        _this10.download(response.msg);\n\n        _this10.exportLoading = false;\n      }).catch(function () {});\n    }\n  }\n};\nexports.default = _default;",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-form v-show=\"showSearch\" ref=\"queryForm\" :model=\"queryParams\" :inline=\"true\">\n      <el-form-item label=\"角色名称\" prop=\"roleName\">\n        <el-input\n          v-model=\"queryParams.roleName\"\n          placeholder=\"请输入角色名称\"\n          clearable\n          style=\"width: 170px\"\n          @keyup.enter.native=\"handleQuery\"\n        />\n      </el-form-item>\n      <!-- <el-form-item label=\"权限字符\" prop=\"roleKey\">\n        <el-input\n          v-model=\"queryParams.roleKey\"\n          placeholder=\"请输入权限字符\"\n          clearable\n          style=\"width: 170px\"\n          @keyup.enter.native=\"handleQuery\"\n        />\n      </el-form-item> -->\n      <!-- <el-form-item label=\"状态\" prop=\"status\">\n        <el-select\n          v-model=\"queryParams.status\"\n          placeholder=\"角色状态\"\n          clearable\n          style=\"width: 170px\"\n        >\n          <el-option\n            v-for=\"item in Object.keys(ROLE_STATUS)\"\n            :key=\"item\"\n            :label=\"ROLE_STATUS[item]\"\n            :value=\"item\"\n          />\n        </el-select>\n      </el-form-item> -->\n      <el-form-item>\n        <el-button type=\"primary\" icon=\"el-icon-search\" size=\"small\" @click=\"handleQuery\">搜索</el-button>\n        <el-button icon=\"el-icon-refresh\" size=\"small\" @click=\"resetQuery\">重置</el-button>\n      </el-form-item>\n    </el-form>\n\n    <!-- <el-row :gutter=\"10\" class=\"mb8\">\n      <el-col :span=\"1.5\">\n        <el-button\n          v-hasPermi=\"['system:role:add']\"\n          type=\"primary\"\n          plain\n          icon=\"el-icon-plus\"\n          size=\"small\"\n          @click=\"handleAdd\"\n        >新增</el-button>\n      </el-col>\n    </el-row> -->\n    <!-- <el-col :span=\"1.5\">\n        <el-button\n          v-hasPermi=\"['system:role:edit']\"\n          type=\"success\"\n          plain\n          icon=\"el-icon-edit\"\n          size=\"smal\"\n          :disabled=\"single\"\n          @click=\"handleUpdate\"\n        >修改</el-button>\n      </el-col> -->\n    <!-- <el-col :span=\"1.5\">\n        <el-button\n          v-hasPermi=\"['system:role:remove']\"\n          type=\"danger\"\n          plain\n          icon=\"el-icon-delete\"\n          size=\"small\"\n          :disabled=\"multiple\"\n          @click=\"handleDelete\"\n        >删除</el-button>\n      </el-col> -->\n    <!-- <right-toolbar :show-search.sync=\"showSearch\" @queryTable=\"getList\" />\n    </el-row>-->\n\n    <el-table v-loading=\"loading\" :data=\"roleList\" @selection-change=\"handleSelectionChange\">\n      <el-table-column type=\"index\" width=\"55\" label=\"序号\" align=\"center\" />\n      <!-- <el-table-column label=\"角色编号\" prop=\"roleId\" width=\"120\" align=\"center\" /> -->\n      <el-table-column label=\"角色名称\" prop=\"roleName\" sortable align=\"center\" />\n      <!-- <el-table-column label=\"权限字符\" prop=\"roleKey\" align=\"center\" /> -->\n      <!-- <el-table-column label=\"显示顺序\" prop=\"roleSort\" width=\"100\" /> -->\n      <!-- <el-table-column key=\"status\" label=\"状态\" align=\"center\">\n        <template slot-scope=\"scope\">\n          <el-tag :type=\"scope.row.status?'success':'danger'\">{{ scope.row.status?'正常':'停用' }}</el-tag>\n        </template>\n      </el-table-column> -->\n      <el-table-column label=\"创建日期\" align=\"center\" prop=\"createTime\" width=\"180\">\n        <template slot-scope=\"scope\">\n          <span>{{ parseTime(scope.row.createTime, '{y}-{m}-{d}') }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\" align=\"center\" class-name=\"small-padding fixed-width\">\n        <template v-if=\"scope.row.roleId !== 1\" slot-scope=\"scope\">\n          <!-- <el-button\n            v-hasPermi=\"['system:role:menu']\"\n            size=\"mini\"\n            type=\"text\"\n            icon=\"el-icon-circle-check\"\n            @click=\"handleDataScope(scope.row)\"\n          >菜单权限</el-button> -->\n          <el-button\n            v-hasPermi=\"['system:role:edit']\"\n            size=\"mini\"\n            type=\"text\"\n            icon=\"el-icon-edit\"\n            @click=\"handleUpdate(scope.row)\"\n          >修改</el-button>\n          <!-- <el-button\n            v-hasPermi=\"['system:role:remove']\"\n            size=\"mini\"\n            type=\"text\"\n            icon=\"el-icon-delete\"\n            @click=\"handleDelete(scope.row)\"\n          >删除</el-button> -->\n\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <pagination\n      v-show=\"total>0\"\n      :total=\"total\"\n      :page.sync=\"queryParams.pageNumber\"\n      :limit.sync=\"queryParams.pageSize\"\n      @pagination=\"getList\"\n    />\n\n    <!-- 添加或修改角色配置对话框 -->\n    <el-dialog :title=\"title\" :visible.sync=\"open\" width=\"500px\" append-to-body>\n      <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"100px\">\n        <el-form-item label=\"角色名称\" prop=\"roleName\">\n          <el-input v-model=\"form.roleName\" placeholder=\"请输入角色名称\" disabled />\n        </el-form-item>\n        <!-- <el-form-item label=\"权限字符\" prop=\"roleKey\">\n          <span slot=\"label\">\n            权限字符\n          </span>\n          <el-input v-model=\"form.roleKey\" placeholder=\"请输入权限字符\" />\n        </el-form-item> -->\n        <!-- <el-form-item label=\"角色顺序\" prop=\"roleSort\">\n          <el-input-number v-model=\"form.roleSort\" controls-position=\"right\" :min=\"0\" style=\"width: 200px;\" />\n        </el-form-item> -->\n        <el-form-item label=\"数据权限\">\n          <el-select v-model=\"form.dataScope\" style=\"width: 200px;\">\n            <el-option\n              v-for=\"item in Object.keys(AUTH_STATUS)\"\n              :key=\"item\"\n              :label=\"AUTH_STATUS[item]\"\n              :value=\"item\"\n            />\n          </el-select>\n        </el-form-item>\n        <!-- <el-form-item label=\"状态\">\n          <el-radio-group v-model=\"form.status\">\n            <el-radio\n              v-for=\"item in Object.keys(ROLE_STATUS)\"\n              :key=\"item\"\n              :label=\"item\"\n            >{{ ROLE_STATUS[item] }}</el-radio>\n          </el-radio-group>\n        </el-form-item> -->\n\n        <el-form-item label=\"菜单权限\">\n          <el-checkbox v-model=\"menuNodeAll\" @change=\"handleCheckedTreeNodeAll($event, 'menu')\">全选/全不选</el-checkbox>\n\n          <el-checkbox v-model=\"menuCheckStrictly\" @change=\"handleCheckedTreeConnect($event, 'menu')\">父子联动</el-checkbox>\n          <el-tree\n            ref=\"menu\"\n            class=\"tree-border\"\n            :data=\"menuOptions\"\n            show-checkbox\n            node-key=\"id\"\n            :check-strictly=\"!menuCheckStrictly\"\n            empty-text=\"加载中，请稍后\"\n            :props=\"defaultProps\"\n          />\n        </el-form-item>\n        <el-form-item label=\"备注\">\n          <el-input v-model=\"form.remark\" type=\"textarea\" placeholder=\"请输入内容\" />\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\n        <el-button @click=\"cancel\">取 消</el-button>\n      </div>\n    </el-dialog>\n\n  </div>\n</template>\n\n<script>\nimport { listRole, getRole, delRole, addRole, updateRole, exportRole, dataScope, changeRoleStatus } from '@/api/system/role'\nimport { menuTreeselect, roleMenuTreeselect } from '@/api/system/menu'\n// import { roleMenuTreeselect } from '@/api/system/dept'\n\nimport Pagination from '@/components/Pagination' // Secondary package based on el-pagination\nconst ROLE_STATUS = {\n  '0': '正常',\n  '1': '停用'\n}\nconst AUTH_STATUS = {\n  '1': '所有数据权限',\n  // '2': '本部门数据权限',\n  '3': '本部门及以下数据权限',\n  '4': '仅本人数据权限'\n}\nexport default {\n  name: 'Role',\n  components: { Pagination },\n  data() {\n    return {\n      ROLE_STATUS,\n      AUTH_STATUS,\n      // 遮罩层\n      loading: true,\n      // 导出遮罩层\n      exportLoading: false,\n      // 选中数组\n      ids: [],\n      // 非单个禁用\n      single: true,\n      // 非多个禁用\n      multiple: true,\n      // 显示搜索条件\n      showSearch: true,\n      // 总条数\n      total: 0,\n      // 角色表格数据\n      roleList: [],\n      // 弹出层标题\n      title: '',\n      // 是否显示弹出层\n      open: false,\n      // 是否显示弹出层（数据权限）\n      openDataScope: false,\n      menuNodeAll: false,\n\n      // 菜单列表\n      menuOptions: [],\n      // 部门列表\n      deptOptions: [],\n      // 选择控制\n      menuCheckStrictly: true,\n      // 查询参数\n      queryParams: {\n        pageNumber: 1,\n        pageSize: 20,\n        roleName: '',\n        roleKey: '',\n        status: ''\n      },\n      // 表单参数\n      form: {},\n      defaultProps: {\n        children: 'children',\n        label: 'label'\n      },\n      // 表单校验\n      rules: {\n        roleName: [\n          { required: true, message: '角色名称不能为空', trigger: 'blur' }\n        ],\n        roleKey: [\n          { required: true, message: '权限字符不能为空', trigger: 'blur' }\n        ],\n        roleSort: [\n          { required: true, message: '角色顺序不能为空', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  created() {\n    this.getList()\n  },\n  methods: {\n    /** 查询角色列表 */\n    getList() {\n      this.loading = true\n      listRole(this.queryParams).then(\n        response => {\n          this.roleList = response.result.records || []\n          this.total = response.result.total\n          this.loading = false\n        }\n      ).catch(() => {\n        this.loading = false\n      })\n    },\n    /** 查询菜单树结构 */\n    getMenuTreeselect() {\n      menuTreeselect().then(response => {\n        this.menuOptions = response.result\n      })\n    },\n    /** 查询部门树结构 */\n    getDeptTreeselect() {\n      // deptTreeselect().then(response => {\n      //   this.deptOptions = response.data\n      // })\n    },\n    // 所有菜单节点数据\n    getMenuAllCheckedKeys() {\n      // 目前被选中的菜单节点\n      const checkedKeys = this.$refs.menu.getCheckedKeys()\n      // 半选中的菜单节点\n      const halfCheckedKeys = this.$refs.menu.getHalfCheckedKeys()\n      checkedKeys.unshift.apply(checkedKeys, halfCheckedKeys)\n      return checkedKeys\n    },\n    // 所有部门节点数据\n    getDeptAllCheckedKeys() {\n      // 目前被选中的部门节点\n      const checkedKeys = this.$refs.dept.getCheckedKeys()\n      // 半选中的部门节点\n      const halfCheckedKeys = this.$refs.dept.getHalfCheckedKeys()\n      checkedKeys.unshift.apply(checkedKeys, halfCheckedKeys)\n      return checkedKeys\n    },\n    /** 根据角色ID查询菜单树结构 */\n    getRoleMenuTreeselect(roleId) {\n      return roleMenuTreeselect(roleId).then(response => {\n        this.menuOptions = response.result.treeSelect\n        return response.result\n      })\n    },\n    /** 根据角色ID查询部门树结构 */\n    getRoleDeptTreeselect(roleId) {\n      // return roleDeptTreeselect(roleId).then(response => {\n      //   this.deptOptions = response.depts\n      //   return response\n      // })\n    },\n    // 角色状态修改\n    handleStatusChange(row) {\n      const text = row.status === '0' ? '启用' : '停用'\n      this.$confirm('确认要\"' + text + '\"\"' + row.roleName + '\"角色吗?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function() {\n        return changeRoleStatus(row.roleId, row.status)\n      }).then(() => {\n        this.msgSuccess(text + '成功')\n      }).catch(function() {\n        row.status = row.status === '0' ? '1' : '0'\n      })\n    },\n    // 取消按钮\n    cancel() {\n      this.open = false\n      this.reset()\n    },\n    // 取消按钮（数据权限）\n    cancelDataScope() {\n      this.openDataScope = false\n      this.reset()\n    },\n    // 表单重置\n    reset() {\n      if (this.$refs.menu !== undefined) {\n        this.$refs.menu.setCheckedKeys([])\n      }\n      this.menuNodeAll = false\n      this.form = {\n        roleId: undefined,\n        roleName: '',\n        roleKey: '',\n        roleSort: 0,\n        status: '0',\n        menuIds: [],\n        dataScope: '',\n        remark: ''\n      }\n      this.resetForm('form')\n    },\n    /** 搜索按钮操作 */\n    handleQuery() {\n      this.queryParams.pageNumber = 1\n      this.getList()\n    },\n    /** 重置按钮操作 */\n    resetQuery() {\n      this.dateRange = []\n      this.resetForm('queryForm')\n      this.handleQuery()\n    },\n    // 多选框选中数据\n    handleSelectionChange(selection) {\n      this.ids = selection.map(item => item.roleId)\n      this.single = selection.length !== 1\n      this.multiple = !selection.length\n    },\n    // 更多操作触发\n    handleCommand(command, row) {\n      switch (command) {\n        case 'handleDataScope':\n          this.handleDataScope(row)\n          break\n        case 'handleAuthUser':\n          this.handleAuthUser(row)\n          break\n        default:\n          break\n      }\n    },\n    // 树权限（展开/折叠）\n    handleCheckedTreeExpand(value, type) {\n      if (type === 'menu') {\n        const treeList = this.menuOptions\n        for (let i = 0; i < treeList.length; i++) {\n          this.$refs.menu.store.nodesMap[treeList[i].id].expanded = value\n        }\n      } else if (type === 'dept') {\n        const treeList = this.deptOptions\n        for (let i = 0; i < treeList.length; i++) {\n          this.$refs.dept.store.nodesMap[treeList[i].id].expanded = value\n        }\n      }\n    },\n    // 树权限（全选/全不选）\n    handleCheckedTreeNodeAll(value, type) {\n      if (type === 'menu') {\n        this.$refs.menu.setCheckedNodes(value ? this.menuOptions : [])\n      } else if (type === 'dept') {\n        this.$refs.dept.setCheckedNodes(value ? this.deptOptions : [])\n      }\n    },\n    // 树权限（父子联动）\n    handleCheckedTreeConnect(value, type) {\n      this.menuCheckStrictly = !!value\n    },\n    /** 新增按钮操作 */\n    handleAdd() {\n      this.reset()\n      this.getMenuTreeselect()\n      this.open = true\n      this.title = '添加角色'\n    },\n    /** 修改按钮操作 */\n    handleUpdate(row) {\n      this.reset()\n      const roleId = row.roleId || this.ids\n      const roleMenu = this.getRoleMenuTreeselect(roleId)\n      getRole(roleId).then(response => {\n        this.form = response.result\n        this.$delete(this.form, 'createTime')\n        this.$delete(this.form, 'updateTime')\n        this.$delete(this.form, 'delFlag')\n        this.open = true\n        this.$nextTick(() => {\n          roleMenu.then(res => {\n            const checkedKeys = res.checkedKeys\n            checkedKeys.forEach((v) => {\n              this.$nextTick(() => {\n                this.$refs.menu.setChecked(v, true, false)\n              })\n            })\n          })\n        })\n        this.title = '修改角色'\n      })\n    },\n    /** 选择角色权限范围触发 */\n    dataScopeSelectChange(value) {\n      if (value !== '2') {\n        this.$refs.dept.setCheckedKeys([])\n      }\n    },\n    /** 分配数据权限操作 */\n    handleDataScope(row) {\n      this.reset()\n      const roleDeptTreeselect = this.getRoleDeptTreeselect(row.roleId)\n      getRole(row.roleId).then(response => {\n        this.form = response.data\n        this.openDataScope = true\n        this.$nextTick(() => {\n          roleDeptTreeselect.then(res => {\n            this.$refs.dept.setCheckedKeys(res.checkedKeys)\n          })\n        })\n        this.title = '分配数据权限'\n      })\n    },\n    /** 分配用户操作 */\n    handleAuthUser: function(row) {\n      const roleId = row.roleId\n      this.$router.push('/auth/user/' + roleId)\n    },\n    /** 提交按钮 */\n    submitForm: function() {\n      this.$refs['form'].validate(valid => {\n        if (valid) {\n          if (this.form.roleId !== undefined) {\n            this.form.menuIds = this.getMenuAllCheckedKeys()\n            updateRole(this.form).then(response => {\n              this.msgSuccess('修改成功')\n              this.open = false\n              this.getList()\n            })\n          } else {\n            this.form.menuIds = this.getMenuAllCheckedKeys()\n            addRole(this.form).then(response => {\n              this.msgSuccess('新增成功')\n              this.open = false\n              this.getList()\n            })\n          }\n        }\n      })\n    },\n    /** 提交按钮（数据权限） */\n    submitDataScope: function() {\n      if (this.form.roleId !== undefined) {\n        this.form.deptIds = this.getDeptAllCheckedKeys()\n        dataScope(this.form).then(response => {\n          this.msgSuccess('修改成功')\n          this.openDataScope = false\n          this.getList()\n        })\n      }\n    },\n    /** 删除按钮操作 */\n    handleDelete(row) {\n      const roleIds = row.roleId || this.ids\n      this.$confirm('是否确认删除角色编号为\"' + roleIds + '\"的数据项?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function() {\n        return delRole(roleIds)\n      }).then(() => {\n        this.getList()\n        this.msgSuccess('删除成功')\n      }).catch(() => {})\n    },\n    /** 导出按钮操作 */\n    handleExport() {\n      const queryParams = this.queryParams\n      this.$confirm('是否确认导出所有角色数据项?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.exportLoading = true\n        return exportRole(queryParams)\n      }).then(response => {\n        this.download(response.msg)\n        this.exportLoading = false\n      }).catch(() => {})\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/system/role"}]}