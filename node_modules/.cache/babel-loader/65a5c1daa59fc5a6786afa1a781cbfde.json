{"remainingRequest":"F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\babel-loader\\lib\\index.js!F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\webstormProjectsJiu\\vue-hj-platform\\src\\views\\system\\dept\\deptNewList.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\src\\views\\system\\dept\\deptNewList.vue","mtime":1637213971000},{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\babel.config.js","mtime":1637214064000},{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"F:\\\\webstormProjectsJiu\\\\vue-hj-platform\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\interopRequireWildcard.js\");\n\nvar _interopRequireDefault = require(\"F:\\\\webstormProjectsJiu\\\\vue-hj-platform\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\interopRequireDefault.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectSpread2 = _interopRequireDefault(require(\"F:\\\\webstormProjectsJiu\\\\vue-hj-platform\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\objectSpread2.js\"));\n\nvar deptServer = _interopRequireWildcard(require(\"@/api/dept\"));\n\nvar posiServer = _interopRequireWildcard(require(\"@/api/position\"));\n\nvar _dict = require(\"@/api/dict\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'DeptList',\n  data: function data() {\n    return {\n      deptTreeData: [],\n      defaultProps: {\n        children: 'children',\n        label: 'deptName',\n        id: 'id'\n      },\n      titleMap: {\n        edit: '修改部门',\n        create: '新增部门'\n      },\n      postTitleMap: {\n        edit: '修改岗位',\n        create: '新增岗位'\n      },\n      deptDialogStatus: 'create',\n      postDialogStatus: 'create',\n      currentDeptId: '',\n      currentDeptName: '',\n      departData: [],\n      filterText: '',\n      departVisible: false,\n      departForm: {\n        parentDeptId: '',\n        platformDeptId: '',\n        deptId: '',\n        deptName: '',\n        deptDesc: ''\n      },\n      departRules: {\n        deptName: [{\n          required: true,\n          message: '部门名称',\n          trigger: 'blur'\n        }],\n        platformDeptId: [{\n          required: true,\n          message: '请选择平台流转权限',\n          trigger: 'change'\n        }]\n      },\n      currentTreeItem: {},\n      departName: '',\n      roleListArray: [],\n      currentNode: {},\n      currentResolve: {},\n      plDeptmentArray: [],\n      postVisible: false,\n      postForm: {\n        positionId: '',\n        platformPositionId: '',\n        deptId: '',\n        positionName: '',\n        positionDesc: ''\n      },\n      postionArray: {},\n      currentPlatformDeptId: '',\n      postRules: {\n        positionName: [{\n          required: true,\n          message: '请录入岗位名称',\n          trigger: 'blur'\n        }],\n        platformPositionId: [{\n          required: true,\n          message: '请选择系统角色',\n          trigger: 'change'\n        }]\n      }\n    };\n  },\n  watch: {\n    filterText: function filterText(val) {\n      this.$refs.tree.filter(val);\n    }\n  },\n  created: function created() {\n    this.getDicKey('plDeptmentArray', 1001);\n    this.getDeptTreeList();\n  },\n  methods: {\n    getDicKey: function getDicKey(type, code) {\n      var _this = this;\n\n      (0, _dict.getDicKey)(code).then(function (result) {\n        if (result.code === 200) {\n          _this[type] = result.result;\n        }\n      });\n    },\n    getDeptTreeList: function getDeptTreeList() {\n      var _this2 = this;\n\n      this.deptTreeData = [];\n      deptServer.getDeptTreeList().then(function (res) {\n        var resObj = res.result || {};\n\n        _this2.deptTreeData.push(resObj);\n      });\n    },\n    getPlDepartList: function getPlDepartList() {},\n    filterNode: function filterNode(value, data) {\n      if (!value) return true;\n      return data.deptName.indexOf(value) !== -1;\n    },\n    loadNode: function loadNode(node, resolve) {\n      var _this3 = this;\n\n      this.currentNode = node;\n      this.currentResolve = resolve;\n      var obj = node.data;\n      this.currentDeptId = obj.id;\n      this.currentDeptName = obj.deptName;\n\n      if (node.level === 0) {\n        return resolve([{\n          id: -1001,\n          deptName: this.$store.getters.userInfo.organName || '当前机构',\n          children: []\n        }]);\n      }\n\n      if (this.currentDeptId) {\n        this.departData = [];\n        deptServer.findTopDeptListByParentId(this.currentDeptId).then(function (res) {\n          if (res.code === 200 && res.result) {\n            _this3.departData = res.result.map(function (i) {\n              return (0, _objectSpread2.default)((0, _objectSpread2.default)({}, i), {}, {\n                parentName: _this3.currentDeptName\n              });\n            }) || [];\n            resolve(res.result);\n          } else {\n            resolve([]);\n          }\n        }).catch(function () {\n          resolve([]);\n        });\n      } else {\n        resolve([]);\n      }\n    },\n    onSelectDepart: function onSelectDepart(even) {\n      var _this4 = this;\n\n      if (even.id === this.currentDeptId) {\n        return;\n      }\n\n      this.currentPlatformDeptId = even.platformDeptId;\n      this.currentDeptId = even.id;\n      this.currentDeptName = even.deptName;\n      this.$nextTick(function () {\n        _this4.handleSearch();\n      });\n    },\n    confirmDepart: function confirmDepart() {\n      var _this5 = this;\n\n      this.$refs.departForm.validate(function (valid) {\n        if (valid) {\n          if (_this5.deptDialogStatus === 'create') {\n            var params = {\n              parentDeptId: _this5.departForm.parentDeptId,\n              platformDeptId: _this5.departForm.platformDeptId,\n              deptName: _this5.departForm.deptName,\n              deptDesc: _this5.departForm.deptDesc\n            };\n            deptServer.createDeptInfo(params).then(function (res) {\n              if (res.code === 200) {\n                _this5.handleSearch();\n\n                _this5.getDeptTreeList();\n\n                _this5.departVisible = false;\n              }\n            });\n          } else {\n            var _params = {\n              deptId: _this5.departForm.deptId,\n              platformDeptId: _this5.departForm.platformDeptId,\n              deptName: _this5.departForm.deptName,\n              deptDesc: _this5.departForm.deptDesc\n            };\n            deptServer.updateDeptInfo(_params).then(function (res) {\n              if (res.code === 200) {\n                _this5.handleSearch();\n\n                _this5.getDeptTreeList();\n\n                _this5.departVisible = false;\n              }\n            });\n          }\n        }\n      });\n    },\n    confirmPost: function confirmPost() {\n      var _this6 = this;\n\n      this.$refs.postForm.validate(function (valid) {\n        if (valid) {\n          if (_this6.postDialogStatus === 'create') {\n            posiServer.createPositionInfo(_this6.postForm).then(function (result) {\n              _this6.$notify({\n                title: '成功',\n                message: result.message,\n                type: 'success'\n              });\n\n              _this6.handleSearch();\n\n              _this6.postVisible = false;\n            });\n          } else {\n            posiServer.updatePositionInfo(_this6.postForm).then(function (result) {\n              _this6.$notify({\n                title: '成功',\n                message: result.message,\n                type: 'success'\n              });\n\n              _this6.handleSearch();\n\n              _this6.postVisible = false;\n            });\n          }\n        }\n      }).catch(function () {});\n    },\n    handleSearch: function handleSearch() {\n      var _this7 = this;\n\n      if (this.currentDeptId) {\n        this.departData = []; // deptServer.findTopDeptListByParentId(this.currentDeptId).then(res => {\n        //   if (res.code === 200 && res.result) {\n        //     this.departData = res.result.map(i => {\n        //       return { ...i, parentName: this.currentDeptName }\n        //     }) || []\n        //   }\n        // }).catch(() => {})\n\n        posiServer.getDeptListForId(this.currentDeptId).then(function (res) {\n          if (res.code === 200 && res.result) {\n            _this7.departData = res.result.map(function (i) {\n              return (0, _objectSpread2.default)((0, _objectSpread2.default)({}, i), {}, {\n                parentName: _this7.currentDeptName\n              });\n            }) || [];\n          }\n        }).catch(function () {});\n      }\n    },\n    // 新增岗位\n    // handleCreate() {\n    //   this.clearForm()\n    //   this.departForm.parentDeptId = this.currentDeptId\n    //   this.deptDialogStatus = 'create'\n    //   this.postVisible = true\n    // },\n    handlePostCreate: function handlePostCreate() {\n      var _this8 = this;\n\n      // 岗位新增\n      this.clearForm();\n      this.postionArray = {};\n      this.postForm.deptId = this.currentDeptId;\n\n      if (this.currentPlatformDeptId) {\n        deptServer.dpfindPositionIdByDeptId(this.currentPlatformDeptId).then(function (res) {\n          _this8.$nextTick(function () {\n            _this8.postionArray = res.result || {};\n          });\n        });\n      }\n\n      this.postDialogStatus = 'create';\n      this.postVisible = true;\n    },\n    handlePostUpdate: function handlePostUpdate(row) {\n      var _this9 = this;\n\n      // 岗位修改\n      this.clearForm();\n      this.postionArray = {};\n      this.postForm.positionId = row.positionId;\n      this.postForm.platformPositionId = row.platformPositionId;\n      this.postForm.deptId = row.deptId;\n      this.postForm.positionName = row.positionName;\n      this.postForm.positionDesc = row.positionDesc;\n\n      if (this.currentPlatformDeptId) {\n        deptServer.dpfindPositionIdByDeptId(this.currentPlatformDeptId).then(function (res) {\n          _this9.$nextTick(function () {\n            _this9.postionArray = res.result || {};\n          });\n        });\n      }\n\n      this.postDialogStatus = 'edit';\n      this.postVisible = true;\n    },\n    // handleUpdate(row) {\n    //   this.clearForm()\n    //   this.departForm.deptId = row.id\n    //   this.departForm.platformDeptId = row.platformDeptId\n    //   this.departForm.deptName = row.deptName || ''\n    //   this.departForm.deptDesc = row.deptDesc || ''\n    //   this.deptDialogStatus = 'edit'\n    //   this.departVisible = true\n    // },\n    handleDelete: function handleDelete(id) {\n      var _this10 = this;\n\n      this.$confirm('确定删除?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        deptServer.delDeptById(id).then(function (result) {\n          if (result.code === 200) {\n            _this10.$notify({\n              title: '成功',\n              message: result.message,\n              type: 'success'\n            });\n\n            _this10.handleSearch();\n\n            _this10.getDeptTreeList();\n          } else {\n            _this10.$notify({\n              title: '失败',\n              message: result.message,\n              type: 'error'\n            });\n          }\n        });\n      });\n    },\n    appendDepart: function appendDepart(data) {\n      this.clearForm();\n      this.departForm.parentDeptId = data.id;\n      this.departForm.platformDeptId = data.platformDeptId;\n      this.deptDialogStatus = 'create';\n      this.departVisible = true;\n    },\n    updateDepart: function updateDepart(data) {\n      this.clearForm();\n      this.departForm = data;\n      this.deptDialogStatus = 'edit';\n      this.departVisible = true;\n    },\n    removeDepart: function removeDepart(node, data) {\n      var _this11 = this;\n\n      this.$confirm('确定删除?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        deptServer.delDeptById(data.id).then(function (res) {\n          if (res.code === 200) {\n            _this11.getDeptTreeList();\n\n            _this11.currentDeptId = '';\n            _this11.positionData = [];\n          }\n        });\n      });\n    },\n    clearForm: function clearForm() {\n      this.departForm = {\n        parentDeptId: '',\n        platformDeptId: '',\n        deptId: '',\n        deptName: '',\n        deptDesc: ''\n      };\n      this.postForm = {\n        positionId: '',\n        platformPositionId: '',\n        deptId: '',\n        positionName: '',\n        positionDesc: ''\n      };\n    }\n  }\n};\nexports.default = _default;",{"version":3,"sources":["deptNewList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-row :gutter=\"10\">\n      <el-col :span=\"7\">\n        <el-card class=\"card-left\" shadow=\"never\">\n          <el-input\n            v-model=\"filterText\"\n            placeholder=\"输入名称\"\n          />\n          <el-tree\n            ref=\"tree\"\n            class=\"filter-tree\"\n            :data=\"deptTreeData\"\n            :props=\"defaultProps\"\n            highlight-current\n            default-expand-all\n            :filter-node-method=\"filterNode\"\n            :expand-on-click-node=\"false\"\n            @node-click=\"onSelectDepart\"\n          >\n            <span slot-scope=\"{ node, data }\" class=\"custom-tree-node\">\n              <span>{{ node.label }}</span>\n              <span>\n                <el-button\n                  type=\"text\"\n                  size=\"mini\"\n                  @click=\"() => appendDepart(data)\"\n                >\n                  添加\n                </el-button>\n                <el-button\n                  v-if=\"data.id !== '-1001'\"\n                  type=\"text\"\n                  size=\"mini\"\n                  @click=\"() => updateDepart(data)\"\n                >\n                  修改\n                </el-button>\n                <el-button\n                  v-if=\"data.id !== '-1001'\"\n                  type=\"text\"\n                  size=\"mini\"\n                  @click=\"() => removeDepart(node, data)\"\n                >\n                  删除\n                </el-button>\n              </span>\n            </span>\n          </el-tree>\n        </el-card>\n      </el-col>\n      <el-col :span=\"17\">\n        <el-card class=\"card-right\" shadow=\"never\">\n          <div slot=\"header\" class=\"clearfix\">\n            <span>当前部门: <i class=\"el-input__icon\" /></span>{{ currentDeptName }}\n            <el-button style=\"float: right; margin:4px 2px;\" type=\"text\" icon=\"el-icon-refresh\" @click=\"handleSearch\">刷新</el-button>\n            <el-button v-if=\"currentDeptId && currentDeptId !== '-1001' && currentDeptId.length > 0\" style=\"float: right; margin:4px 2px;\" type=\"text\" icon=\"el-icon-plus\" @click=\"handlePostCreate\">新增岗位</el-button>\n          </div>\n          <div>\n            <el-table\n              stripe\n              :data=\"departData\"\n              border\n              highlight-current-row\n              :header-cell-style=\"{background:'#ECF3FC'}\"\n              style=\"width: 100%\"\n            >\n              <template slot=\"empty\">\n                <div class=\"table_empty\">\n                  <div class=\"empty_tips\">\n                    <span>\n                      暂无部门\n                    </span>\n                  </div>\n                </div>\n              </template>\n              <el-table-column type=\"index\" width=\"50\" label=\"序号\" align=\"center\" />\n              <el-table-column prop=\"positionName\" label=\"岗位名称\" align=\"center\" />\n              <el-table-column prop=\"platformPositionVal\" label=\"系统角色\" align=\"center\">\n                <template slot-scope=\"{row}\">\n                  <el-tag>{{ row.platformPositionVal }}</el-tag>\n                </template>\n              </el-table-column>\n              <el-table-column prop=\"positionDesc\" label=\"岗位描述\" align=\"center\" />\n              <el-table-column fixed=\"right\" align=\"center\" width=\"140px\" label=\"操作\">\n                <template slot-scope=\"scope\">\n                  <el-button type=\"text\" @click=\"handlePostUpdate(scope.row)\">编辑</el-button>\n                  <div class=\"erc-divider-vertical\" />\n                  <el-button type=\"text\" @click=\"handleDelete(scope.row.id)\">删除</el-button>\n                </template>\n              </el-table-column>\n            </el-table>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n    <el-dialog :title=\"titleMap[deptDialogStatus]\" :visible.sync=\"departVisible\" center>\n      <div style=\"width: 400px;margin:0 auto;\">\n        <el-form ref=\"departForm\" :model=\"departForm\" :rules=\"departRules\" label-width=\"110px\">\n          <el-form-item prop=\"deptName\" label=\"部门名称:\">\n            <el-input\n              v-model=\"departForm.deptName\"\n              placeholder=\"请录入部门名称\"\n              maxlength=\"15\"\n              show-word-limit\n              style=\"width:90%\"\n            />\n          </el-form-item>\n          <el-form-item prop=\"platformDeptId\" label=\"部门职能:\">\n            <el-select\n              v-model=\"departForm.platformDeptId\"\n              style=\"width:90%\"\n              placeholder=\"业务流转权限关联\"\n            >\n              <el-option\n                v-for=\"item in Object.keys(plDeptmentArray)\"\n                :key=\"item\"\n                :label=\"plDeptmentArray[item]\"\n                :value=\"item\"\n              />\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"部门描述:\">\n            <el-input\n              v-model=\"departForm.deptDesc\"\n              type=\"textarea\"\n              :rows=\"4\"\n              maxlength=\"50\"\n              show-word-limit\n              placeholder=\"请录入部门描述\"\n              style=\"width:90%\"\n            />\n          </el-form-item>\n        </el-form>\n      </div>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"departVisible=false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"confirmDepart\">保存</el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog :title=\"postTitleMap[postDialogStatus]\" :visible.sync=\"postVisible\" center>\n      <div style=\"width: 400px;margin:0 auto;\">\n        <el-form ref=\"postForm\" :model=\"postForm\" :rules=\"postRules\" label-width=\"110px\">\n          <el-form-item prop=\"positionName\" label=\"岗位名称:\">\n            <el-input\n              v-model=\"postForm.positionName\"\n              placeholder=\"请录入岗位名称\"\n              maxlength=\"15\"\n              show-word-limit\n              style=\"width:90%\"\n            />\n          </el-form-item>\n          <el-form-item prop=\"platformDeptId\" label=\"关联系统角色:\">\n            <el-select\n              v-model=\"postForm.platformPositionId\"\n              filterable\n              placeholder=\"关联系统角色\"\n              style=\"width: 90%;\"\n            >\n              <el-option\n                v-for=\"item in Object.keys(postionArray)\"\n                :key=\"item\"\n                :label=\"postionArray[item]\"\n                :value=\"item\"\n              />\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"岗位描述:\">\n            <el-input\n              v-model=\"postForm.positionDesc\"\n              type=\"textarea\"\n              :rows=\"4\"\n              maxlength=\"50\"\n              show-word-limit\n              placeholder=\"请录入岗位描述\"\n              style=\"width:90%\"\n            />\n          </el-form-item>\n        </el-form>\n      </div>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"postVisible=false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"confirmPost\">保存</el-button>\n      </div>\n    </el-dialog>\n\n  </div>\n</template>\n\n<script>\nimport * as deptServer from '@/api/dept'\nimport * as posiServer from '@/api/position'\nimport { getDicKey } from '@/api/dict'\nexport default {\n  name: 'DeptList',\n  data() {\n    return {\n      deptTreeData: [],\n      defaultProps: {\n        children: 'children',\n        label: 'deptName',\n        id: 'id'\n      },\n      titleMap: {\n        edit: '修改部门',\n        create: '新增部门'\n      },\n      postTitleMap: {\n        edit: '修改岗位',\n        create: '新增岗位'\n      },\n      deptDialogStatus: 'create',\n      postDialogStatus: 'create',\n      currentDeptId: '',\n      currentDeptName: '',\n      departData: [],\n      filterText: '',\n      departVisible: false,\n      departForm: {\n        parentDeptId: '',\n        platformDeptId: '',\n        deptId: '',\n        deptName: '',\n        deptDesc: ''\n      },\n      departRules: {\n        deptName: [{ required: true, message: '部门名称', trigger: 'blur' }],\n        platformDeptId: [{ required: true, message: '请选择平台流转权限', trigger: 'change' }]\n      },\n      currentTreeItem: {},\n      departName: '',\n      roleListArray: [],\n      currentNode: {},\n      currentResolve: {},\n      plDeptmentArray: [],\n\n      postVisible: false,\n      postForm: {\n        positionId: '',\n        platformPositionId: '',\n        deptId: '',\n        positionName: '',\n        positionDesc: ''\n      },\n      postionArray: {},\n      currentPlatformDeptId: '',\n      postRules: {\n        positionName: [{ required: true, message: '请录入岗位名称', trigger: 'blur' }],\n        platformPositionId: [{ required: true, message: '请选择系统角色', trigger: 'change' }]\n      }\n    }\n  },\n  watch: {\n    filterText(val) {\n      this.$refs.tree.filter(val)\n    }\n  },\n  created() {\n    this.getDicKey('plDeptmentArray', 1001)\n    this.getDeptTreeList()\n  },\n  methods: {\n    getDicKey(type, code) {\n      getDicKey(code).then(result => {\n        if (result.code === 200) {\n          this[type] = result.result\n        }\n      })\n    },\n    getDeptTreeList() {\n      this.deptTreeData = []\n      deptServer.getDeptTreeList().then(res => {\n        const resObj = res.result || {}\n        this.deptTreeData.push(resObj)\n      })\n    },\n    getPlDepartList() {\n\n    },\n    filterNode(value, data) {\n      if (!value) return true\n\n      return data.deptName.indexOf(value) !== -1\n    },\n    loadNode(node, resolve) {\n      this.currentNode = node\n      this.currentResolve = resolve\n      const obj = node.data\n      this.currentDeptId = obj.id\n      this.currentDeptName = obj.deptName\n      if (node.level === 0) {\n        return resolve([{\n          id: -1001,\n          deptName: this.$store.getters.userInfo.organName || '当前机构',\n          children: []\n        }])\n      }\n      if (this.currentDeptId) {\n        this.departData = []\n        deptServer.findTopDeptListByParentId(this.currentDeptId).then(res => {\n          if (res.code === 200 && res.result) {\n            this.departData = res.result.map(i => {\n              return { ...i, parentName: this.currentDeptName }\n            }) || []\n            resolve(res.result)\n          } else {\n            resolve([])\n          }\n        }).catch(() => {\n          resolve([])\n        })\n      } else {\n        resolve([])\n      }\n    },\n    onSelectDepart(even) {\n      if (even.id === this.currentDeptId) {\n        return\n      }\n      this.currentPlatformDeptId = even.platformDeptId\n      this.currentDeptId = even.id\n      this.currentDeptName = even.deptName\n      this.$nextTick(() => {\n        this.handleSearch()\n      })\n    },\n    confirmDepart() {\n      this.$refs.departForm.validate(valid => {\n        if (valid) {\n          if (this.deptDialogStatus === 'create') {\n            const params = {\n              parentDeptId: this.departForm.parentDeptId,\n              platformDeptId: this.departForm.platformDeptId,\n              deptName: this.departForm.deptName,\n              deptDesc: this.departForm.deptDesc\n            }\n            deptServer.createDeptInfo(params).then(res => {\n              if (res.code === 200) {\n                this.handleSearch()\n                this.getDeptTreeList()\n                this.departVisible = false\n              }\n            })\n          } else {\n            const params = {\n              deptId: this.departForm.deptId,\n              platformDeptId: this.departForm.platformDeptId,\n              deptName: this.departForm.deptName,\n              deptDesc: this.departForm.deptDesc\n            }\n            deptServer.updateDeptInfo(params).then(res => {\n              if (res.code === 200) {\n                this.handleSearch()\n                this.getDeptTreeList()\n                this.departVisible = false\n              }\n            })\n          }\n        }\n      })\n    },\n    confirmPost() {\n      this.$refs.postForm.validate(valid => {\n        if (valid) {\n          if (this.postDialogStatus === 'create') {\n            posiServer.createPositionInfo(this.postForm).then(result => {\n              this.$notify({\n                title: '成功',\n                message: result.message,\n                type: 'success'\n              })\n              this.handleSearch()\n              this.postVisible = false\n            })\n          } else {\n            posiServer.updatePositionInfo(this.postForm).then(result => {\n              this.$notify({\n                title: '成功',\n                message: result.message,\n                type: 'success'\n              })\n              this.handleSearch()\n              this.postVisible = false\n            })\n          }\n        }\n      }).catch(() => {})\n    },\n    handleSearch() {\n      if (this.currentDeptId) {\n        this.departData = []\n        // deptServer.findTopDeptListByParentId(this.currentDeptId).then(res => {\n        //   if (res.code === 200 && res.result) {\n        //     this.departData = res.result.map(i => {\n        //       return { ...i, parentName: this.currentDeptName }\n        //     }) || []\n        //   }\n        // }).catch(() => {})\n        posiServer.getDeptListForId(this.currentDeptId).then(res => {\n          if (res.code === 200 && res.result) {\n            this.departData = res.result.map(i => {\n              return { ...i, parentName: this.currentDeptName }\n            }) || []\n          }\n        }).catch(() => {})\n      }\n    },\n    // 新增岗位\n    // handleCreate() {\n    //   this.clearForm()\n    //   this.departForm.parentDeptId = this.currentDeptId\n    //   this.deptDialogStatus = 'create'\n    //   this.postVisible = true\n    // },\n    handlePostCreate() { // 岗位新增\n      this.clearForm()\n      this.postionArray = {}\n      this.postForm.deptId = this.currentDeptId\n      if (this.currentPlatformDeptId) {\n        deptServer.dpfindPositionIdByDeptId(this.currentPlatformDeptId).then(res => {\n          this.$nextTick(() => {\n            this.postionArray = res.result || {}\n          })\n        })\n      }\n      this.postDialogStatus = 'create'\n      this.postVisible = true\n    },\n    handlePostUpdate(row) { // 岗位修改\n      this.clearForm()\n      this.postionArray = {}\n      this.postForm.positionId = row.positionId\n      this.postForm.platformPositionId = row.platformPositionId\n      this.postForm.deptId = row.deptId\n      this.postForm.positionName = row.positionName\n      this.postForm.positionDesc = row.positionDesc\n      if (this.currentPlatformDeptId) {\n        deptServer.dpfindPositionIdByDeptId(this.currentPlatformDeptId).then(res => {\n          this.$nextTick(() => {\n            this.postionArray = res.result || {}\n          })\n        })\n      }\n      this.postDialogStatus = 'edit'\n      this.postVisible = true\n    },\n\n    // handleUpdate(row) {\n    //   this.clearForm()\n    //   this.departForm.deptId = row.id\n    //   this.departForm.platformDeptId = row.platformDeptId\n    //   this.departForm.deptName = row.deptName || ''\n    //   this.departForm.deptDesc = row.deptDesc || ''\n    //   this.deptDialogStatus = 'edit'\n    //   this.departVisible = true\n    // },\n    handleDelete(id) {\n      this.$confirm('确定删除?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        deptServer.delDeptById(id).then(result => {\n          if (result.code === 200) {\n            this.$notify({\n              title: '成功',\n              message: result.message,\n              type: 'success'\n            })\n            this.handleSearch()\n            this.getDeptTreeList()\n          } else {\n            this.$notify({\n              title: '失败',\n              message: result.message,\n              type: 'error'\n            })\n          }\n        })\n      })\n    },\n    appendDepart(data) {\n      this.clearForm()\n      this.departForm.parentDeptId = data.id\n      this.departForm.platformDeptId = data.platformDeptId\n      this.deptDialogStatus = 'create'\n      this.departVisible = true\n    },\n    updateDepart(data) {\n      this.clearForm()\n      this.departForm = data\n      this.deptDialogStatus = 'edit'\n      this.departVisible = true\n    },\n    removeDepart(node, data) {\n      this.$confirm('确定删除?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        deptServer.delDeptById(data.id).then(res => {\n          if (res.code === 200) {\n            this.getDeptTreeList()\n            this.currentDeptId = ''\n            this.positionData = []\n          }\n        })\n      })\n    },\n    clearForm() {\n      this.departForm = {\n        parentDeptId: '',\n        platformDeptId: '',\n        deptId: '',\n        deptName: '',\n        deptDesc: ''\n      }\n      this.postForm = {\n        positionId: '',\n        platformPositionId: '',\n        deptId: '',\n        positionName: '',\n        positionDesc: ''\n      }\n    }\n\n  }\n}\n</script>\n\n<style scoped lang=\"scss\" type=\"text/scss\">\n  .search_div {\n    >div {\n      &:nth-child(1){\n        margin-right: 10px;\n      }\n      display: inline-block;\n    }\n  }\n\n  .search_input {\n    width: 200px;\n    margin-bottom: 5px;\n  }\n  .search-right {\n    text-align: right;\n    padding-right: 25px;\n  }\n  .info-container {\n    padding: 0;\n    margin: 0;\n    height: auto;\n    width: 100%;\n  }\n  .card-left {\n    width: 100%;\n    min-height: 600px;\n  }\n  .card-right {\n    width: 100%;\n    min-height: 600px;\n  }\n  .card-right {\n    right: 0px;\n    width: 100%;\n    height: 100%;\n  }\n  .filter-tree {\n    margin-top: 15px;\n    line-height: 10px;;\n  }\n  .custom-tree-node {\n    flex: 1;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    font-size: 14px;\n    padding-right: 8px;\n  }\n  ::v-deep .el-card .el-card__header {\n    padding: 5px 20px;\n  }\n  .block-flex {\n    position: relative;\n    display: flex;\n    &>div{\n      border: 1px solid #B7B7B7;\n      width: 100px;\n      margin: 0;\n      line-height: 30px;\n      text-align: center;\n    }\n    &>div:first-child {\n      background: #B7B7B7;\n    }\n  }\n</style>\n"],"sourceRoot":"src/views/system/dept"}]}