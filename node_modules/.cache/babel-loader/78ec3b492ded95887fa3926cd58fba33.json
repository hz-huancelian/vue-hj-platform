{"remainingRequest":"F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\babel-loader\\lib\\index.js!F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\webstormProjectsJiu\\vue-hj-platform\\src\\views\\system\\role\\roleList.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\src\\views\\system\\role\\roleList.vue","mtime":1638252990000},{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\babel.config.js","mtime":1637214064000},{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"F:\\\\webstormProjectsJiu\\\\vue-hj-platform\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\interopRequireWildcard.js\");\n\nvar _interopRequireDefault = require(\"F:\\\\webstormProjectsJiu\\\\vue-hj-platform\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\interopRequireDefault.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es7.array.includes\");\n\nrequire(\"core-js/modules/es6.string.includes\");\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"F:\\\\webstormProjectsJiu\\\\vue-hj-platform\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\toConsumableArray.js\"));\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"F:\\\\webstormProjectsJiu\\\\vue-hj-platform\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\objectSpread2.js\"));\n\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"F:\\\\webstormProjectsJiu\\\\vue-hj-platform\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\createForOfIteratorHelper.js\"));\n\nvar roleServer = _interopRequireWildcard(require(\"@/api/role\"));\n\nvar _Pagination = _interopRequireDefault(require(\"@/components/Pagination\"));\n\nvar _dict = require(\"@/api/dict\");\n\nvar _router = require(\"@/router\");\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// Secondary package based on el-pagination\nvar _default = {\n  name: 'UserList',\n  components: {\n    Pagination: _Pagination.default\n  },\n  data: function data() {\n    return {\n      roleData: [],\n      searchForm: {\n        roleName: '',\n        pageNumber: 1,\n        pageSize: 10\n      },\n      total: 0,\n      titleMap: {\n        edit: '修改角色',\n        create: '新增角色'\n      },\n      roleForm: {\n        roleId: '',\n        roleName: '',\n        platformPositionId: '',\n        roleDesc: ''\n      },\n      roleRules: {\n        roleName: [{\n          required: true,\n          message: '请录入角色名称',\n          trigger: 'blur'\n        }],\n        platformPositionId: [{\n          required: true,\n          message: '请关联岗位',\n          trigger: 'change'\n        }]\n      },\n      roleDialogStatus: 'create',\n      roleDialogVisible: false,\n      permissionsVisible: false,\n      checkStrictly: false,\n      routes: [],\n      defaultProps: {\n        children: 'children',\n        label: 'title'\n      },\n      currentItem: {},\n      positionArray: []\n    };\n  },\n  computed: {\n    routesData: function routesData() {\n      return this.routes;\n    }\n  },\n  created: function created() {\n    this.getDicKey('positionArray', 1003);\n    this.handleSearch();\n    this.getRoutes();\n  },\n  methods: {\n    getDicKey: function getDicKey(type, code) {\n      var _this = this;\n\n      (0, _dict.getDicKey)(code).then(function (result) {\n        if (result.code === 200) {\n          _this[type] = result.result;\n        }\n      });\n    },\n    getRoutes: function getRoutes() {\n      var newRoutes = _router.asyncRoutes;\n      this.routes = this.generateRoutes(newRoutes);\n    },\n    handleSearch: function handleSearch() {\n      var _this2 = this;\n\n      roleServer.getRoleList(this.searchForm).then(function (res) {\n        if (res.code === 200) {\n          _this2.roleData = res.result.records || [];\n          _this2.total = res.result.total;\n        }\n      });\n    },\n    // 重置\n    handleCreate: function handleCreate() {\n      this.clearForm();\n      this.roleDialogStatus = 'create';\n\n      if (this.$refs.roleForm !== undefined) {\n        this.$refs.roleForm.resetFields();\n      }\n\n      this.roleDialogVisible = true;\n    },\n    handleUpdate: function handleUpdate(row) {\n      if (this.$refs.roleForm !== undefined) {\n        this.$refs.roleForm.resetFields();\n      }\n\n      this.roleForm.roleId = row.roleId;\n      this.roleForm.roleName = row.roleName || '';\n      this.roleForm.platformPositionId = row.platformPositionId || '';\n      this.roleForm.roleDesc = row.roleDesc || '';\n      this.roleDialogStatus = 'edit';\n      this.roleDialogVisible = true;\n    },\n    confirmDialog: function confirmDialog() {\n      if (this.roleDialogStatus === 'create') {\n        this.confirmCreate();\n      } else {\n        this.confirmUpdate();\n      }\n    },\n    confirmCreate: function confirmCreate() {\n      var _this3 = this;\n\n      this.$refs.roleForm.validate(function (valid) {\n        if (valid) {\n          roleServer.addRoleInfo(_this3.roleForm).then(function (request) {\n            _this3.$notify({\n              title: '成功',\n              message: request.message,\n              type: 'success'\n            });\n\n            _this3.handleSearch();\n\n            _this3.roleDialogVisible = false;\n\n            _this3.$refs.roleForm.resetFields();\n          }).catch(function () {});\n        } else {\n          return false;\n        }\n      });\n    },\n    confirmUpdate: function confirmUpdate() {\n      var _this4 = this;\n\n      this.$refs.roleForm.validate(function (valid) {\n        if (valid) {\n          roleServer.updRoleInfo(_this4.roleForm).then(function (request) {\n            _this4.$notify({\n              title: '成功',\n              message: request.message,\n              type: 'success'\n            });\n\n            _this4.handleSearch();\n\n            _this4.roleDialogVisible = false;\n\n            _this4.$refs.roleForm.resetFields();\n          }).catch(function () {});\n        } else {\n          return false;\n        }\n      });\n    },\n    handleDelete: function handleDelete(id) {\n      var _this5 = this;\n\n      this.$confirm('确定删除?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        roleServer.delRolePerms(id).then(function (result) {\n          if (result.code === 200) {\n            _this5.$notify({\n              title: '成功',\n              message: result.message,\n              type: 'success'\n            });\n\n            _this5.handleSearch();\n          } else {\n            _this5.$notify({\n              title: '失败',\n              message: result.message,\n              type: 'error'\n            });\n          }\n        });\n      }).catch(function () {});\n    },\n    clearForm: function clearForm() {\n      this.roleForm = {\n        roleId: '',\n        roleName: '',\n        platformPositionId: '',\n        roleDesc: ''\n      };\n    },\n    handleRelation: function handleRelation(_ref) {\n      var _this6 = this;\n\n      var roleId = _ref.roleId,\n          roleName = _ref.roleName,\n          rolesDesc = _ref.rolesDesc;\n      this.currentItem = {\n        roleId: roleId,\n        roleName: roleName,\n        rolesDesc: rolesDesc\n      };\n      roleServer.findPermsByRoleId(roleId).then(function (res) {\n        if (res.code === 200) {\n          var result = res.result || [];\n\n          _this6.$nextTick(function () {\n            _this6.$refs.tree.setCheckedKeys(result);\n          });\n        }\n      });\n      this.permissionsVisible = true;\n    },\n    resetChecked: function resetChecked() {\n      this.$refs.tree.setCheckedKeys([]);\n    },\n    generateRoutes: function generateRoutes(routes) {\n      var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '/';\n      var res = [];\n\n      var _iterator = (0, _createForOfIteratorHelper2.default)(routes),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var route = _step.value;\n\n          // skip some route\n          if (route.hidden) {\n            continue;\n          }\n\n          var onlyOneShowingChild = this.onlyOneShowingChild(route.children, route);\n\n          if (route.children && onlyOneShowingChild && !route.alwaysShow) {\n            route = onlyOneShowingChild;\n          }\n\n          var data = {\n            path: _path.default.resolve(basePath, route.path),\n            title: route.meta && route.meta.title\n          }; // recursive child routes\n\n          if (route.children) {\n            data.children = this.generateRoutes(route.children, data.path);\n          }\n\n          res.push(data);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return res;\n    },\n    onlyOneShowingChild: function onlyOneShowingChild() {\n      var children = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var parent = arguments.length > 1 ? arguments[1] : undefined;\n      var onlyOneChild = null;\n      var showingChildren = children.filter(function (item) {\n        return !item.hidden;\n      }); // When there is only one child route, the child route is displayed by default\n\n      if (showingChildren.length === 1) {\n        onlyOneChild = showingChildren[0];\n        onlyOneChild.path = _path.default.resolve(parent.path, onlyOneChild.path);\n        return onlyOneChild;\n      } // Show parent if there are no child route to display\n\n\n      if (showingChildren.length === 0) {\n        onlyOneChild = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, parent), {}, {\n          path: '',\n          noShowingChildren: true\n        });\n        return onlyOneChild;\n      }\n\n      return false;\n    },\n    confirmPermissions: function confirmPermissions() {\n      var _this7 = this;\n\n      var checkedKeys = this.$refs.tree.getCheckedKeys();\n      var params = {\n        roleId: this.currentItem.roleId,\n        permUrls: checkedKeys\n      };\n      roleServer.saveRolePerms(params).then(function (result) {\n        if (result.code === 200) {\n          _this7.$notify({\n            title: '成功',\n            message: result.message,\n            type: 'success'\n          });\n\n          _this7.resetChecked();\n\n          _this7.permissionsVisible = false;\n        } else {\n          _this7.$notify({\n            title: '失败',\n            message: result.message,\n            type: 'error'\n          });\n        }\n      }).catch(function () {});\n    },\n    generateArr: function generateArr(routes) {\n      var _this8 = this;\n\n      var data = [];\n      routes.forEach(function (route) {\n        data.push(route);\n\n        if (route.children) {\n          var temp = _this8.generateArr(route.children);\n\n          if (temp.length > 0) {\n            data = [].concat((0, _toConsumableArray2.default)(data), (0, _toConsumableArray2.default)(temp));\n          }\n        }\n      });\n      return data;\n    },\n    generateTree: function generateTree(routes) {\n      var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '/';\n      var checkedKeys = arguments.length > 2 ? arguments[2] : undefined;\n      // 原始数据被修改 这里传入数据要深拷贝\n      var res = [];\n\n      var _iterator2 = (0, _createForOfIteratorHelper2.default)(routes),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var route = _step2.value;\n\n          var routePath = _path.default.resolve(basePath, route.path); // recursive child routes\n\n\n          if (route.children) {\n            route.children = this.generateTree(route.children, routePath, checkedKeys);\n          }\n\n          if (checkedKeys.includes(routePath) || route.children && route.children.length >= 1) {\n            res.push(route);\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return res;\n    }\n  }\n};\nexports.default = _default;",{"version":3,"sources":["roleList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-form :model=\"searchForm\" :inline=\"true\">\n      <el-row>\n        <el-col :span=\"20\">\n          <el-form-item label=\"角色名称:\">\n            <el-input v-model=\"searchForm.roleName\" style=\"width:165px\" placeholder=\"角色名称\" />\n          </el-form-item>\n          <el-form-item>\n            <el-button type=\"primary\" class=\"iconfont icon-chaxun1\" @click=\"handleSearch\"> 查询</el-button>\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"4\" class=\"search-right\">\n          <el-button type=\"text\" icon=\"el-icon-plus\" @click=\"handleCreate\">新增</el-button>\n          <el-button type=\"text\" icon=\"el-icon-refresh\" @click=\"handleSearch\">刷新</el-button>\n        </el-col>\n      </el-row>\n    </el-form>\n    <div>\n      <el-table\n        stripe\n        :data=\"roleData\"\n        highlight-current-row\n        :header-cell-style=\"{background:'#ECF3FC'}\"\n        style=\"width: 100%\"\n      >\n        <template slot=\"empty\">\n          <div class=\"table_empty\">\n            <div class=\"empty_tips\">\n              <span>\n                暂无角色,\n              </span>\n              <el-button type=\"text\" size=\"small\" style=\"font-size:14px;\" @click=\"handleCreate\">新建用户角色</el-button>\n            </div>\n          </div>\n        </template>\n        <el-table-column type=\"index\" width=\"55\" label=\"序号\" align=\"center\" />\n        <el-table-column prop=\"roleName\" label=\"角色名称\" align=\"center\" />\n        <el-table-column prop=\"platformPositionName\" label=\"平台岗位\" align=\"center\" />\n        <el-table-column prop=\"roleDesc\" label=\"角色描述\" align=\"center\" />\n\n        <el-table-column fixed=\"right\" align=\"center\" label=\"操作\" width=\"180\">\n          <template slot-scope=\"scope\">\n            <el-button type=\"text\" @click=\"handleRelation(scope.row)\">关联菜单</el-button>\n            <div class=\"erc-divider-vertical\" />\n            <el-button type=\"text\" @click=\"handleUpdate(scope.row)\">编辑</el-button>\n            <div class=\"erc-divider-vertical\" />\n            <el-button type=\"text\" @click=\"handleDelete(scope.row.roleId)\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </div>\n    <div style=\"float: right\">\n      <pagination\n        v-show=\"total>0\"\n        :total=\"total\"\n        :page.sync=\"searchForm.pageNumber\"\n        :limit.sync=\"searchForm.pageSize\"\n        @pagination=\"handleSearch\"\n      />\n    </div>\n\n    <el-dialog :title=\"titleMap[roleDialogStatus]\" :visible.sync=\"roleDialogVisible\" width=\"50%\">\n      <div style=\"width: 550px;margin:0 auto;\">\n        <el-form ref=\"roleForm\" :model=\"roleForm\" :rules=\"roleRules\" label-width=\"130px\">\n          <el-form-item prop=\"roleName\" label=\"岗位:\">\n            <el-input v-model=\"roleForm.roleName\" placeholder=\"岗位\" maxlength=\"8\" show-word-limit style=\"width: 70%;\" />\n          </el-form-item>\n          <el-form-item prop=\"platformPositionId\" label=\"角色:\">\n            <el-select v-model=\"roleForm.platformPositionId\" placeholder=\"角色\" style=\"width: 70%;\">\n              <el-option\n                v-for=\"item in Object.keys(positionArray)\"\n                :key=\"item\"\n                :label=\"positionArray[item]\"\n                :value=\"item\"\n              />\n            </el-select>\n          </el-form-item>\n          <el-form-item prop=\"roleDesc\" label=\"岗位描述:\">\n            <el-input v-model=\"roleForm.roleDesc\" type=\"textarea\" :rows=\"2\" maxlength=\"50\" show-word-limit placeholder=\"岗位描述\" style=\"width: 70%;\" />\n          </el-form-item>\n        </el-form>\n      </div>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"roleDialogVisible=false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"confirmDialog\">确认</el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog title=\"分配菜单权限\" :visible.sync=\"permissionsVisible\">\n      <el-tree\n        ref=\"tree\"\n        :check-strictly=\"checkStrictly\"\n        :data=\"routesData\"\n        :props=\"defaultProps\"\n        show-checkbox\n        node-key=\"path\"\n      />\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"permissionsVisible=false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"confirmPermissions\">保存</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport * as roleServer from '@/api/role'\nimport Pagination from '@/components/Pagination' // Secondary package based on el-pagination\n\nimport { getDicKey } from '@/api/dict'\nimport { asyncRoutes } from '@/router'\nimport path from 'path'\nexport default {\n  name: 'UserList',\n  components: { Pagination },\n  data() {\n    return {\n      roleData: [],\n      searchForm: {\n        roleName: '',\n        pageNumber: 1,\n        pageSize: 10\n      },\n      total: 0,\n      titleMap: {\n        edit: '修改角色',\n        create: '新增角色'\n      },\n      roleForm: {\n        roleId: '',\n        roleName: '',\n        platformPositionId: '',\n        roleDesc: ''\n      },\n      roleRules: {\n        roleName: [{ required: true, message: '请录入角色名称', trigger: 'blur' }],\n        platformPositionId: [{ required: true, message: '请关联岗位', trigger: 'change' }]\n      },\n      roleDialogStatus: 'create',\n      roleDialogVisible: false,\n      permissionsVisible: false,\n      checkStrictly: false,\n      routes: [],\n      defaultProps: {\n        children: 'children',\n        label: 'title'\n      },\n      currentItem: {},\n      positionArray: []\n\n    }\n  },\n  computed: {\n    routesData() {\n      return this.routes\n    }\n  },\n  created() {\n    this.getDicKey('positionArray', 1003)\n    this.handleSearch()\n    this.getRoutes()\n  },\n  methods: {\n    getDicKey(type, code) {\n      getDicKey(code).then(result => {\n        if (result.code === 200) {\n          this[type] = result.result\n        }\n      })\n    },\n    getRoutes() {\n      const newRoutes = asyncRoutes\n      this.routes = this.generateRoutes(newRoutes)\n    },\n    handleSearch() {\n      roleServer.getRoleList(this.searchForm).then(res => {\n        if (res.code === 200) {\n          this.roleData = res.result.records || []\n          this.total = res.result.total\n        }\n      })\n    },\n    // 重置\n    handleCreate() {\n      this.clearForm()\n      this.roleDialogStatus = 'create'\n\n      if (this.$refs.roleForm !== undefined) {\n        this.$refs.roleForm.resetFields()\n      }\n      this.roleDialogVisible = true\n    },\n    handleUpdate(row) {\n      if (this.$refs.roleForm !== undefined) {\n        this.$refs.roleForm.resetFields()\n      }\n      this.roleForm.roleId = row.roleId\n      this.roleForm.roleName = row.roleName || ''\n      this.roleForm.platformPositionId = row.platformPositionId || ''\n      this.roleForm.roleDesc = row.roleDesc || ''\n      this.roleDialogStatus = 'edit'\n      this.roleDialogVisible = true\n    },\n    confirmDialog() {\n      if (this.roleDialogStatus === 'create') {\n        this.confirmCreate()\n      } else {\n        this.confirmUpdate()\n      }\n    },\n    confirmCreate() {\n      this.$refs.roleForm.validate(valid => {\n        if (valid) {\n          roleServer.addRoleInfo(this.roleForm).then(request => {\n            this.$notify({\n              title: '成功',\n              message: request.message,\n              type: 'success'\n            })\n            this.handleSearch()\n            this.roleDialogVisible = false\n            this.$refs.roleForm.resetFields()\n          }).catch(() => {})\n        } else {\n          return false\n        }\n      })\n    },\n    confirmUpdate() {\n      this.$refs.roleForm.validate(valid => {\n        if (valid) {\n          roleServer.updRoleInfo(this.roleForm).then(request => {\n            this.$notify({\n              title: '成功',\n              message: request.message,\n              type: 'success'\n            })\n            this.handleSearch()\n            this.roleDialogVisible = false\n            this.$refs.roleForm.resetFields()\n          }).catch(() => {})\n        } else {\n          return false\n        }\n      })\n    },\n    handleDelete(id) {\n      this.$confirm('确定删除?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        roleServer.delRolePerms(id).then(result => {\n          if (result.code === 200) {\n            this.$notify({\n              title: '成功',\n              message: result.message,\n              type: 'success'\n            })\n            this.handleSearch()\n          } else {\n            this.$notify({\n              title: '失败',\n              message: result.message,\n              type: 'error'\n            })\n          }\n        })\n      }).catch(() => {})\n    },\n    clearForm() {\n      this.roleForm = {\n        roleId: '',\n        roleName: '',\n        platformPositionId: '',\n        roleDesc: ''\n      }\n    },\n    handleRelation({ roleId, roleName, rolesDesc }) {\n      this.currentItem = { roleId, roleName, rolesDesc }\n      roleServer.findPermsByRoleId(roleId).then(res => {\n        if (res.code === 200) {\n          const result = res.result || []\n          this.$nextTick(() => {\n            this.$refs.tree.setCheckedKeys(result)\n          })\n        }\n      })\n      this.permissionsVisible = true\n    },\n    resetChecked() {\n      this.$refs.tree.setCheckedKeys([])\n    },\n    generateRoutes(routes, basePath = '/') {\n      const res = []\n      for (let route of routes) {\n        // skip some route\n        if (route.hidden) {\n          continue\n        }\n        const onlyOneShowingChild = this.onlyOneShowingChild(\n          route.children,\n          route\n        )\n        if (route.children && onlyOneShowingChild && !route.alwaysShow) {\n          route = onlyOneShowingChild\n        }\n        const data = {\n          path: path.resolve(basePath, route.path),\n          title: route.meta && route.meta.title\n        }\n        // recursive child routes\n        if (route.children) {\n          data.children = this.generateRoutes(route.children, data.path)\n        }\n        res.push(data)\n      }\n      return res\n    },\n\n    onlyOneShowingChild(children = [], parent) {\n      let onlyOneChild = null\n      const showingChildren = children.filter(item => !item.hidden)\n\n      // When there is only one child route, the child route is displayed by default\n      if (showingChildren.length === 1) {\n        onlyOneChild = showingChildren[0]\n        onlyOneChild.path = path.resolve(parent.path, onlyOneChild.path)\n        return onlyOneChild\n      }\n\n      // Show parent if there are no child route to display\n      if (showingChildren.length === 0) {\n        onlyOneChild = { ...parent, path: '', noShowingChildren: true }\n        return onlyOneChild\n      }\n\n      return false\n    },\n    confirmPermissions() {\n      const checkedKeys = this.$refs.tree.getCheckedKeys()\n\n      const params = {\n        roleId: this.currentItem.roleId,\n        permUrls: checkedKeys\n      }\n      roleServer.saveRolePerms(params).then(result => {\n        if (result.code === 200) {\n          this.$notify({\n            title: '成功',\n            message: result.message,\n            type: 'success'\n          })\n          this.resetChecked()\n          this.permissionsVisible = false\n        } else {\n          this.$notify({\n            title: '失败',\n            message: result.message,\n            type: 'error'\n          })\n        }\n      }).catch(() => {})\n    },\n    generateArr(routes) {\n      let data = []\n      routes.forEach(route => {\n        data.push(route)\n        if (route.children) {\n          const temp = this.generateArr(route.children)\n          if (temp.length > 0) {\n            data = [...data, ...temp]\n          }\n        }\n      })\n      return data\n    },\n    generateTree(routes, basePath = '/', checkedKeys) {\n      // 原始数据被修改 这里传入数据要深拷贝\n      const res = []\n      for (const route of routes) {\n        const routePath = path.resolve(basePath, route.path)\n\n        // recursive child routes\n        if (route.children) {\n          route.children = this.generateTree(\n            route.children,\n            routePath,\n            checkedKeys\n          )\n        }\n\n        if (\n          checkedKeys.includes(routePath) ||\n          (route.children && route.children.length >= 1)\n        ) {\n          res.push(route)\n        }\n      }\n      return res\n    }\n\n  }\n}\n</script>\n\n<style scoped lang=\"scss\" type=\"text/scss\">\n  .search_div {\n    >div {\n      &:nth-child(1){\n        margin-right: 10px;\n      }\n      display: inline-block;\n    }\n  }\n\n  .search_input {\n    width: 200px;\n    margin-bottom: 5px;\n  }\n  .search-right {\n    text-align: right;\n    padding-right: 25px;\n  }\n</style>\n"],"sourceRoot":"src/views/system/role"}]}