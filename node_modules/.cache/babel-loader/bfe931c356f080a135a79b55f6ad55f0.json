{"remainingRequest":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\babel-loader\\lib\\index.js!F:\\webstormProjects\\vue-hj-platform\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\webstormProjects\\vue-hj-platform\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\webstormProjects\\vue-hj-platform\\src\\views\\profile\\resetPwd.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\webstormProjects\\vue-hj-platform\\src\\views\\profile\\resetPwd.vue","mtime":1637214064000},{"path":"F:\\webstormProjects\\vue-hj-platform\\babel.config.js","mtime":1637214064000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"F:\\\\webstormProjects\\\\vue-hj-platform\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\interopRequireDefault.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectSpread2 = _interopRequireDefault(require(\"F:\\\\webstormProjects\\\\vue-hj-platform\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\objectSpread2.js\"));\n\nvar _organ = require(\"@/api/organ\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  data: function data() {\n    var _this = this;\n\n    var equalToPassword = function equalToPassword(rule, value, callback) {\n      if (_this.user.newPassword !== value) {\n        callback(new Error('两次输入的密码不一致'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      test: '1test',\n      user: {\n        userId: this.$store.getters.userInfo.userId,\n        oldPassword: '',\n        newPassword: '',\n        confirmPassword: ''\n      },\n      // 表单校验\n      rules: {\n        oldPassword: [{\n          required: true,\n          message: '旧密码不能为空',\n          trigger: 'blur'\n        }],\n        newPassword: [{\n          required: true,\n          message: '新密码不能为空',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          max: 20,\n          message: '长度在 6 到 20 个字符',\n          trigger: 'blur'\n        }],\n        confirmPassword: [{\n          required: true,\n          message: '确认密码不能为空',\n          trigger: 'blur'\n        }, {\n          required: true,\n          validator: equalToPassword,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    submit: function submit() {\n      var _this2 = this;\n\n      this.$refs['form'].validate(function (valid) {\n        if (valid) {\n          var params = (0, _objectSpread2.default)({}, _this2.user);\n\n          _this2.$delete(params, 'confirmPassword');\n\n          (0, _organ.modifyPassword)(params).then(function (response) {\n            _this2.msgSuccess('修改成功');\n          });\n        }\n      });\n    },\n    close: function close() {\n      // this.$store.dispatch('tagsView/delView', this.$route)\n      this.$router.push({\n        path: '/'\n      });\n    }\n  }\n};\nexports.default = _default;",{"version":3,"sources":["resetPwd.vue"],"names":[],"mappings":";;;;;;;;;;;AAmBA;;;;;;;;;;;;;;;;;;;;eAEA;AACA,EAAA,IADA,kBACA;AAAA;;AACA,QAAA,eAAA,GAAA,SAAA,eAAA,CAAA,IAAA,EAAA,KAAA,EAAA,QAAA,EAAA;AACA,UAAA,KAAA,CAAA,IAAA,CAAA,WAAA,KAAA,KAAA,EAAA;AACA,QAAA,QAAA,CAAA,IAAA,KAAA,CAAA,YAAA,CAAA,CAAA;AACA,OAFA,MAEA;AACA,QAAA,QAAA;AACA;AACA,KANA;;AAOA,WAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,IAAA,EAAA;AACA,QAAA,MAAA,EAAA,KAAA,MAAA,CAAA,OAAA,CAAA,QAAA,CAAA,MADA;AAEA,QAAA,WAAA,EAAA,EAFA;AAGA,QAAA,WAAA,EAAA,EAHA;AAIA,QAAA,eAAA,EAAA;AAJA,OAFA;AAQA;AACA,MAAA,KAAA,EAAA;AACA,QAAA,WAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,SAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA,CADA;AAIA,QAAA,WAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,SAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA,EAEA;AAAA,UAAA,GAAA,EAAA,CAAA;AAAA,UAAA,GAAA,EAAA,EAAA;AAAA,UAAA,OAAA,EAAA,gBAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAFA,CAJA;AAQA,QAAA,eAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,UAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA,EAEA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,SAAA,EAAA,eAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAFA;AARA;AATA,KAAA;AAuBA,GAhCA;AAiCA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,oBACA;AAAA;;AACA,WAAA,KAAA,CAAA,MAAA,EAAA,QAAA,CAAA,UAAA,KAAA,EAAA;AACA,YAAA,KAAA,EAAA;AACA,cAAA,MAAA,mCACA,MAAA,CAAA,IADA,CAAA;;AAGA,UAAA,MAAA,CAAA,OAAA,CAAA,MAAA,EAAA,iBAAA;;AACA,qCAAA,MAAA,EAAA,IAAA,CACA,UAAA,QAAA,EAAA;AACA,YAAA,MAAA,CAAA,UAAA,CAAA,MAAA;AACA,WAHA;AAKA;AACA,OAZA;AAaA,KAfA;AAgBA,IAAA,KAhBA,mBAgBA;AACA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAAA;AACA;AAnBA;AAjCA,C","sourcesContent":["<template>\n  <el-form ref=\"form\" :model=\"user\" :rules=\"rules\" label-width=\"80px\">\n    <el-form-item label=\"旧密码\" prop=\"oldPassword\">\n      <el-input v-model=\"user.oldPassword\" placeholder=\"请输入旧密码\" type=\"password\" show-password />\n    </el-form-item>\n    <el-form-item label=\"新密码\" prop=\"newPassword\">\n      <el-input v-model=\"user.newPassword\" placeholder=\"请输入新密码\" type=\"password\" show-password />\n    </el-form-item>\n    <el-form-item label=\"确认密码\" prop=\"confirmPassword\">\n      <el-input v-model=\"user.confirmPassword\" placeholder=\"请确认密码\" type=\"password\" show-password />\n    </el-form-item>\n    <el-form-item>\n      <el-button type=\"primary\" size=\"small\" @click=\"submit\">保存</el-button>\n      <el-button type=\"danger\" size=\"small\" @click=\"close\">关闭</el-button>\n    </el-form-item>\n  </el-form>\n</template>\n\n<script>\nimport { modifyPassword } from '@/api/organ'\n\nexport default {\n  data() {\n    const equalToPassword = (rule, value, callback) => {\n      if (this.user.newPassword !== value) {\n        callback(new Error('两次输入的密码不一致'))\n      } else {\n        callback()\n      }\n    }\n    return {\n      test: '1test',\n      user: {\n        userId: this.$store.getters.userInfo.userId,\n        oldPassword: '',\n        newPassword: '',\n        confirmPassword: ''\n      },\n      // 表单校验\n      rules: {\n        oldPassword: [\n          { required: true, message: '旧密码不能为空', trigger: 'blur' }\n        ],\n        newPassword: [\n          { required: true, message: '新密码不能为空', trigger: 'blur' },\n          { min: 6, max: 20, message: '长度在 6 到 20 个字符', trigger: 'blur' }\n        ],\n        confirmPassword: [\n          { required: true, message: '确认密码不能为空', trigger: 'blur' },\n          { required: true, validator: equalToPassword, trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  methods: {\n    submit() {\n      this.$refs['form'].validate(valid => {\n        if (valid) {\n          const params = {\n            ...this.user\n          }\n          this.$delete(params, 'confirmPassword')\n          modifyPassword(params).then(\n            response => {\n              this.msgSuccess('修改成功')\n            }\n          )\n        }\n      })\n    },\n    close() {\n      // this.$store.dispatch('tagsView/delView', this.$route)\n      this.$router.push({ path: '/' })\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/profile"}]}