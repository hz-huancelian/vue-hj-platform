{"remainingRequest":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\babel-loader\\lib\\index.js!F:\\webstormProjects\\vue-hj-platform\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\webstormProjects\\vue-hj-platform\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\webstormProjects\\vue-hj-platform\\src\\components\\FactorList\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\webstormProjects\\vue-hj-platform\\src\\components\\FactorList\\index.vue","mtime":1652335591000},{"path":"F:\\webstormProjects\\vue-hj-platform\\babel.config.js","mtime":1637214064000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"F:\\\\webstormProjects\\\\vue-hj-platform\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\interopRequireWildcard.js\");\n\nvar _interopRequireDefault = require(\"F:\\\\webstormProjects\\\\vue-hj-platform\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\interopRequireDefault.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.find\");\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"F:\\\\webstormProjects\\\\vue-hj-platform\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\asyncToGenerator.js\"));\n\nvar _Pagination = _interopRequireDefault(require(\"@/components/Pagination\"));\n\nvar factorServer = _interopRequireWildcard(require(\"@/api/factor\"));\n\nvar dictServer = _interopRequireWildcard(require(\"@/api/dict\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// Secondary package based on el-pagination\nvar STOKEN_STUTS = {\n  '0': '现行',\n  '1': '自定义标准',\n  '2': '试行'\n};\nvar _default2 = {\n  components: {\n    Pagination: _Pagination.default\n  },\n  props: {\n    showSelect: {\n      type: Boolean,\n      default: true\n    },\n    authType: {\n      type: String,\n      default: ''\n    },\n    choseRow: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    clearType: {\n      type: String,\n      default: ''\n    }\n  },\n  data: function data() {\n    return {\n      STOKEN_STUTS: STOKEN_STUTS,\n      searchForm: {\n        classId: '',\n        factorName: '',\n        authType: '',\n        standardNo: '',\n        standardName: '',\n        pageNumber: 1,\n        pageSize: 10\n      },\n      total: 0,\n      factorData: [],\n      categoryArray: [],\n      classArray: [],\n      secClassArray: [],\n      secdClassId: ''\n    };\n  },\n  watch: {\n    clearType: function clearType() {\n      this.searchForm = {\n        classId: '',\n        factorName: '',\n        authType: '',\n        standardNo: '',\n        standardName: '',\n        pageNumber: 1,\n        pageSize: 10\n      };\n      this.factorData = [];\n    },\n    choseRow: function () {\n      var _choseRow = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee(val) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(val);\n                debugger;\n\n                if (val) {\n                  this.$refs.compData.toggleRowSelection(val, false);\n                }\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function choseRow(_x) {\n        return _choseRow.apply(this, arguments);\n      }\n\n      return choseRow;\n    }()\n  },\n  created: function created() {\n    console.log(':::' + this.$store.state.user.resetForm);\n    this.getClassList(); // this.handleSearch()\n  },\n  methods: {\n    getClassList: function getClassList() {\n      var _this = this;\n\n      dictServer.findFstClasses().then(function (res) {\n        _this.classArray = res.result || [];\n      });\n    },\n    findSecClass: function findSecClass(val) {\n      var _this2 = this;\n\n      this.secdClassId = '';\n      this.searchForm.pageNumber = 1;\n\n      if (val.length > 0) {\n        dictServer.findSecdClassByClassId(val).then(function (res) {\n          _this2.secClassArray = res.result || [];\n        });\n      }\n    },\n    handleSearch: function handleSearch() {\n      var _this3 = this;\n\n      if (this.secdClassId && this.secdClassId.length > 0) {\n        this.searchForm.authType = '';\n        factorServer.getFactorListForPage(this.searchForm).then(function (res) {\n          if (res.code === 200) {\n            _this3.factorData = res.result.records || [];\n            _this3.total = res.result.total;\n          }\n        });\n      } else {\n        this.$message.warning('请先选择对应的检测类别和认证类型!');\n      }\n    },\n    handleSelectionChange: function handleSelectionChange(val) {\n      var _this4 = this;\n\n      debugger;\n\n      if (val && val.length > 0) {\n        var o = this.secClassArray.find(function (i) {\n          return i.id === _this4.secdClassId;\n        });\n        val.forEach(function (i) {\n          _this4.$set(i, 'secdClassId', _this4.secdClassId);\n\n          _this4.$set(i, 'secdClassName', o.name);\n        });\n      }\n\n      this.$emit('pageChose', val); // if (this.searchForm.authType === this.authType) {\n      // } else {\n      //   this.$message.warning('认证类型不匹配不能添加!')\n      // }\n    }\n  }\n};\nexports.default = _default2;",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <el-form ref=\"innerSearchForm\" :model=\"searchForm\" :inline=\"true\">\n      <el-form-item label=\"检测对象:\">\n        <el-select v-model=\"searchForm.classId\" size=\"small\" clearable style=\"width:165px\" filterable placeholder=\"检测对象\" @change=\"findSecClass\">\n          <el-option\n            v-for=\"item in classArray\"\n            :key=\"item.id\"\n            :label=\"item.name\"\n            :value=\"item.id\"\n          />\n        </el-select>\n      </el-form-item>\n\n      <el-form-item label=\"检测类别:\">\n        <el-select v-model=\"secdClassId\" size=\"small\" clearable style=\"width:165px\" filterable placeholder=\"检测类别\" @change=\"handleSearch\">\n          <el-option\n            v-for=\"item in secClassArray\"\n            :key=\"item.id\"\n            :label=\"item.name\"\n            :value=\"item.id\"\n          />\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"检测因子:\">\n        <el-input v-model=\"searchForm.factorName\" size=\"small\" placeholder=\"检测因子\" />\n      </el-form-item>\n      <el-form-item label=\"标准号:\">\n        <el-input v-model=\"searchForm.standardNo\" size=\"small\" placeholder=\"标准号\" />\n      </el-form-item>\n      <el-form-item label=\"标准名称:\">\n        <el-input v-model=\"searchForm.standardName\" size=\"small\" placeholder=\"标准名称\" />\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" class=\"iconfont icon-chaxun1\" size=\"small\" @click=\"handleSearch\"> 查询</el-button>\n      </el-form-item>\n    </el-form>\n    <div>\n      <el-table\n        ref=\"compData\"\n        stripe\n        size=\"small\"\n        :data=\"factorData\"\n        highlight-current-row\n        :header-cell-style=\"{background:'#ECF3FC'}\"\n        style=\"width: 100%\"\n        max-height=\"300px\"\n        @selection-change=\"handleSelectionChange\"\n      >\n        <template slot=\"empty\">\n          <div class=\"table_empty\">\n            <div class=\"empty_tips\">\n              <span>\n                暂无因子\n              </span>\n            </div>\n          </div>\n        </template>\n        <el-table-column type=\"selection\" width=\"55\" align=\"center\" />\n        <el-table-column prop=\"className\" label=\"检测对象\" min-width=\"100\" align=\"center\" />\n        <el-table-column prop=\"factorName\" label=\"检测因子\" align=\"center\" />\n        <el-table-column prop=\"standardNo\" label=\"标准号\" align=\"center\" />\n        <el-table-column prop=\"standardName\" label=\"标准名称\" min-width=\"160\" align=\"center\" />\n        <el-table-column prop=\"analysisMethod\" label=\"分析方法\" align=\"center\" />\n        <el-table-column prop=\"analysisMethod\" label=\"标准有效性\" align=\"center\">\n          <template slot-scope=\"{row}\">\n            {{ STOKEN_STUTS[row.methodStatus] }}\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"price\" label=\"检测费用\" align=\"center\" />\n        <el-table-column prop=\"cmaFlg\" label=\"CMA\" width=\"60\" align=\"center\">\n          <template slot-scope=\"{row}\">\n            <el-tag :type=\"row.cmaFlg==='1'?'success':'danger'\">{{ row.cmaFlg==='1'?'Y':'N' }}</el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"cnasFlg\" label=\"CNAS\" width=\"60\" align=\"center\">\n          <template slot-scope=\"{row}\">\n            <el-tag :type=\"row.cnasFlg==='1'?'success':'danger'\">{{ row.cnasFlg==='1'?'Y':'N' }}</el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"extAssistFlg\" label=\"检测能力\" width=\"80\" align=\"center\">\n          <template slot-scope=\"{row}\">\n            <el-tag :type=\"(row.extAssistFlg&&row.extAssistFlg==='0')?'success':'danger'\">{{ (row.extAssistFlg&&row.extAssistFlg==='0')?'有':'无' }}</el-tag>\n          </template>\n        </el-table-column>\n      </el-table>\n    </div>\n    <div style=\"float: right\">\n      <pagination\n        v-show=\"total>0\"\n        :total=\"total\"\n        :page.sync=\"searchForm.pageNumber\"\n        :limit.sync=\"searchForm.pageSize\"\n        @pagination=\"handleSearch\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport Pagination from '@/components/Pagination' // Secondary package based on el-pagination\nimport * as factorServer from '@/api/factor'\nimport * as dictServer from '@/api/dict'\nconst STOKEN_STUTS = {\n  '0': '现行',\n  '1': '自定义标准',\n  '2': '试行'\n}\nexport default {\n  components: { Pagination },\n  props: {\n    showSelect: {\n      type: Boolean,\n      default: true\n    },\n    authType: {\n      type: String,\n      default: ''\n    },\n    choseRow: {\n      type: Object,\n      default: function() {\n        return {}\n      }\n    },\n    clearType: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      STOKEN_STUTS,\n      searchForm: {\n        classId: '',\n        factorName: '',\n        authType: '',\n        standardNo: '',\n        standardName: '',\n        pageNumber: 1,\n        pageSize: 10\n      },\n      total: 0,\n      factorData: [],\n      categoryArray: [],\n      classArray: [],\n      secClassArray: [],\n      secdClassId: ''\n    }\n  },\n  watch: {\n    clearType() {\n      this.searchForm = {\n        classId: '',\n        factorName: '',\n        authType: '',\n        standardNo: '',\n        standardName: '',\n        pageNumber: 1,\n        pageSize: 10\n      }\n      this.factorData = []\n    },\n    async choseRow(val) {\n      console.log(val)\n      debugger\n      if (val) {\n        this.$refs.compData.toggleRowSelection(val, false)\n      }\n    }\n  },\n  created() {\n    console.log(':::' + this.$store.state.user.resetForm)\n    this.getClassList()\n    // this.handleSearch()\n  },\n  methods: {\n    getClassList() {\n      dictServer.findFstClasses().then(res => {\n        this.classArray = res.result || []\n      })\n    },\n    findSecClass(val) {\n      this.secdClassId = ''\n      this.searchForm.pageNumber = 1\n      if (val.length > 0) {\n        dictServer.findSecdClassByClassId(val).then(res => {\n          this.secClassArray = res.result || []\n        })\n      }\n    },\n    handleSearch() {\n      if (this.secdClassId && this.secdClassId.length > 0) {\n        this.searchForm.authType = ''\n        factorServer.getFactorListForPage(this.searchForm).then(res => {\n          if (res.code === 200) {\n            this.factorData = res.result.records || []\n            this.total = res.result.total\n          }\n        })\n      } else {\n        this.$message.warning('请先选择对应的检测类别和认证类型!')\n      }\n    },\n    handleSelectionChange(val) {\n      debugger\n      if (val && val.length > 0) {\n        const o = this.secClassArray.find(i => i.id === this.secdClassId)\n        val.forEach(i => {\n          this.$set(i, 'secdClassId', this.secdClassId)\n          this.$set(i, 'secdClassName', o.name)\n        })\n      }\n      this.$emit('pageChose', val)\n      // if (this.searchForm.authType === this.authType) {\n      // } else {\n      //   this.$message.warning('认证类型不匹配不能添加!')\n      // }\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\" type=\"text/scss\">\n  .search_div {\n    >div {\n      &:nth-child(1){\n        margin-right: 10px;\n      }\n      display: inline-block;\n    }\n  }\n\n  .search_input {\n    width: 200px;\n    margin-bottom: 5px;\n  }\n  .search-right {\n    text-align: right;\n    padding-right: 25px;\n  }\n</style>\n"],"sourceRoot":"src/components/FactorList"}]}