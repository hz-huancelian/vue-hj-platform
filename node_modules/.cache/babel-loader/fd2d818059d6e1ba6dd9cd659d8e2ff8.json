{"remainingRequest":"F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\babel-loader\\lib\\index.js!F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\webstormProjectsJiu\\vue-hj-platform\\src\\api\\sample.js","dependencies":[{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\src\\api\\sample.js","mtime":1648296680000},{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\babel.config.js","mtime":1637214064000},{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"F:\\\\webstormProjectsJiu\\\\vue-hj-platform\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\interopRequireDefault.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assignFactorPoint = assignFactorPoint;\nexports.batchDoAuditSampItemForLeader = batchDoAuditSampItemForLeader;\nexports.batchDoAuditSampItemForManager = batchDoAuditSampItemForManager;\nexports.confirmSampleList = confirmSampleList;\nexports.deleteSampleListById = deleteSampleListById;\nexports.doAuditSampItem = doAuditSampItem;\nexports.doAuditSampItemForLeader = doAuditSampItemForLeader;\nexports.doAuditSampItemForManager = doAuditSampItemForManager;\nexports.findAuditSampForMasterCondition = findAuditSampForMasterCondition;\nexports.findAuditSampItemForLeaderByCondition = findAuditSampItemForLeaderByCondition;\nexports.findAuditSampItemForManageByCondition = findAuditSampItemForManageByCondition;\nexports.findByCondition = findByCondition;\nexports.findHisAuditSampItemForLeaderByCondition = findHisAuditSampItemForLeaderByCondition;\nexports.findHisAuditSampItemForManageByCondition = findHisAuditSampItemForManageByCondition;\nexports.findHisSampItemByCondition = findHisSampItemByCondition;\nexports.findHisSampTaskByCondition = findHisSampTaskByCondition;\nexports.findHistoryByCondition = findHistoryByCondition;\nexports.findHistoryTaskByCondition = findHistoryTaskByCondition;\nexports.findNewSampTaskByCondition = findNewSampTaskByCondition;\nexports.findSampItemByCondition = findSampItemByCondition;\nexports.findSampTaskByCondition = findSampTaskByCondition;\nexports.findSampTaskDetailByCondition = findSampTaskDetailByCondition;\nexports.findSampTaskForManagerByCondition = findSampTaskForManagerByCondition;\nexports.findSampleTaskForLeaderByCondition = findSampleTaskForLeaderByCondition;\nexports.getFactorPointsBySampTaskId = getFactorPointsBySampTaskId;\nexports.getJobFactorsByJobId = getJobFactorsByJobId;\nexports.getOfferFactorsById = getOfferFactorsById;\nexports.getOfferFactorsByTaskId = getOfferFactorsByTaskId;\nexports.getSampTaskItemById = getSampTaskItemById;\nexports.getSampleItemBySampTaskId = getSampleItemBySampTaskId;\nexports.getSampleItemDetailBySampItemId = getSampleItemDetailBySampItemId;\nexports.getSampleListByCondition = getSampleListByCondition;\nexports.getSampleTaskPointBySampTaskId = getSampleTaskPointBySampTaskId;\nexports.getWbJobFactorsByJobId = getWbJobFactorsByJobId;\nexports.getZjJobFactorsByJobId = getZjJobFactorsByJobId;\nexports.saveCombinedRemark = saveCombinedRemark;\nexports.saveSampleList = saveSampleList;\n\nvar _request = _interopRequireDefault(require(\"@/utils/request\"));\n\n/** ********************采样调度任务管理***********************/\n// 采样任务列表\nfunction findByCondition(params) {\n  return (0, _request.default)({\n    url: \"/sampTask/findByCondition\",\n    method: 'get',\n    params: params\n  });\n} // 采样历史任务列表\n\n\nfunction findHistoryTaskByCondition(params) {\n  return (0, _request.default)({\n    url: \"/sampTask/findHistoryByCondition\",\n    method: 'get',\n    params: params\n  });\n} // 任务单号查询检测因子\n\n\nfunction getOfferFactorsByTaskId(sampTaskId) {\n  return (0, _request.default)({\n    url: \"/sampTask/getOfferFactorsByTaskId/\".concat(sampTaskId),\n    method: 'get'\n  });\n} // 合样并分配任务 废弃\n// export function combinedSampleAndAssignments(data) {\n//   return request({\n//     url: `/sampTask/combinedSampleAndAssignments`,\n//     method: 'post',\n//     data\n//   })\n// }\n// 样品标签信息\n\n\nfunction getSampTaskItemById(params) {\n  return (0, _request.default)({\n    url: \"/sampTask/getSampTaskItemById\",\n    method: 'get',\n    params: params\n  });\n} // 采样任务分配因子列表信息\n\n\nfunction getOfferFactorsById(sampItemId) {\n  return (0, _request.default)({\n    url: \"/sampTask/getOfferFactorsById/\".concat(sampItemId),\n    method: 'get'\n  });\n} // 根据任务单号查询检测因子(自检)\n// export function getZjOfferFactorsByTaskId(sampItemId) {\n//   return request({\n//     url: `/sampTask/getZjOfferFactorsByTaskId/${sampItemId}`,\n//     method: 'get'\n//   })\n// }\n// 根据任务单号查询检测因子（分包）\n// export function getWbOfferFactorsByTaskId(sampItemId) {\n//   return request({\n//     url: `/sampTask/getWbOfferFactorsByTaskId/${sampItemId}`,\n//     method: 'get'\n//   })\n// }\n\n/** ********************采样列表管理***********************/\n//  采样列表\n\n\nfunction findSampItemByCondition(params) {\n  return (0, _request.default)({\n    url: \"/sampItem/findByCondition\",\n    method: 'get',\n    params: params\n  });\n} //  采样列表(历史)\n\n\nfunction findHisSampItemByCondition(params) {\n  return (0, _request.default)({\n    url: \"/sampItem/findHistoryByCondition\",\n    method: 'get',\n    params: params\n  });\n}\n/** ********************采样审核管理***********************/\n// 待审核采样列表-组长确认\n// export function findAuditSampItemByCondition(params) {\n//   return request({\n//     url: `/sampItem/findAuditSampItemForLeaderByCondition`,\n//     method: 'get',\n//     params\n//   })\n// }\n// 待审核采样列表-负责人审核\n\n\nfunction findAuditSampForMasterCondition(params) {\n  return (0, _request.default)({\n    url: \"/sampItem/findAuditSampItemForManageByCondition\",\n    method: 'get',\n    params: params\n  });\n} //  分页查询采样任务列表 (历史，已完成的)\n\n\nfunction findHistoryByCondition(params) {\n  return (0, _request.default)({\n    url: \"/sampItem/findHistoryByCondition\",\n    method: 'get',\n    params: params\n  });\n} // 查询采样列表详情\n\n\nfunction getSampleItemDetailBySampItemId(sampItemId) {\n  return (0, _request.default)({\n    url: \"/sampItem/getSampleItemDetailBySampItemId/\".concat(sampItemId),\n    method: 'get'\n  });\n} // 采样列表审核\n\n\nfunction doAuditSampItem(data) {\n  return (0, _request.default)({\n    url: \"/sampItem/doAuditSampItem\",\n    method: 'post',\n    data: data\n  });\n} // ////////TODO///////////\n// 采样组长确认\n\n\nfunction doAuditSampItemForLeader(data) {\n  return (0, _request.default)({\n    url: \"/sampItem/doAuditSampItemForLeader\",\n    method: 'post',\n    data: data\n  });\n} // 采样组长批量确认\n\n\nfunction batchDoAuditSampItemForLeader(data) {\n  return (0, _request.default)({\n    url: \"/sampItem/batchDoAuditSampItemForLeader\",\n    method: 'post',\n    data: data\n  });\n} // 采样负责人审批\n\n\nfunction doAuditSampItemForManager(data) {\n  return (0, _request.default)({\n    url: \"/sampItem/doAuditSampItemForManager\",\n    method: 'post',\n    data: data\n  });\n} // 采样负责人批量审批\n\n\nfunction batchDoAuditSampItemForManager(data) {\n  return (0, _request.default)({\n    url: \"/sampItem/batchDoAuditSampItemForManager\",\n    method: 'post',\n    data: data\n  });\n}\n/** ********************采样审核管理 TODO NEW 20220320***********************/\n// 采样确认任务列表查询(状态处于“采样中”的)\n\n\nfunction findSampTaskForManagerByCondition(params) {\n  return (0, _request.default)({\n    url: \"/sampItem/findSampTaskForManagerByCondition\",\n    method: 'get',\n    params: params\n  });\n} // 采样样品审核列表（待审核）\n\n\nfunction findAuditSampItemForManageByCondition(params) {\n  return (0, _request.default)({\n    url: \"/sampItem/findAuditSampItemForManageByCondition\",\n    method: 'get',\n    params: params\n  });\n} // 采样样品审核列表（已审核）\n\n\nfunction findHisAuditSampItemForManageByCondition(params) {\n  return (0, _request.default)({\n    url: \"/sampItem/findHisAuditSampItemForManageByCondition\",\n    method: 'get',\n    params: params\n  });\n} // 采样确认任务列表查询(状态处于“采样中”的)\n\n\nfunction findSampleTaskForLeaderByCondition(params) {\n  return (0, _request.default)({\n    url: \"/sampItem/findSampleTaskForLeaderByCondition\",\n    method: 'get',\n    params: params\n  });\n} // 采样样品确认列表查询（“待确认”）\n\n\nfunction findAuditSampItemForLeaderByCondition(params) {\n  return (0, _request.default)({\n    url: \"/sampItem/findAuditSampItemForLeaderByCondition\",\n    method: 'get',\n    params: params\n  });\n} // 采样样品确认列表查询（“已确认”）\n\n\nfunction findHisAuditSampItemForLeaderByCondition(params) {\n  return (0, _request.default)({\n    url: \"/sampItem/findHisAuditSampItemForLeaderByCondition\",\n    method: 'get',\n    params: params\n  });\n}\n/** ********************采样任务查看*************************/\n// 采样列表\n\n\nfunction findSampTaskByCondition(params) {\n  return (0, _request.default)({\n    url: \"/sampTask/findSampTaskByCondition\",\n    method: 'get',\n    params: params\n  });\n} // 采样列表-查看样品\n\n\nfunction findSampTaskDetailByCondition(params) {\n  return (0, _request.default)({\n    url: \"/sampTask/findSampTaskDetailByCondition\",\n    method: 'get',\n    params: params\n  });\n}\n/** ********************采样任务查看 TODO NEW 20220320*************************/\n// 分页查询采样任务列表 (待分配任务)\n\n\nfunction findNewSampTaskByCondition(params) {\n  return (0, _request.default)({\n    url: \"/sampTask/findByCondition\",\n    method: 'get',\n    params: params\n  });\n} // 分页查询采样任务列表 (历史任务)\n\n\nfunction findHisSampTaskByCondition(params) {\n  return (0, _request.default)({\n    url: \"/sampTask/findHistoryByCondition\",\n    method: 'get',\n    params: params\n  });\n} // 根据任务单号查询检测因子(自检)\n\n\nfunction getZjJobFactorsByJobId(params) {\n  return (0, _request.default)({\n    url: \"/sampTask/getZjJobFactorsByJobId\",\n    method: 'get',\n    params: params\n  });\n} // 根据任务单号查询检测因子（外包）\n\n\nfunction getWbJobFactorsByJobId(params) {\n  return (0, _request.default)({\n    url: \"/sampTask/getWbJobFactorsByJobId\",\n    method: 'get',\n    params: params\n  });\n} // 查询任务因子点位列表\n\n\nfunction getFactorPointsBySampTaskId(jobId) {\n  return (0, _request.default)({\n    url: \"/sampTask/getFactorPointsBySampTaskId/\".concat(jobId),\n    method: 'get'\n  });\n} // 根据任务单号获取因子信息(任务详情因子信息)\n\n\nfunction getJobFactorsByJobId(jobId) {\n  return (0, _request.default)({\n    url: \"/sampTask/getJobFactorsByJobId/\".concat(jobId),\n    method: 'get'\n  });\n} // 查询合样列表\n\n\nfunction getSampleListByCondition(params) {\n  return (0, _request.default)({\n    url: \"/sampTask/getSampleListByCondition\",\n    method: 'get',\n    params: params\n  });\n} // 保存合样列表\n\n\nfunction saveSampleList(data) {\n  return (0, _request.default)({\n    url: \"/sampTask/saveSampleList\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'post',\n    data: data\n  });\n} // 删除合样列表（单个），负责人可以任意删除，组长只能删除自己\n\n\nfunction deleteSampleListById(sampleListId) {\n  return (0, _request.default)({\n    url: \"/sampTask/deleteSampleListById/\".concat(sampleListId),\n    method: 'delete'\n  });\n} // 确认合样列表（1、采样任务所有因子全部完成合样；2、只允许采样负责人操作）\n\n\nfunction confirmSampleList(data) {\n  return (0, _request.default)({\n    url: \"/sampTask/confirmSampleList\",\n    method: 'post',\n    data: data\n  });\n} // 采样位置分配\n\n\nfunction assignFactorPoint(data) {\n  return (0, _request.default)({\n    url: \"/sampTask/assignFactorPoint\",\n    method: 'post',\n    data: data\n  });\n} // 采样位置分配信息查询\n\n\nfunction getSampleTaskPointBySampTaskId(sampTaskId) {\n  return (0, _request.default)({\n    url: \"/sampTask/getSampleTaskPointBySampTaskId/\".concat(sampTaskId),\n    method: 'get'\n  });\n} // 保存合样备注\n\n\nfunction saveCombinedRemark(data) {\n  return (0, _request.default)({\n    url: \"/sampTask/saveCombinedRemark\",\n    method: 'post',\n    data: data\n  });\n} // 根据采样任务ID获取样品标签信息（确认合样后）\n\n\nfunction getSampleItemBySampTaskId(params) {\n  return (0, _request.default)({\n    url: \"/sampTask/getSampleItemBySampTaskId\",\n    method: 'get',\n    params: params\n  });\n}",{"version":3,"sources":["F:/webstormProjectsJiu/vue-hj-platform/src/api/sample.js"],"names":["findByCondition","params","url","method","findHistoryTaskByCondition","getOfferFactorsByTaskId","sampTaskId","getSampTaskItemById","getOfferFactorsById","sampItemId","findSampItemByCondition","findHisSampItemByCondition","findAuditSampForMasterCondition","findHistoryByCondition","getSampleItemDetailBySampItemId","doAuditSampItem","data","doAuditSampItemForLeader","batchDoAuditSampItemForLeader","doAuditSampItemForManager","batchDoAuditSampItemForManager","findSampTaskForManagerByCondition","findAuditSampItemForManageByCondition","findHisAuditSampItemForManageByCondition","findSampleTaskForLeaderByCondition","findAuditSampItemForLeaderByCondition","findHisAuditSampItemForLeaderByCondition","findSampTaskByCondition","findSampTaskDetailByCondition","findNewSampTaskByCondition","findHisSampTaskByCondition","getZjJobFactorsByJobId","getWbJobFactorsByJobId","getFactorPointsBySampTaskId","jobId","getJobFactorsByJobId","getSampleListByCondition","saveSampleList","headers","deleteSampleListById","sampleListId","confirmSampleList","assignFactorPoint","getSampleTaskPointBySampTaskId","saveCombinedRemark","getSampleItemBySampTaskId"],"mappings":"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","sourcesContent":["import request from '@/utils/request'\n/** ********************采样调度任务管理***********************/\n// 采样任务列表\nexport function findByCondition(params) {\n  return request({\n    url: `/sampTask/findByCondition`,\n    method: 'get',\n    params\n  })\n}\n// 采样历史任务列表\nexport function findHistoryTaskByCondition(params) {\n  return request({\n    url: `/sampTask/findHistoryByCondition`,\n    method: 'get',\n    params\n  })\n}\n\n// 任务单号查询检测因子\nexport function getOfferFactorsByTaskId(sampTaskId) {\n  return request({\n    url: `/sampTask/getOfferFactorsByTaskId/${sampTaskId}`,\n    method: 'get'\n  })\n}\n\n// 合样并分配任务 废弃\n// export function combinedSampleAndAssignments(data) {\n//   return request({\n//     url: `/sampTask/combinedSampleAndAssignments`,\n\n//     method: 'post',\n//     data\n//   })\n// }\n\n// 样品标签信息\nexport function getSampTaskItemById(params) {\n  return request({\n    url: `/sampTask/getSampTaskItemById`,\n    method: 'get',\n    params\n  })\n}\n\n// 采样任务分配因子列表信息\nexport function getOfferFactorsById(sampItemId) {\n  return request({\n    url: `/sampTask/getOfferFactorsById/${sampItemId}`,\n    method: 'get'\n  })\n}\n\n// 根据任务单号查询检测因子(自检)\n// export function getZjOfferFactorsByTaskId(sampItemId) {\n//   return request({\n//     url: `/sampTask/getZjOfferFactorsByTaskId/${sampItemId}`,\n//     method: 'get'\n//   })\n// }\n\n// 根据任务单号查询检测因子（分包）\n// export function getWbOfferFactorsByTaskId(sampItemId) {\n//   return request({\n//     url: `/sampTask/getWbOfferFactorsByTaskId/${sampItemId}`,\n//     method: 'get'\n//   })\n// }\n\n/** ********************采样列表管理***********************/\n//  采样列表\nexport function findSampItemByCondition(params) {\n  return request({\n    url: `/sampItem/findByCondition`,\n    method: 'get',\n    params\n  })\n}\n\n//  采样列表(历史)\nexport function findHisSampItemByCondition(params) {\n  return request({\n    url: `/sampItem/findHistoryByCondition`,\n    method: 'get',\n    params\n  })\n}\n\n/** ********************采样审核管理***********************/\n// 待审核采样列表-组长确认\n// export function findAuditSampItemByCondition(params) {\n//   return request({\n//     url: `/sampItem/findAuditSampItemForLeaderByCondition`,\n//     method: 'get',\n//     params\n//   })\n// }\n\n// 待审核采样列表-负责人审核\nexport function findAuditSampForMasterCondition(params) {\n  return request({\n    url: `/sampItem/findAuditSampItemForManageByCondition`,\n    method: 'get',\n    params\n  })\n}\n\n//  分页查询采样任务列表 (历史，已完成的)\nexport function findHistoryByCondition(params) {\n  return request({\n    url: `/sampItem/findHistoryByCondition`,\n    method: 'get',\n    params\n  })\n}\n\n// 查询采样列表详情\nexport function getSampleItemDetailBySampItemId(sampItemId) {\n  return request({\n    url: `/sampItem/getSampleItemDetailBySampItemId/${sampItemId}`,\n    method: 'get'\n  })\n}\n\n// 采样列表审核\nexport function doAuditSampItem(data) {\n  return request({\n    url: `/sampItem/doAuditSampItem`,\n    method: 'post',\n    data\n  })\n}\n// ////////TODO///////////\n// 采样组长确认\nexport function doAuditSampItemForLeader(data) {\n  return request({\n    url: `/sampItem/doAuditSampItemForLeader`,\n    method: 'post',\n    data\n  })\n}\n\n// 采样组长批量确认\nexport function batchDoAuditSampItemForLeader(data) {\n  return request({\n    url: `/sampItem/batchDoAuditSampItemForLeader`,\n    method: 'post',\n    data\n  })\n}\n\n// 采样负责人审批\nexport function doAuditSampItemForManager(data) {\n  return request({\n    url: `/sampItem/doAuditSampItemForManager`,\n    method: 'post',\n    data\n  })\n}\n\n// 采样负责人批量审批\nexport function batchDoAuditSampItemForManager(data) {\n  return request({\n    url: `/sampItem/batchDoAuditSampItemForManager`,\n    method: 'post',\n    data\n  })\n}\n/** ********************采样审核管理 TODO NEW 20220320***********************/\n// 采样确认任务列表查询(状态处于“采样中”的)\nexport function findSampTaskForManagerByCondition(params) {\n  return request({\n    url: `/sampItem/findSampTaskForManagerByCondition`,\n    method: 'get',\n    params\n  })\n}\n\n// 采样样品审核列表（待审核）\nexport function findAuditSampItemForManageByCondition(params) {\n  return request({\n    url: `/sampItem/findAuditSampItemForManageByCondition`,\n    method: 'get',\n    params\n  })\n}\n// 采样样品审核列表（已审核）\nexport function findHisAuditSampItemForManageByCondition(params) {\n  return request({\n    url: `/sampItem/findHisAuditSampItemForManageByCondition`,\n    method: 'get',\n    params\n  })\n}\n\n// 采样确认任务列表查询(状态处于“采样中”的)\nexport function findSampleTaskForLeaderByCondition(params) {\n  return request({\n    url: `/sampItem/findSampleTaskForLeaderByCondition`,\n    method: 'get',\n    params\n  })\n}\n\n// 采样样品确认列表查询（“待确认”）\nexport function findAuditSampItemForLeaderByCondition(params) {\n  return request({\n    url: `/sampItem/findAuditSampItemForLeaderByCondition`,\n    method: 'get',\n    params\n  })\n}\n// 采样样品确认列表查询（“已确认”）\nexport function findHisAuditSampItemForLeaderByCondition(params) {\n  return request({\n    url: `/sampItem/findHisAuditSampItemForLeaderByCondition`,\n    method: 'get',\n    params\n  })\n}\n\n/** ********************采样任务查看*************************/\n// 采样列表\nexport function findSampTaskByCondition(params) {\n  return request({\n    url: `/sampTask/findSampTaskByCondition`,\n    method: 'get',\n    params\n  })\n}\n\n// 采样列表-查看样品\nexport function findSampTaskDetailByCondition(params) {\n  return request({\n    url: `/sampTask/findSampTaskDetailByCondition`,\n    method: 'get',\n    params\n  })\n}\n\n/** ********************采样任务查看 TODO NEW 20220320*************************/\n// 分页查询采样任务列表 (待分配任务)\nexport function findNewSampTaskByCondition(params) {\n  return request({\n    url: `/sampTask/findByCondition`,\n    method: 'get',\n    params\n  })\n}\n\n// 分页查询采样任务列表 (历史任务)\nexport function findHisSampTaskByCondition(params) {\n  return request({\n    url: `/sampTask/findHistoryByCondition`,\n    method: 'get',\n    params\n  })\n}\n\n// 根据任务单号查询检测因子(自检)\nexport function getZjJobFactorsByJobId(params) {\n  return request({\n    url: `/sampTask/getZjJobFactorsByJobId`,\n    method: 'get',\n    params\n  })\n}\n\n// 根据任务单号查询检测因子（外包）\nexport function getWbJobFactorsByJobId(params) {\n  return request({\n    url: `/sampTask/getWbJobFactorsByJobId`,\n    method: 'get',\n    params\n  })\n}\n\n// 查询任务因子点位列表\nexport function getFactorPointsBySampTaskId(jobId) {\n  return request({\n    url: `/sampTask/getFactorPointsBySampTaskId/${jobId}`,\n    method: 'get'\n  })\n}\n\n// 根据任务单号获取因子信息(任务详情因子信息)\nexport function getJobFactorsByJobId(jobId) {\n  return request({\n    url: `/sampTask/getJobFactorsByJobId/${jobId}`,\n    method: 'get'\n  })\n}\n\n// 查询合样列表\nexport function getSampleListByCondition(params) {\n  return request({\n    url: `/sampTask/getSampleListByCondition`,\n    method: 'get',\n    params\n  })\n}\n\n// 保存合样列表\nexport function saveSampleList(data) {\n  return request({\n    url: `/sampTask/saveSampleList`,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'post',\n    data\n  })\n}\n\n// 删除合样列表（单个），负责人可以任意删除，组长只能删除自己\nexport function deleteSampleListById(sampleListId) {\n  return request({\n    url: `/sampTask/deleteSampleListById/${sampleListId}`,\n    method: 'delete'\n  })\n}\n\n// 确认合样列表（1、采样任务所有因子全部完成合样；2、只允许采样负责人操作）\nexport function confirmSampleList(data) {\n  return request({\n    url: `/sampTask/confirmSampleList`,\n    method: 'post',\n    data\n  })\n}\n\n// 采样位置分配\nexport function assignFactorPoint(data) {\n  return request({\n    url: `/sampTask/assignFactorPoint`,\n    method: 'post',\n    data\n  })\n}\n\n// 采样位置分配信息查询\nexport function getSampleTaskPointBySampTaskId(sampTaskId) {\n  return request({\n    url: `/sampTask/getSampleTaskPointBySampTaskId/${sampTaskId}`,\n    method: 'get'\n  })\n}\n\n// 保存合样备注\nexport function saveCombinedRemark(data) {\n  return request({\n    url: `/sampTask/saveCombinedRemark`,\n    method: 'post',\n    data\n  })\n}\n\n// 根据采样任务ID获取样品标签信息（确认合样后）\nexport function getSampleItemBySampTaskId(params) {\n  return request({\n    url: `/sampTask/getSampleItemBySampTaskId`,\n    method: 'get',\n    params\n  })\n}\n\n"]}]}