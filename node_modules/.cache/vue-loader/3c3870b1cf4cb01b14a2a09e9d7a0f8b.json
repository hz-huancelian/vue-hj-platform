{"remainingRequest":"F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\webstormProjectsJiu\\vue-hj-platform\\src\\views\\profile\\resetPwd.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\src\\views\\profile\\resetPwd.vue","mtime":1637214064000},{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { modifyPassword } from '@/api/organ'\n\nexport default {\n  data() {\n    const equalToPassword = (rule, value, callback) => {\n      if (this.user.newPassword !== value) {\n        callback(new Error('两次输入的密码不一致'))\n      } else {\n        callback()\n      }\n    }\n    return {\n      test: '1test',\n      user: {\n        userId: this.$store.getters.userInfo.userId,\n        oldPassword: '',\n        newPassword: '',\n        confirmPassword: ''\n      },\n      // 表单校验\n      rules: {\n        oldPassword: [\n          { required: true, message: '旧密码不能为空', trigger: 'blur' }\n        ],\n        newPassword: [\n          { required: true, message: '新密码不能为空', trigger: 'blur' },\n          { min: 6, max: 20, message: '长度在 6 到 20 个字符', trigger: 'blur' }\n        ],\n        confirmPassword: [\n          { required: true, message: '确认密码不能为空', trigger: 'blur' },\n          { required: true, validator: equalToPassword, trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  methods: {\n    submit() {\n      this.$refs['form'].validate(valid => {\n        if (valid) {\n          const params = {\n            ...this.user\n          }\n          this.$delete(params, 'confirmPassword')\n          modifyPassword(params).then(\n            response => {\n              this.msgSuccess('修改成功')\n            }\n          )\n        }\n      })\n    },\n    close() {\n      // this.$store.dispatch('tagsView/delView', this.$route)\n      this.$router.push({ path: '/' })\n    }\n  }\n}\n",{"version":3,"sources":["resetPwd.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"resetPwd.vue","sourceRoot":"src/views/profile","sourcesContent":["<template>\n  <el-form ref=\"form\" :model=\"user\" :rules=\"rules\" label-width=\"80px\">\n    <el-form-item label=\"旧密码\" prop=\"oldPassword\">\n      <el-input v-model=\"user.oldPassword\" placeholder=\"请输入旧密码\" type=\"password\" show-password />\n    </el-form-item>\n    <el-form-item label=\"新密码\" prop=\"newPassword\">\n      <el-input v-model=\"user.newPassword\" placeholder=\"请输入新密码\" type=\"password\" show-password />\n    </el-form-item>\n    <el-form-item label=\"确认密码\" prop=\"confirmPassword\">\n      <el-input v-model=\"user.confirmPassword\" placeholder=\"请确认密码\" type=\"password\" show-password />\n    </el-form-item>\n    <el-form-item>\n      <el-button type=\"primary\" size=\"small\" @click=\"submit\">保存</el-button>\n      <el-button type=\"danger\" size=\"small\" @click=\"close\">关闭</el-button>\n    </el-form-item>\n  </el-form>\n</template>\n\n<script>\nimport { modifyPassword } from '@/api/organ'\n\nexport default {\n  data() {\n    const equalToPassword = (rule, value, callback) => {\n      if (this.user.newPassword !== value) {\n        callback(new Error('两次输入的密码不一致'))\n      } else {\n        callback()\n      }\n    }\n    return {\n      test: '1test',\n      user: {\n        userId: this.$store.getters.userInfo.userId,\n        oldPassword: '',\n        newPassword: '',\n        confirmPassword: ''\n      },\n      // 表单校验\n      rules: {\n        oldPassword: [\n          { required: true, message: '旧密码不能为空', trigger: 'blur' }\n        ],\n        newPassword: [\n          { required: true, message: '新密码不能为空', trigger: 'blur' },\n          { min: 6, max: 20, message: '长度在 6 到 20 个字符', trigger: 'blur' }\n        ],\n        confirmPassword: [\n          { required: true, message: '确认密码不能为空', trigger: 'blur' },\n          { required: true, validator: equalToPassword, trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  methods: {\n    submit() {\n      this.$refs['form'].validate(valid => {\n        if (valid) {\n          const params = {\n            ...this.user\n          }\n          this.$delete(params, 'confirmPassword')\n          modifyPassword(params).then(\n            response => {\n              this.msgSuccess('修改成功')\n            }\n          )\n        }\n      })\n    },\n    close() {\n      // this.$store.dispatch('tagsView/delView', this.$route)\n      this.$router.push({ path: '/' })\n    }\n  }\n}\n</script>\n"]}]}