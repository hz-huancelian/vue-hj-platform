{"remainingRequest":"F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\webstormProjectsJiu\\vue-hj-platform\\src\\views\\order\\factor\\mealList.vue?vue&type=template&id=ac1c3d54&scoped=true&","dependencies":[{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\src\\views\\order\\factor\\mealList.vue","mtime":1652335460000},{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"app-container\" },\n    [\n      _c(\n        \"el-form\",\n        { attrs: { model: _vm.searchForm, inline: true } },\n        [\n          _c(\n            \"el-row\",\n            [\n              _c(\n                \"el-col\",\n                { attrs: { span: 20 } },\n                [\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"套餐名称:\" } },\n                    [\n                      _c(\"el-input\", {\n                        staticStyle: { width: \"180px\" },\n                        attrs: { placeholder: \"套餐名称\" },\n                        model: {\n                          value: _vm.searchForm.groupName,\n                          callback: function ($$v) {\n                            _vm.$set(_vm.searchForm, \"groupName\", $$v)\n                          },\n                          expression: \"searchForm.groupName\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"套餐类型:\" } },\n                    [\n                      _c(\n                        \"el-select\",\n                        {\n                          staticStyle: { width: \"100%\" },\n                          attrs: { clearable: \"\", placeholder: \"套餐类型\" },\n                          model: {\n                            value: _vm.searchForm.groupType,\n                            callback: function ($$v) {\n                              _vm.$set(_vm.searchForm, \"groupType\", $$v)\n                            },\n                            expression: \"searchForm.groupType\",\n                          },\n                        },\n                        [\n                          _c(\"el-option\", {\n                            attrs: { value: \"0\", label: \"自由因子套餐\" },\n                          }),\n                          _c(\"el-option\", {\n                            attrs: { value: \"1\", label: \"同系因子套餐\" },\n                          }),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-form-item\",\n                    [\n                      _c(\n                        \"el-button\",\n                        {\n                          staticClass: \"iconfont icon-chaxun1\",\n                          attrs: { type: \"primary\" },\n                          on: { click: _vm.handleSearch },\n                        },\n                        [_vm._v(\" 查询\")]\n                      ),\n                    ],\n                    1\n                  ),\n                ],\n                1\n              ),\n              _c(\n                \"el-col\",\n                { staticClass: \"search-right\", attrs: { span: 4 } },\n                [\n                  _c(\n                    \"el-button\",\n                    {\n                      attrs: { type: \"text\", icon: \"el-icon-plus\" },\n                      on: { click: _vm.handleCreate },\n                    },\n                    [_vm._v(\"新增\")]\n                  ),\n                  _c(\n                    \"el-button\",\n                    {\n                      attrs: { type: \"text\", icon: \"el-icon-refresh\" },\n                      on: { click: _vm.handleSearch },\n                    },\n                    [_vm._v(\"刷新\")]\n                  ),\n                ],\n                1\n              ),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n      _c(\n        \"el-table\",\n        {\n          staticStyle: { width: \"100%\" },\n          attrs: {\n            stripe: \"\",\n            data: _vm.factorGroupData,\n            \"highlight-current-row\": \"\",\n            \"header-cell-style\": { background: \"#ECF3FC\" },\n            border: \"\",\n          },\n        },\n        [\n          _c(\"template\", { slot: \"empty\" }, [\n            _c(\"div\", { staticClass: \"table_empty\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"empty_tips\" },\n                [\n                  _c(\"span\", [_vm._v(\"\\n            暂无套餐,\\n          \")]),\n                  _c(\n                    \"el-button\",\n                    {\n                      staticStyle: { \"font-size\": \"14px\" },\n                      attrs: { type: \"text\", size: \"small\" },\n                      on: { click: _vm.handleCreate },\n                    },\n                    [_vm._v(\"新建因子套餐\")]\n                  ),\n                ],\n                1\n              ),\n            ]),\n          ]),\n          _c(\"el-table-column\", {\n            attrs: {\n              type: \"index\",\n              width: \"55\",\n              label: \"序号\",\n              align: \"center\",\n            },\n          }),\n          _c(\"el-table-column\", {\n            attrs: { prop: \"groupName\", label: \"套餐名称\", align: \"center\" },\n          }),\n          _c(\"el-table-column\", {\n            attrs: { label: \"套餐类型\", align: \"center\", width: \"130px\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function (ref) {\n                  var row = ref.row\n                  return [\n                    _vm._v(\n                      \"\\n        \" +\n                        _vm._s(\n                          row.groupType === \"0\"\n                            ? \"自由因子套餐\"\n                            : \"同系因子套餐\"\n                        ) +\n                        \"\\n      \"\n                    ),\n                  ]\n                },\n              },\n            ]),\n          }),\n          _c(\"el-table-column\", {\n            attrs: {\n              prop: \"remark\",\n              label: \"套餐说明\",\n              \"show-overflow-tooltip\": true,\n              align: \"center\",\n            },\n          }),\n          _c(\"el-table-column\", {\n            attrs: {\n              prop: \"groupDesc\",\n              label: \"检测因子\",\n              \"show-overflow-tooltip\": true,\n              align: \"center\",\n            },\n          }),\n          _c(\"el-table-column\", {\n            attrs: {\n              prop: \"createTime\",\n              label: \"创建时间\",\n              width: \"160\",\n              align: \"center\",\n            },\n          }),\n          _c(\"el-table-column\", {\n            attrs: {\n              fixed: \"right\",\n              align: \"center\",\n              label: \"操作\",\n              width: \"180\",\n            },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function (scope) {\n                  return [\n                    _c(\n                      \"el-button\",\n                      {\n                        attrs: { type: \"text\" },\n                        on: {\n                          click: function ($event) {\n                            return _vm.handleDetail(scope.row.groupId)\n                          },\n                        },\n                      },\n                      [_vm._v(\" 查看\")]\n                    ),\n                    _c(\"div\", { staticClass: \"erc-divider-vertical\" }),\n                    _c(\n                      \"el-button\",\n                      {\n                        attrs: { type: \"text\" },\n                        on: {\n                          click: function ($event) {\n                            return _vm.handleUpdate(scope.row)\n                          },\n                        },\n                      },\n                      [_vm._v(\" 编辑\")]\n                    ),\n                    _c(\"div\", { staticClass: \"erc-divider-vertical\" }),\n                    _c(\n                      \"el-button\",\n                      {\n                        attrs: { type: \"text\" },\n                        on: {\n                          click: function ($event) {\n                            return _vm.handleDelete(scope.row.groupId)\n                          },\n                        },\n                      },\n                      [_vm._v(\"删除\")]\n                    ),\n                    _c(\"div\", { staticClass: \"erc-divider-vertical\" }),\n                    _c(\n                      \"el-button\",\n                      {\n                        attrs: { type: \"text\" },\n                        on: {\n                          click: function ($event) {\n                            return _vm.handleCopy(scope.row.groupId)\n                          },\n                        },\n                      },\n                      [_vm._v(\"复制\")]\n                    ),\n                  ]\n                },\n              },\n            ]),\n          }),\n        ],\n        2\n      ),\n      _c(\n        \"div\",\n        { staticStyle: { float: \"right\" } },\n        [\n          _c(\"pagination\", {\n            directives: [\n              {\n                name: \"show\",\n                rawName: \"v-show\",\n                value: _vm.total > 0,\n                expression: \"total>0\",\n              },\n            ],\n            attrs: {\n              total: _vm.total,\n              page: _vm.searchForm.pageNumber,\n              limit: _vm.searchForm.pageSize,\n            },\n            on: {\n              \"update:page\": function ($event) {\n                return _vm.$set(_vm.searchForm, \"pageNumber\", $event)\n              },\n              \"update:limit\": function ($event) {\n                return _vm.$set(_vm.searchForm, \"pageSize\", $event)\n              },\n              pagination: _vm.handleSearch,\n            },\n          }),\n        ],\n        1\n      ),\n      _c(\n        \"el-dialog\",\n        {\n          attrs: { visible: _vm.choseMealVisible, top: \"35vh\", width: \"400px\" },\n          on: {\n            \"update:visible\": function ($event) {\n              _vm.choseMealVisible = $event\n            },\n          },\n        },\n        [\n          _c(\n            \"span\",\n            { attrs: { slot: \"title\" }, slot: \"title\" },\n            [\n              _vm._v(\"\\n      选择新增套餐类型\\n      \"),\n              _c(\n                \"el-popover\",\n                {\n                  attrs: {\n                    placement: \"top-start\",\n                    title: \"\",\n                    width: \"500\",\n                    trigger: \"hover\",\n                  },\n                },\n                [\n                  _c(\"div\", [\n                    _vm._v(\n                      \"\\n                同系因子套餐：可以将某个检测标准中可同时检测的多个因子进行打包（要求标准号相同）\\n          如： 苯系物、挥发性卤代烃、有机氯农药等，并可对该同系因子套餐进行总价设定，\\n          若该同系因子套餐中所含因子单价合计大于等于设定的总价，则以设定的总价作为该套餐的报价，\\n          若小于则以所含因子单价合计作为该套餐的报价。同时报价时可以选择该套餐内的部分或全部因子作为一个单因子属性进行点位和频次的设置，\\n          在采样分配时该套餐内的因子无需进行合样操作，实验室分析时该套餐内的因子作为一组进行实验室数据录入。\\n          \"\n                    ),\n                    _c(\"br\"),\n                    _vm._v(\n                      \"\\n                自由因子套餐：该类型套餐可用于具有固定或相似监测方案的项目，可自由选择因子库中的因子进行组合，后续套餐内所选因子会分拆独立出来，后续流程与因子库中的其他因子无异。\\n        \"\n                    ),\n                  ]),\n                  _c(\"svg-icon\", {\n                    staticStyle: { \"font-size\": \"16px\" },\n                    attrs: { slot: \"reference\", \"icon-class\": \"help\" },\n                    slot: \"reference\",\n                  }),\n                ],\n                1\n              ),\n            ],\n            1\n          ),\n          _c(\"ul\", { staticClass: \"icon-list\" }, [\n            _c(\"li\", { on: { click: _vm.handleSameCreate } }, [\n              _c(\n                \"span\",\n                [\n                  _c(\"svg-icon\", { attrs: { \"icon-class\": \"dcqrs\" } }),\n                  _c(\"span\", { staticClass: \"icon-name\" }, [\n                    _vm._v(\"同系因子套餐\"),\n                  ]),\n                ],\n                1\n              ),\n            ]),\n            _c(\"li\", { on: { click: _vm.handleFreeCreate } }, [\n              _c(\n                \"span\",\n                [\n                  _c(\"svg-icon\", { attrs: { \"icon-class\": \"ddrw\" } }),\n                  _c(\"span\", { staticClass: \"icon-name\" }, [\n                    _vm._v(\"自由因子套餐\"),\n                  ]),\n                ],\n                1\n              ),\n            ]),\n          ]),\n        ]\n      ),\n      _c(\n        \"el-dialog\",\n        {\n          attrs: {\n            title: _vm.titleMap[_vm.factorGroupDialogStatus],\n            visible: _vm.factorGroupDialogVisible,\n            fullscreen: \"\",\n            \"modal-append-to-body\": false,\n            \"before-close\": _vm.handleDialogClose,\n            center: \"\",\n          },\n          on: {\n            \"update:visible\": function ($event) {\n              _vm.factorGroupDialogVisible = $event\n            },\n          },\n        },\n        [\n          _c(\n            \"el-card\",\n            { attrs: { shadow: \"never\" } },\n            [\n              _c(\"div\", { attrs: { slot: \"header\" }, slot: \"header\" }, [\n                _c(\"span\", [\n                  _vm._v(\"套餐基础信息\"),\n                  _c(\"i\", { staticClass: \"el-input__icon\" }),\n                ]),\n              ]),\n              _c(\n                \"el-form\",\n                {\n                  ref: \"factorGroupForm\",\n                  attrs: {\n                    model: _vm.factorGroupForm,\n                    inline: \"\",\n                    \"label-width\": \"90px\",\n                  },\n                },\n                [\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { prop: \"groupName\", label: \"套餐名称:\" } },\n                    [\n                      _c(\"el-input\", {\n                        staticStyle: { width: \"250px\" },\n                        attrs: {\n                          placeholder: \"套餐名称\",\n                          maxlength: \"10\",\n                          \"show-word-limit\": \"\",\n                        },\n                        model: {\n                          value: _vm.factorGroupForm.groupName,\n                          callback: function ($$v) {\n                            _vm.$set(_vm.factorGroupForm, \"groupName\", $$v)\n                          },\n                          expression: \"factorGroupForm.groupName\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { prop: \"authType\", label: \"认证类型:\" } },\n                    [\n                      _c(\n                        \"el-select\",\n                        {\n                          staticStyle: { width: \"250px\" },\n                          attrs: {\n                            placeholder: \"检测类型\",\n                            disabled: _vm.factorGroupDialogStatus === \"edit\",\n                          },\n                          on: { change: _vm.checkAutype },\n                          model: {\n                            value: _vm.factorGroupForm.authType,\n                            callback: function ($$v) {\n                              _vm.$set(_vm.factorGroupForm, \"authType\", $$v)\n                            },\n                            expression: \"factorGroupForm.authType\",\n                          },\n                        },\n                        [\n                          _c(\"el-option\", {\n                            attrs: { value: \"0\", label: \"CMA\" },\n                          }),\n                          _c(\"el-option\", {\n                            attrs: { value: \"1\", label: \"CNAS\" },\n                          }),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { prop: \"remark\", label: \"套餐说明:\" } },\n                    [\n                      _c(\"el-input\", {\n                        attrs: {\n                          placeholder: \"套餐说明\",\n                          type: \"textarea\",\n                          rows: 3,\n                          maxlength: \"50\",\n                        },\n                        model: {\n                          value: _vm.factorGroupForm.remark,\n                          callback: function ($$v) {\n                            _vm.$set(_vm.factorGroupForm, \"remark\", $$v)\n                          },\n                          expression: \"factorGroupForm.remark\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ],\n                1\n              ),\n            ],\n            1\n          ),\n          _c(\n            \"el-card\",\n            {\n              staticStyle: { \"margin-top\": \"10px\" },\n              attrs: { shadow: \"never\" },\n            },\n            [\n              _c(\"div\", { attrs: { slot: \"header\" }, slot: \"header\" }, [\n                _c(\"span\", [\n                  _vm._v(\"待选因子\"),\n                  _c(\"i\", { staticClass: \"el-input__icon\" }),\n                ]),\n              ]),\n              _c(\"factor-list\", {\n                attrs: {\n                  \"auth-type\": _vm.factorGroupForm.authType,\n                  \"chose-row\": _vm.currentRow,\n                },\n                on: { pageChose: _vm.handleChose },\n              }),\n            ],\n            1\n          ),\n          _c(\n            \"el-card\",\n            {\n              staticStyle: { \"margin-top\": \"10px\" },\n              attrs: { shadow: \"never\" },\n            },\n            [\n              _c(\"div\", { attrs: { slot: \"header\" }, slot: \"header\" }, [\n                _c(\"span\", [\n                  _vm._v(\"已选因子\"),\n                  _c(\"i\", { staticClass: \"el-input__icon\" }),\n                ]),\n              ]),\n              _c(\n                \"el-table\",\n                {\n                  attrs: {\n                    data: _vm.factorChoseData,\n                    size: \"small\",\n                    stripe: \"\",\n                    \"highlight-current-row\": \"\",\n                    \"max-height\": \"400\",\n                    \"header-cell-style\": { background: \"#ECF3FC\" },\n                  },\n                },\n                [\n                  _c(\"template\", { slot: \"empty\" }, [\n                    _c(\"div\", { staticClass: \"table_empty\" }, [\n                      _c(\"div\", { staticClass: \"empty_tips\" }, [\n                        _c(\"span\", [\n                          _vm._v(\"\\n                暂无因子\\n              \"),\n                        ]),\n                      ]),\n                    ]),\n                  ]),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      type: \"index\",\n                      width: \"55\",\n                      label: \"序号\",\n                      align: \"center\",\n                    },\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      prop: \"className\",\n                      label: \"检测对象\",\n                      \"min-width\": \"100\",\n                      align: \"center\",\n                    },\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      prop: \"factorName\",\n                      label: \"检测因子\",\n                      align: \"center\",\n                    },\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      prop: \"standardNo\",\n                      label: \"标准号\",\n                      align: \"center\",\n                    },\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      prop: \"standardName\",\n                      label: \"标准名称\",\n                      \"min-width\": \"160\",\n                      align: \"center\",\n                    },\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      prop: \"analysisMethod\",\n                      label: \"分析方法\",\n                      align: \"center\",\n                    },\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      prop: \"analysisMethod\",\n                      label: \"标准有效性\",\n                      align: \"center\",\n                    },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function (ref) {\n                          var row = ref.row\n                          return [\n                            _vm._v(\n                              \"\\n            \" +\n                                _vm._s(_vm.STOKEN_STUTS[row.methodStatus]) +\n                                \"\\n          \"\n                            ),\n                          ]\n                        },\n                      },\n                    ]),\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      prop: \"price\",\n                      label: \"检测费用\",\n                      align: \"center\",\n                    },\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      prop: \"cmaFlg\",\n                      label: \"CMA\",\n                      width: \"60\",\n                      align: \"center\",\n                    },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function (ref) {\n                          var row = ref.row\n                          return [\n                            _c(\n                              \"el-tag\",\n                              {\n                                attrs: {\n                                  type:\n                                    row.cmaFlg === \"1\" ? \"success\" : \"danger\",\n                                },\n                              },\n                              [_vm._v(_vm._s(row.cmaFlg === \"1\" ? \"Y\" : \"N\"))]\n                            ),\n                          ]\n                        },\n                      },\n                    ]),\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      prop: \"cnasFlg\",\n                      label: \"CNAS\",\n                      width: \"60\",\n                      align: \"center\",\n                    },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function (ref) {\n                          var row = ref.row\n                          return [\n                            _c(\n                              \"el-tag\",\n                              {\n                                attrs: {\n                                  type:\n                                    row.cnasFlg === \"1\" ? \"success\" : \"danger\",\n                                },\n                              },\n                              [_vm._v(_vm._s(row.cnasFlg === \"1\" ? \"Y\" : \"N\"))]\n                            ),\n                          ]\n                        },\n                      },\n                    ]),\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      prop: \"extAssistFlg\",\n                      label: \"检测能力\",\n                      width: \"80\",\n                      align: \"center\",\n                    },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function (ref) {\n                          var row = ref.row\n                          return [\n                            _c(\n                              \"el-tag\",\n                              {\n                                attrs: {\n                                  type:\n                                    row.extAssistFlg && row.extAssistFlg === \"0\"\n                                      ? \"success\"\n                                      : \"danger\",\n                                },\n                              },\n                              [\n                                _vm._v(\n                                  _vm._s(\n                                    row.extAssistFlg && row.extAssistFlg === \"0\"\n                                      ? \"有\"\n                                      : \"无\"\n                                  )\n                                ),\n                              ]\n                            ),\n                          ]\n                        },\n                      },\n                    ]),\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: { fixed: \"right\", align: \"center\", label: \"操作\" },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function (scope) {\n                          return [\n                            _c(\n                              \"el-button\",\n                              {\n                                attrs: { type: \"text\" },\n                                on: {\n                                  click: function ($event) {\n                                    return _vm.handleRowDel(\n                                      scope.row,\n                                      scope.$index\n                                    )\n                                  },\n                                },\n                              },\n                              [_vm._v(\" 删除\")]\n                            ),\n                          ]\n                        },\n                      },\n                    ]),\n                  }),\n                ],\n                2\n              ),\n            ],\n            1\n          ),\n          _c(\n            \"div\",\n            {\n              staticClass: \"dialog-footer\",\n              attrs: { slot: \"footer\" },\n              slot: \"footer\",\n            },\n            [\n              _c(\n                \"el-button\",\n                {\n                  on: {\n                    click: function ($event) {\n                      _vm.factorGroupDialogVisible = false\n                    },\n                  },\n                },\n                [_vm._v(\"取消\")]\n              ),\n              _c(\n                \"el-button\",\n                {\n                  attrs: { type: \"primary\" },\n                  on: { click: _vm.confirmDialog },\n                },\n                [_vm._v(\"确认\")]\n              ),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n      _c(\n        \"el-dialog\",\n        {\n          attrs: {\n            title: \"同系因子套餐\",\n            visible: _vm.factorSameVisible,\n            fullscreen: \"\",\n            \"modal-append-to-body\": false,\n            \"before-close\": _vm.handleSameDialogClose,\n            center: \"\",\n          },\n          on: {\n            \"update:visible\": function ($event) {\n              _vm.factorSameVisible = $event\n            },\n          },\n        },\n        [\n          _c(\n            \"el-card\",\n            { attrs: { shadow: \"never\" } },\n            [\n              _c(\"div\", { attrs: { slot: \"header\" }, slot: \"header\" }, [\n                _c(\"span\", [\n                  _vm._v(\"套餐基础信息\"),\n                  _c(\"i\", { staticClass: \"el-input__icon\" }),\n                ]),\n              ]),\n              _c(\n                \"el-form\",\n                {\n                  ref: \"factorGroupForm\",\n                  attrs: {\n                    model: _vm.factorGroupForm,\n                    inline: \"\",\n                    \"label-width\": \"90px\",\n                  },\n                },\n                [\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { prop: \"groupName\", label: \"套餐名称:\" } },\n                    [\n                      _c(\"el-input\", {\n                        staticStyle: { width: \"250px\" },\n                        attrs: {\n                          placeholder: \"同系套餐名称\",\n                          maxlength: \"10\",\n                          \"show-word-limit\": \"\",\n                        },\n                        model: {\n                          value: _vm.factorGroupForm.groupName,\n                          callback: function ($$v) {\n                            _vm.$set(_vm.factorGroupForm, \"groupName\", $$v)\n                          },\n                          expression: \"factorGroupForm.groupName\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { prop: \"groupCost\", label: \"套餐价格:\" } },\n                    [\n                      _c(\"el-input\", {\n                        staticStyle: { width: \"250px\" },\n                        attrs: { type: \"number\", placeholder: \"套餐价格\" },\n                        model: {\n                          value: _vm.factorGroupForm.groupCost,\n                          callback: function ($$v) {\n                            _vm.$set(_vm.factorGroupForm, \"groupCost\", $$v)\n                          },\n                          expression: \"factorGroupForm.groupCost\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { prop: \"remark\", label: \"套餐说明:\" } },\n                    [\n                      _c(\"el-input\", {\n                        attrs: {\n                          placeholder: \"套餐说明\",\n                          type: \"textarea\",\n                          rows: 3,\n                          maxlength: \"50\",\n                          \"show-word-limit\": \"\",\n                        },\n                        model: {\n                          value: _vm.factorGroupForm.remark,\n                          callback: function ($$v) {\n                            _vm.$set(_vm.factorGroupForm, \"remark\", $$v)\n                          },\n                          expression: \"factorGroupForm.remark\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ],\n                1\n              ),\n            ],\n            1\n          ),\n          _c(\n            \"el-card\",\n            {\n              staticStyle: { \"margin-top\": \"10px\" },\n              attrs: { shadow: \"never\" },\n            },\n            [\n              _c(\"div\", { attrs: { slot: \"header\" }, slot: \"header\" }, [\n                _c(\"span\", [\n                  _vm._v(\"待选因子\"),\n                  _c(\"i\", { staticClass: \"el-input__icon\" }),\n                ]),\n              ]),\n              _c(\"factor-same-list\", {\n                attrs: {\n                  \"clear-type\": _vm.cleanAttr,\n                  \"chose-row\": _vm.currentRow,\n                },\n                on: { pageChose: _vm.handleSameChose },\n              }),\n            ],\n            1\n          ),\n          _c(\n            \"el-card\",\n            {\n              staticStyle: { \"margin-top\": \"10px\" },\n              attrs: { shadow: \"never\" },\n            },\n            [\n              _c(\"div\", { attrs: { slot: \"header\" }, slot: \"header\" }, [\n                _c(\"span\", [\n                  _vm._v(\"已选因子\"),\n                  _c(\"i\", { staticClass: \"el-input__icon\" }),\n                ]),\n              ]),\n              _c(\n                \"el-table\",\n                {\n                  attrs: {\n                    data: _vm.factorChoseData,\n                    size: \"small\",\n                    stripe: \"\",\n                    \"highlight-current-row\": \"\",\n                    \"max-height\": \"400\",\n                    \"header-cell-style\": { background: \"#ECF3FC\" },\n                  },\n                },\n                [\n                  _c(\"template\", { slot: \"empty\" }, [\n                    _c(\"div\", { staticClass: \"table_empty\" }, [\n                      _c(\"div\", { staticClass: \"empty_tips\" }, [\n                        _c(\"span\", [\n                          _vm._v(\"\\n                暂无因子\\n              \"),\n                        ]),\n                      ]),\n                    ]),\n                  ]),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      type: \"index\",\n                      width: \"55\",\n                      label: \"序号\",\n                      align: \"center\",\n                    },\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      prop: \"className\",\n                      label: \"检测对象\",\n                      width: \"80\",\n                      align: \"center\",\n                    },\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      prop: \"factorName\",\n                      label: \"检测因子\",\n                      align: \"center\",\n                    },\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      prop: \"standardNo\",\n                      label: \"标准号\",\n                      align: \"center\",\n                    },\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      prop: \"standardName\",\n                      label: \"标准名称\",\n                      \"min-width\": \"160\",\n                      align: \"center\",\n                    },\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      prop: \"analysisMethod\",\n                      label: \"分析方法\",\n                      align: \"center\",\n                    },\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      prop: \"analysisMethod\",\n                      label: \"标准有效性\",\n                      align: \"center\",\n                    },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function (ref) {\n                          var row = ref.row\n                          return [\n                            _vm._v(\n                              \"\\n            \" +\n                                _vm._s(_vm.STOKEN_STUTS[row.methodStatus]) +\n                                \"\\n          \"\n                            ),\n                          ]\n                        },\n                      },\n                    ]),\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      prop: \"price\",\n                      label: \"检测费用\",\n                      align: \"center\",\n                    },\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      prop: \"cmaFlg\",\n                      label: \"CMA\",\n                      width: \"60\",\n                      align: \"center\",\n                    },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function (ref) {\n                          var row = ref.row\n                          return [\n                            _c(\n                              \"el-tag\",\n                              {\n                                attrs: {\n                                  type:\n                                    row.cmaFlg === \"1\" ? \"success\" : \"danger\",\n                                },\n                              },\n                              [_vm._v(_vm._s(row.cmaFlg === \"1\" ? \"Y\" : \"N\"))]\n                            ),\n                          ]\n                        },\n                      },\n                    ]),\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      prop: \"cnasFlg\",\n                      label: \"CNAS\",\n                      width: \"60\",\n                      align: \"center\",\n                    },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function (ref) {\n                          var row = ref.row\n                          return [\n                            _c(\n                              \"el-tag\",\n                              {\n                                attrs: {\n                                  type:\n                                    row.cnasFlg === \"1\" ? \"success\" : \"danger\",\n                                },\n                              },\n                              [_vm._v(_vm._s(row.cnasFlg === \"1\" ? \"Y\" : \"N\"))]\n                            ),\n                          ]\n                        },\n                      },\n                    ]),\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      prop: \"extAssistFlg\",\n                      label: \"检测能力\",\n                      width: \"80\",\n                      align: \"center\",\n                    },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function (ref) {\n                          var row = ref.row\n                          return [\n                            _c(\n                              \"el-tag\",\n                              {\n                                attrs: {\n                                  type:\n                                    row.extAssistFlg && row.extAssistFlg === \"0\"\n                                      ? \"success\"\n                                      : \"danger\",\n                                },\n                              },\n                              [\n                                _vm._v(\n                                  _vm._s(\n                                    row.extAssistFlg && row.extAssistFlg === \"0\"\n                                      ? \"有\"\n                                      : \"无\"\n                                  )\n                                ),\n                              ]\n                            ),\n                          ]\n                        },\n                      },\n                    ]),\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: { fixed: \"right\", align: \"center\", label: \"操作\" },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function (scope) {\n                          return [\n                            _c(\n                              \"el-button\",\n                              {\n                                attrs: { type: \"text\" },\n                                on: {\n                                  click: function ($event) {\n                                    return _vm.handleRowDel(\n                                      scope.row,\n                                      scope.$index\n                                    )\n                                  },\n                                },\n                              },\n                              [_vm._v(\" 删除\")]\n                            ),\n                          ]\n                        },\n                      },\n                    ]),\n                  }),\n                ],\n                2\n              ),\n            ],\n            1\n          ),\n          _c(\n            \"div\",\n            {\n              staticClass: \"dialog-footer\",\n              attrs: { slot: \"footer\" },\n              slot: \"footer\",\n            },\n            [\n              _c(\n                \"el-button\",\n                {\n                  on: {\n                    click: function ($event) {\n                      _vm.factorSameVisible = false\n                    },\n                  },\n                },\n                [_vm._v(\"取消\")]\n              ),\n              _c(\n                \"el-button\",\n                {\n                  attrs: { type: \"primary\" },\n                  on: { click: _vm.confirmDialog },\n                },\n                [_vm._v(\"确认\")]\n              ),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n      _c(\n        \"el-dialog\",\n        {\n          attrs: {\n            title: \"套餐详情\",\n            visible: _vm.factorGroupVisible,\n            width: \"75%\",\n            top: \"5vh\",\n          },\n          on: {\n            \"update:visible\": function ($event) {\n              _vm.factorGroupVisible = $event\n            },\n          },\n        },\n        [\n          _c(\n            \"el-table\",\n            {\n              attrs: {\n                data: _vm.showGroupData,\n                stripe: \"\",\n                \"highlight-current-row\": \"\",\n              },\n            },\n            [\n              _c(\"el-table-column\", {\n                attrs: {\n                  type: \"index\",\n                  width: \"55\",\n                  label: \"序号\",\n                  align: \"center\",\n                },\n              }),\n              _c(\"el-table-column\", {\n                attrs: {\n                  prop: \"className\",\n                  label: \"检测对象\",\n                  align: \"center\",\n                },\n              }),\n              _c(\"el-table-column\", {\n                attrs: {\n                  prop: \"secdClassName\",\n                  label: \"检测类别\",\n                  align: \"center\",\n                },\n              }),\n              _c(\"el-table-column\", {\n                attrs: {\n                  prop: \"factorName\",\n                  label: \"检测因子\",\n                  align: \"center\",\n                },\n              }),\n              _c(\"el-table-column\", {\n                attrs: {\n                  prop: \"standardName\",\n                  label: \"检测标准\",\n                  \"min-width\": \"160\",\n                  align: \"center\",\n                },\n              }),\n              _c(\"el-table-column\", {\n                attrs: { prop: \"price\", label: \"检测费用\", align: \"center\" },\n              }),\n              _c(\"el-table-column\", {\n                attrs: {\n                  prop: \"cmaFlg\",\n                  label: \"CMA\",\n                  width: \"60px\",\n                  align: \"center\",\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function (ref) {\n                      var row = ref.row\n                      return [\n                        _c(\n                          \"el-tag\",\n                          {\n                            attrs: {\n                              type: row.cmaFlg === \"1\" ? \"success\" : \"danger\",\n                            },\n                          },\n                          [_vm._v(_vm._s(row.cmaFlg === \"1\" ? \"Y\" : \"N\"))]\n                        ),\n                      ]\n                    },\n                  },\n                ]),\n              }),\n              _c(\"el-table-column\", {\n                attrs: {\n                  prop: \"cnasFlg\",\n                  label: \"CNAS\",\n                  width: \"60px\",\n                  align: \"center\",\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function (ref) {\n                      var row = ref.row\n                      return [\n                        _c(\n                          \"el-tag\",\n                          {\n                            attrs: {\n                              type: row.cnasFlg === \"1\" ? \"success\" : \"danger\",\n                            },\n                          },\n                          [_vm._v(_vm._s(row.cnasFlg === \"1\" ? \"Y\" : \"N\"))]\n                        ),\n                      ]\n                    },\n                  },\n                ]),\n              }),\n              _c(\"el-table-column\", {\n                attrs: {\n                  prop: \"extAssistFlg\",\n                  label: \"检测能力\",\n                  width: \"80px\",\n                  align: \"center\",\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function (ref) {\n                      var row = ref.row\n                      return [\n                        _c(\n                          \"el-tag\",\n                          {\n                            attrs: {\n                              type:\n                                row.extAssistFlg && row.extAssistFlg === \"0\"\n                                  ? \"success\"\n                                  : \"danger\",\n                            },\n                          },\n                          [\n                            _vm._v(\n                              _vm._s(\n                                row.extAssistFlg && row.extAssistFlg === \"0\"\n                                  ? \"有\"\n                                  : \"无\"\n                              )\n                            ),\n                          ]\n                        ),\n                      ]\n                    },\n                  },\n                ]),\n              }),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}