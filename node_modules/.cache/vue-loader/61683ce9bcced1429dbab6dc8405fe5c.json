{"remainingRequest":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!F:\\webstormProjects\\vue-hj-platform\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\webstormProjects\\vue-hj-platform\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\webstormProjects\\vue-hj-platform\\src\\views\\task\\orderTaskList.vue?vue&type=template&id=365d5241&scoped=true&","dependencies":[{"path":"F:\\webstormProjects\\vue-hj-platform\\src\\views\\task\\orderTaskList.vue","mtime":1649841338000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"app-container\" },\n    [\n      _c(\n        \"el-form\",\n        { attrs: { model: _vm.searchForm, inline: true } },\n        [\n          _c(\n            \"el-row\",\n            [\n              _c(\n                \"el-col\",\n                { attrs: { span: 20 } },\n                [\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"任务单号:\" } },\n                    [\n                      _c(\"el-input\", {\n                        staticStyle: { width: \"165px\" },\n                        attrs: { placeholder: \"任务单号\" },\n                        model: {\n                          value: _vm.searchForm.jobId,\n                          callback: function ($$v) {\n                            _vm.$set(_vm.searchForm, \"jobId\", $$v)\n                          },\n                          expression: \"searchForm.jobId\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"项目名称:\" } },\n                    [\n                      _c(\"el-input\", {\n                        staticStyle: { width: \"165px\" },\n                        attrs: { placeholder: \"项目名称\" },\n                        model: {\n                          value: _vm.searchForm.projectName,\n                          callback: function ($$v) {\n                            _vm.$set(_vm.searchForm, \"projectName\", $$v)\n                          },\n                          expression: \"searchForm.projectName\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-form-item\",\n                    [\n                      _c(\n                        \"el-button\",\n                        {\n                          staticClass: \"iconfont icon-chaxun1\",\n                          attrs: { type: \"primary\" },\n                          on: { click: _vm.handleSearch },\n                        },\n                        [_vm._v(\" 查询\")]\n                      ),\n                    ],\n                    1\n                  ),\n                ],\n                1\n              ),\n              _c(\n                \"el-col\",\n                { staticClass: \"search-right\", attrs: { span: 4 } },\n                [\n                  _c(\n                    \"el-button\",\n                    {\n                      attrs: { type: \"text\", icon: \"el-icon-refresh\" },\n                      on: { click: _vm.handleSearch },\n                    },\n                    [_vm._v(\"刷新\")]\n                  ),\n                ],\n                1\n              ),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n      _c(\n        \"div\",\n        [\n          _c(\n            \"el-table\",\n            {\n              staticStyle: { width: \"100%\" },\n              attrs: {\n                stripe: \"\",\n                border: \"\",\n                data: _vm.taskData,\n                \"highlight-current-row\": \"\",\n                \"header-cell-style\": { background: \"#ECF3FC\" },\n              },\n            },\n            [\n              _c(\"template\", { slot: \"empty\" }, [\n                _c(\"div\", { staticClass: \"table_empty\" }, [\n                  _c(\"div\", { staticClass: \"empty_tips\" }, [\n                    _c(\"span\", [\n                      _vm._v(\"\\n              暂无任务信息\\n            \"),\n                    ]),\n                  ]),\n                ]),\n              ]),\n              _c(\"el-table-column\", {\n                attrs: {\n                  prop: \"jobId\",\n                  label: \"任务单号\",\n                  width: \"140px\",\n                  align: \"center\",\n                },\n              }),\n              _c(\"el-table-column\", {\n                attrs: {\n                  prop: \"projectName\",\n                  label: \"项目名称\",\n                  width: \"180px\",\n                  \"show-overflow-tooltip\": \"\",\n                  align: \"center\",\n                },\n              }),\n              _c(\"el-table-column\", {\n                attrs: {\n                  prop: \"consignorName\",\n                  label: \"委托单位\",\n                  width: \"140px\",\n                  \"show-overflow-tooltip\": \"\",\n                  align: \"center\",\n                },\n              }),\n              _c(\"el-table-column\", {\n                attrs: {\n                  prop: \"consignorLinker\",\n                  label: \"委托人\",\n                  align: \"center\",\n                },\n              }),\n              _c(\"el-table-column\", {\n                attrs: {\n                  prop: \"inspectionName\",\n                  label: \"受检单位\",\n                  width: \"140px\",\n                  \"show-overflow-tooltip\": \"\",\n                  align: \"center\",\n                },\n              }),\n              _c(\"el-table-column\", {\n                attrs: {\n                  label: \"要求完成时间\",\n                  width: \"190px\",\n                  align: \"center\",\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function (ref) {\n                      var row = ref.row\n                      return [\n                        _vm._v(\n                          \"\\n          \" +\n                            _vm._s(row.startDate) +\n                            \" ~ \" +\n                            _vm._s(row.endDate) +\n                            \"\\n        \"\n                        ),\n                      ]\n                    },\n                  },\n                ]),\n              }),\n              _c(\"el-table-column\", {\n                attrs: { label: \"进度\", align: \"center\", width: \"140px\" },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function (ref) {\n                      var row = ref.row\n                      return [\n                        _c(\n                          \"div\",\n                          {\n                            on: {\n                              mousedown: function ($event) {\n                                return _vm.showInfos(row)\n                              },\n                            },\n                          },\n                          [\n                            _c(\"el-progress\", {\n                              attrs: {\n                                \"text-inside\": true,\n                                \"stroke-width\": 14,\n                                percentage: row.process,\n                              },\n                            }),\n                          ],\n                          1\n                        ),\n                      ]\n                    },\n                  },\n                ]),\n              }),\n              _c(\"el-table-column\", {\n                attrs: { prop: \"taskStatus\", label: \"状态\", align: \"center\" },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function (ref) {\n                      var row = ref.row\n                      return [\n                        _c(\n                          \"el-tag\",\n                          {\n                            attrs: {\n                              type:\n                                row.taskStatus === \"1\" ? \"success\" : \"primary\",\n                            },\n                          },\n                          [\n                            _vm._v(\n                              _vm._s(\n                                row.taskStatus === \"1\" ? \"已完成\" : \"未完成\"\n                              )\n                            ),\n                          ]\n                        ),\n                      ]\n                    },\n                  },\n                ]),\n              }),\n              _c(\"el-table-column\", {\n                attrs: {\n                  prop: \"createTime\",\n                  width: \"155px\",\n                  label: \"创建时间\",\n                  align: \"center\",\n                },\n              }),\n              _c(\"el-table-column\", {\n                attrs: { label: \"操作\" },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function (ref) {\n                      var row = ref.row\n                      return [\n                        _c(\n                          \"el-button\",\n                          {\n                            attrs: { type: \"text\" },\n                            on: {\n                              click: function ($event) {\n                                return _vm.handleDetail(row)\n                              },\n                            },\n                          },\n                          [_vm._v(\"详情\")]\n                        ),\n                      ]\n                    },\n                  },\n                ]),\n              }),\n            ],\n            2\n          ),\n        ],\n        1\n      ),\n      _c(\n        \"div\",\n        { staticStyle: { float: \"right\" } },\n        [\n          _c(\"pagination\", {\n            directives: [\n              {\n                name: \"show\",\n                rawName: \"v-show\",\n                value: _vm.total > 0,\n                expression: \"total>0\",\n              },\n            ],\n            attrs: {\n              total: _vm.total,\n              page: _vm.searchForm.pageNumber,\n              limit: _vm.searchForm.pageSize,\n            },\n            on: {\n              \"update:page\": function ($event) {\n                return _vm.$set(_vm.searchForm, \"pageNumber\", $event)\n              },\n              \"update:limit\": function ($event) {\n                return _vm.$set(_vm.searchForm, \"pageSize\", $event)\n              },\n              pagination: _vm.handleSearch,\n            },\n          }),\n        ],\n        1\n      ),\n      _c(\n        \"el-dialog\",\n        {\n          attrs: { title: \"任务进度表\", visible: _vm.taskInfosVisible },\n          on: {\n            \"update:visible\": function ($event) {\n              _vm.taskInfosVisible = $event\n            },\n          },\n        },\n        [\n          _c(\n            \"div\",\n            { staticClass: \"block\" },\n            [\n              _c(\n                \"el-timeline\",\n                _vm._l(_vm.activitieModel, function (activity, index) {\n                  return _c(\n                    \"el-timeline-item\",\n                    {\n                      key: index,\n                      attrs: {\n                        type: activity.type,\n                        color: activity.color,\n                        size: activity.size,\n                        timestamp: activity.timestamp,\n                      },\n                    },\n                    [\n                      _vm._v(\n                        \"\\n          \" + _vm._s(activity.content) + \"\\n        \"\n                      ),\n                    ]\n                  )\n                }),\n                1\n              ),\n            ],\n            1\n          ),\n        ]\n      ),\n      _c(\n        \"el-dialog\",\n        {\n          attrs: {\n            title: \"因子调度详情\",\n            visible: _vm.factorVisible,\n            width: \"80%\",\n          },\n          on: {\n            \"update:visible\": function ($event) {\n              _vm.factorVisible = $event\n            },\n          },\n        },\n        [\n          _c(\n            \"el-table\",\n            { attrs: { data: _vm.factorData, border: \"\", stripe: \"\" } },\n            [\n              _c(\"el-table-column\", {\n                attrs: {\n                  type: \"index\",\n                  width: \"50\",\n                  align: \"center\",\n                  label: \"序号\",\n                },\n              }),\n              _c(\"el-table-column\", {\n                attrs: {\n                  prop: \"secdClassName\",\n                  label: \"检测类别\",\n                  \"min-width\": \"110px\",\n                  align: \"center\",\n                },\n              }),\n              _c(\"el-table-column\", {\n                attrs: {\n                  prop: \"factorName\",\n                  label: \"检测因子\",\n                  \"min-width\": \"200\",\n                  align: \"center\",\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function (ref) {\n                      var row = ref.row\n                      return [\n                        _vm._v(\"\\n          \" + _vm._s(row.factorName)),\n                        _c(\"span\", { staticStyle: { color: \"red\" } }, [\n                          _vm._v(\n                            _vm._s(\n                              row.meanName && row.meanName.length > 0\n                                ? \"(\" + row.meanName + \")\"\n                                : \"\"\n                            )\n                          ),\n                        ]),\n                      ]\n                    },\n                  },\n                ]),\n              }),\n              _c(\"el-table-column\", {\n                attrs: {\n                  prop: \"factorPoint\",\n                  label: \"检测位置\",\n                  align: \"center\",\n                },\n              }),\n              _c(\"el-table-column\", {\n                attrs: {\n                  prop: \"frequency\",\n                  label: \"频次(次/天)\",\n                  align: \"center\",\n                },\n              }),\n              _c(\"el-table-column\", {\n                attrs: { prop: \"dayCount\", label: \"天数\", align: \"center\" },\n              }),\n              _c(\"el-table-column\", {\n                attrs: { label: \"次数\", align: \"center\" },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function (ref) {\n                      var row = ref.row\n                      return [\n                        _vm._v(\n                          \"\\n          \" +\n                            _vm._s(Number(row.dayCount * row.frequency)) +\n                            \"\\n        \"\n                        ),\n                      ]\n                    },\n                  },\n                ]),\n              }),\n              _c(\"el-table-column\", {\n                attrs: { label: \"是否合样\", align: \"center\" },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function (ref) {\n                      var row = ref.row\n                      return [\n                        _vm._v(\n                          \"\\n          \" +\n                            _vm._s(row.hyFlag === \"1\" ? \"Y\" : \"N\") +\n                            \"\\n        \"\n                        ),\n                      ]\n                    },\n                  },\n                ]),\n              }),\n              _c(\"el-table-column\", {\n                attrs: { label: \"是否分包\", align: \"center\" },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function (ref) {\n                      var row = ref.row\n                      return [\n                        _vm._v(\n                          \"\\n          \" +\n                            _vm._s(row.fbFlag === \"1\" ? \"Y\" : \"N\") +\n                            \"\\n        \"\n                        ),\n                      ]\n                    },\n                  },\n                ]),\n              }),\n              _c(\"el-table-column\", {\n                attrs: {\n                  prop: \"factorRemark\",\n                  label: \"备注\",\n                  \"min-width\": \"110\",\n                  align: \"center\",\n                },\n              }),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}