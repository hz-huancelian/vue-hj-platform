{"remainingRequest":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!F:\\webstormProjects\\vue-hj-platform\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\webstormProjects\\vue-hj-platform\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\webstormProjects\\vue-hj-platform\\src\\views\\system\\user\\index.vue?vue&type=template&id=1930a3c4&scoped=true&","dependencies":[{"path":"F:\\webstormProjects\\vue-hj-platform\\src\\views\\system\\user\\index.vue","mtime":1651301394000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"app-container\" },\n    [\n      _c(\n        \"el-row\",\n        { attrs: { gutter: 20 } },\n        [\n          _c(\"el-col\", { attrs: { span: 4, xs: 24 } }, [\n            _c(\n              \"div\",\n              { staticClass: \"head-container\" },\n              [\n                _c(\"el-input\", {\n                  staticStyle: { \"margin-bottom\": \"20px\" },\n                  attrs: {\n                    placeholder: \"请输入部门名称\",\n                    clearable: \"\",\n                    size: \"small\",\n                    \"prefix-icon\": \"el-icon-search\",\n                  },\n                  model: {\n                    value: _vm.deptName,\n                    callback: function ($$v) {\n                      _vm.deptName = $$v\n                    },\n                    expression: \"deptName\",\n                  },\n                }),\n              ],\n              1\n            ),\n            _c(\n              \"div\",\n              { staticClass: \"head-container\" },\n              [\n                _c(\"el-tree\", {\n                  ref: \"tree\",\n                  attrs: {\n                    data: _vm.deptOptions,\n                    props: _vm.defaultProps,\n                    \"expand-on-click-node\": false,\n                    \"filter-node-method\": _vm.filterNode,\n                    \"default-expand-all\": \"\",\n                  },\n                  on: { \"node-click\": _vm.handleNodeClick },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _c(\n            \"el-col\",\n            { attrs: { span: 20, xs: 24 } },\n            [\n              _c(\n                \"el-row\",\n                [\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 18 } },\n                    [\n                      _c(\n                        \"el-form\",\n                        {\n                          directives: [\n                            {\n                              name: \"show\",\n                              rawName: \"v-show\",\n                              value: _vm.showSearch,\n                              expression: \"showSearch\",\n                            },\n                          ],\n                          ref: \"queryForm\",\n                          attrs: { model: _vm.queryParams, inline: true },\n                        },\n                        [\n                          _c(\n                            \"el-form-item\",\n                            { attrs: { label: \"员工姓名\", prop: \"empName\" } },\n                            [\n                              _c(\"el-input\", {\n                                staticStyle: { width: \"120px\" },\n                                attrs: { placeholder: \"请输入\", clearable: \"\" },\n                                nativeOn: {\n                                  keyup: function ($event) {\n                                    if (\n                                      !$event.type.indexOf(\"key\") &&\n                                      _vm._k(\n                                        $event.keyCode,\n                                        \"enter\",\n                                        13,\n                                        $event.key,\n                                        \"Enter\"\n                                      )\n                                    ) {\n                                      return null\n                                    }\n                                    return _vm.handleQuery($event)\n                                  },\n                                },\n                                model: {\n                                  value: _vm.queryParams.empName,\n                                  callback: function ($$v) {\n                                    _vm.$set(_vm.queryParams, \"empName\", $$v)\n                                  },\n                                  expression: \"queryParams.empName\",\n                                },\n                              }),\n                            ],\n                            1\n                          ),\n                          _c(\n                            \"el-form-item\",\n                            {\n                              attrs: { label: \"手机号码\", prop: \"phonenumber\" },\n                            },\n                            [\n                              _c(\"el-input\", {\n                                staticStyle: { width: \"120px\" },\n                                attrs: { placeholder: \"请输入\", clearable: \"\" },\n                                nativeOn: {\n                                  keyup: function ($event) {\n                                    if (\n                                      !$event.type.indexOf(\"key\") &&\n                                      _vm._k(\n                                        $event.keyCode,\n                                        \"enter\",\n                                        13,\n                                        $event.key,\n                                        \"Enter\"\n                                      )\n                                    ) {\n                                      return null\n                                    }\n                                    return _vm.handleQuery($event)\n                                  },\n                                },\n                                model: {\n                                  value: _vm.queryParams.phonenumber,\n                                  callback: function ($$v) {\n                                    _vm.$set(\n                                      _vm.queryParams,\n                                      \"phonenumber\",\n                                      $$v\n                                    )\n                                  },\n                                  expression: \"queryParams.phonenumber\",\n                                },\n                              }),\n                            ],\n                            1\n                          ),\n                          _c(\n                            \"el-form-item\",\n                            { attrs: { label: \"状态\", prop: \"status\" } },\n                            [\n                              _c(\n                                \"el-select\",\n                                {\n                                  staticStyle: { width: \"100px\" },\n                                  attrs: { placeholder: \"状态\", clearable: \"\" },\n                                  model: {\n                                    value: _vm.queryParams.status,\n                                    callback: function ($$v) {\n                                      _vm.$set(_vm.queryParams, \"status\", $$v)\n                                    },\n                                    expression: \"queryParams.status\",\n                                  },\n                                },\n                                _vm._l(_vm.statusOptions, function (dict) {\n                                  return _c(\"el-option\", {\n                                    key: dict.dictValue,\n                                    attrs: {\n                                      label: dict.dictLabel,\n                                      value: dict.dictValue,\n                                    },\n                                  })\n                                }),\n                                1\n                              ),\n                            ],\n                            1\n                          ),\n                          _c(\n                            \"el-form-item\",\n                            [\n                              _c(\n                                \"el-button\",\n                                {\n                                  attrs: {\n                                    type: \"primary\",\n                                    icon: \"el-icon-search\",\n                                    size: \"small\",\n                                  },\n                                  on: { click: _vm.handleQuery },\n                                },\n                                [_vm._v(\"搜索\")]\n                              ),\n                              _c(\n                                \"el-button\",\n                                {\n                                  attrs: {\n                                    icon: \"el-icon-refresh\",\n                                    size: \"small\",\n                                  },\n                                  on: { click: _vm.resetQuery },\n                                },\n                                [_vm._v(\"重置\")]\n                              ),\n                            ],\n                            1\n                          ),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 6 } },\n                    [\n                      _c(\n                        \"el-button\",\n                        {\n                          attrs: {\n                            type: \"text\",\n                            size: \"small\",\n                            icon: \"el-icon-plus\",\n                          },\n                          on: { click: _vm.handleAdd },\n                        },\n                        [_vm._v(\"新增\")]\n                      ),\n                      _c(\n                        \"el-button\",\n                        {\n                          attrs: {\n                            type: \"text\",\n                            size: \"small\",\n                            icon: \"el-icon-upload2\",\n                          },\n                          on: { click: _vm.handleUpload },\n                        },\n                        [_vm._v(\"批量导入\")]\n                      ),\n                      _c(\n                        \"el-button\",\n                        {\n                          attrs: {\n                            type: \"text\",\n                            size: \"small\",\n                            icon: \"el-icon-download\",\n                          },\n                          on: { click: _vm.handleDownload },\n                        },\n                        [_vm._v(\"导出\")]\n                      ),\n                      _c(\n                        \"el-button\",\n                        {\n                          attrs: {\n                            type: \"text\",\n                            size: \"small\",\n                            icon: \"el-icon-refresh\",\n                          },\n                          on: { click: _vm.handleQuery },\n                        },\n                        [_vm._v(\"刷新\")]\n                      ),\n                    ],\n                    1\n                  ),\n                ],\n                1\n              ),\n              _c(\n                \"el-table\",\n                {\n                  directives: [\n                    {\n                      name: \"loading\",\n                      rawName: \"v-loading\",\n                      value: _vm.loading,\n                      expression: \"loading\",\n                    },\n                  ],\n                  attrs: { data: _vm.userList },\n                  on: { \"selection-change\": _vm.handleSelectionChange },\n                },\n                [\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      type: \"index\",\n                      label: \"序号\",\n                      width: \"50\",\n                      align: \"center\",\n                    },\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      label: \"员工工号\",\n                      align: \"center\",\n                      prop: \"empCode\",\n                      \"show-overflow-tooltip\": true,\n                    },\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      label: \"员工姓名\",\n                      align: \"center\",\n                      prop: \"empName\",\n                      \"show-overflow-tooltip\": true,\n                    },\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      label: \"登录账号\",\n                      align: \"center\",\n                      width: \"100px\",\n                      prop: \"username\",\n                      \"show-overflow-tooltip\": true,\n                    },\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      label: \"部门\",\n                      align: \"center\",\n                      prop: \"deptName\",\n                      \"show-overflow-tooltip\": true,\n                    },\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      label: \"岗位\",\n                      align: \"center\",\n                      prop: \"postNames\",\n                      \"show-overflow-tooltip\": true,\n                    },\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      label: \"角色\",\n                      align: \"center\",\n                      prop: \"roleNames\",\n                      \"show-overflow-tooltip\": true,\n                    },\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      label: \"手机号码\",\n                      align: \"center\",\n                      prop: \"phonenumber\",\n                      width: \"120\",\n                    },\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: { label: \"状态\", align: \"center\" },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function (scope) {\n                          return [\n                            _c(\n                              \"el-tag\",\n                              {\n                                attrs: {\n                                  type:\n                                    scope.row.status === \"0\"\n                                      ? \"success\"\n                                      : \"danger\",\n                                },\n                              },\n                              [\n                                _vm._v(\n                                  _vm._s(\n                                    scope.row.status === \"0\" ? \"正常\" : \"停用\"\n                                  )\n                                ),\n                              ]\n                            ),\n                          ]\n                        },\n                      },\n                    ]),\n                  }),\n                  _vm.columns[6].visible\n                    ? _c(\"el-table-column\", {\n                        attrs: {\n                          label: \"创建日期\",\n                          align: \"center\",\n                          prop: \"createTime\",\n                          width: \"120\",\n                        },\n                        scopedSlots: _vm._u(\n                          [\n                            {\n                              key: \"default\",\n                              fn: function (scope) {\n                                return [\n                                  _c(\"span\", [\n                                    _vm._v(\n                                      _vm._s(\n                                        _vm.parseTime(\n                                          scope.row.createTime,\n                                          \"{y}-{m}-{d}\"\n                                        )\n                                      )\n                                    ),\n                                  ]),\n                                ]\n                              },\n                            },\n                          ],\n                          null,\n                          false,\n                          3484357996\n                        ),\n                      })\n                    : _vm._e(),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      label: \"操作\",\n                      align: \"center\",\n                      width: \"160\",\n                      \"class-name\": \"small-padding fixed-width\",\n                    },\n                    scopedSlots: _vm._u(\n                      [\n                        {\n                          key: \"default\",\n                          fn: function (scope) {\n                            return scope.row.deptId !== \"-1\"\n                              ? [\n                                  _c(\n                                    \"el-button\",\n                                    {\n                                      attrs: {\n                                        size: \"mini\",\n                                        type: \"text\",\n                                        icon: \"el-icon-edit\",\n                                      },\n                                      on: {\n                                        click: function ($event) {\n                                          return _vm.handleUpdate(scope.row)\n                                        },\n                                      },\n                                    },\n                                    [_vm._v(\"修改\")]\n                                  ),\n                                  scope.row.status === \"0\"\n                                    ? _c(\n                                        \"el-button\",\n                                        {\n                                          attrs: {\n                                            size: \"mini\",\n                                            type: \"text\",\n                                            icon: \"el-icon-delete\",\n                                          },\n                                          on: {\n                                            click: function ($event) {\n                                              return _vm.handleDelete(scope.row)\n                                            },\n                                          },\n                                        },\n                                        [_vm._v(\"注销\")]\n                                      )\n                                    : _vm._e(),\n                                  scope.row.status === \"1\"\n                                    ? _c(\n                                        \"el-button\",\n                                        {\n                                          attrs: {\n                                            size: \"mini\",\n                                            type: \"text\",\n                                            icon: \"el-icon-success\",\n                                          },\n                                          on: {\n                                            click: function ($event) {\n                                              return _vm.handleOnline(scope.row)\n                                            },\n                                          },\n                                        },\n                                        [_vm._v(\"启用\")]\n                                      )\n                                    : _vm._e(),\n                                  _c(\n                                    \"el-dropdown\",\n                                    {\n                                      attrs: { size: \"mini\" },\n                                      on: {\n                                        command: function (command) {\n                                          return _vm.handleCommand(\n                                            command,\n                                            scope.row\n                                          )\n                                        },\n                                      },\n                                    },\n                                    [\n                                      _c(\n                                        \"span\",\n                                        {\n                                          staticClass: \"el-dropdown-link\",\n                                          staticStyle: { \"font-size\": \"12px\" },\n                                        },\n                                        [\n                                          _c(\"i\", {\n                                            staticClass:\n                                              \"el-icon-d-arrow-right el-icon--right\",\n                                          }),\n                                          _vm._v(\"更多\\n              \"),\n                                        ]\n                                      ),\n                                      _c(\n                                        \"el-dropdown-menu\",\n                                        {\n                                          attrs: { slot: \"dropdown\" },\n                                          slot: \"dropdown\",\n                                        },\n                                        [\n                                          _c(\n                                            \"el-dropdown-item\",\n                                            {\n                                              attrs: {\n                                                command: \"handleResetPwd\",\n                                                icon: \"el-icon-key\",\n                                              },\n                                            },\n                                            [_vm._v(\"重置密码\")]\n                                          ),\n                                        ],\n                                        1\n                                      ),\n                                    ],\n                                    1\n                                  ),\n                                ]\n                              : undefined\n                          },\n                        },\n                      ],\n                      null,\n                      true\n                    ),\n                  }),\n                ],\n                1\n              ),\n              _c(\"pagination\", {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: _vm.total > 0,\n                    expression: \"total>0\",\n                  },\n                ],\n                attrs: {\n                  total: _vm.total,\n                  page: _vm.queryParams.pageNumber,\n                  limit: _vm.queryParams.pageSize,\n                },\n                on: {\n                  \"update:page\": function ($event) {\n                    return _vm.$set(_vm.queryParams, \"pageNumber\", $event)\n                  },\n                  \"update:limit\": function ($event) {\n                    return _vm.$set(_vm.queryParams, \"pageSize\", $event)\n                  },\n                  pagination: _vm.getList,\n                },\n              }),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n      _c(\n        \"el-dialog\",\n        {\n          attrs: {\n            title: _vm.title,\n            visible: _vm.open,\n            width: \"720px\",\n            \"append-to-body\": \"\",\n            \"close-on-click-modal\": false,\n          },\n          on: {\n            \"update:visible\": function ($event) {\n              _vm.open = $event\n            },\n          },\n        },\n        [\n          _c(\n            \"el-form\",\n            {\n              ref: \"form\",\n              attrs: {\n                model: _vm.form,\n                rules: _vm.rules,\n                \"label-width\": \"100px\",\n              },\n            },\n            [\n              _c(\n                \"el-row\",\n                { attrs: { gutter: 10 } },\n                [\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 12 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"员工工号\", prop: \"empCode\" } },\n                        [\n                          _c(\"el-input\", {\n                            attrs: {\n                              placeholder: \"请输入员工工号\",\n                              maxlength: \"30\",\n                            },\n                            model: {\n                              value: _vm.form.empCode,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.form, \"empCode\", $$v)\n                              },\n                              expression: \"form.empCode\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  ),\n                ],\n                1\n              ),\n              _c(\n                \"el-row\",\n                { attrs: { gutter: 10 } },\n                [\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 12 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"员工姓名\", prop: \"empName\" } },\n                        [\n                          _c(\"el-input\", {\n                            attrs: {\n                              placeholder: \"请输入姓名\",\n                              maxlength: \"30\",\n                            },\n                            model: {\n                              value: _vm.form.empName,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.form, \"empName\", $$v)\n                              },\n                              expression: \"form.empName\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 12 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"归属部门\", prop: \"deptId\" } },\n                        [\n                          _c(\"treeselect\", {\n                            attrs: {\n                              options: _vm.deptOptions,\n                              \"show-count\": true,\n                              placeholder: \"请选择归属部门\",\n                            },\n                            model: {\n                              value: _vm.form.deptId,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.form, \"deptId\", $$v)\n                              },\n                              expression: \"form.deptId\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  ),\n                ],\n                1\n              ),\n              _c(\n                \"el-row\",\n                { attrs: { gutter: 10 } },\n                [\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 12 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"手机号码\", prop: \"phonenumber\" } },\n                        [\n                          _c(\"el-input\", {\n                            attrs: {\n                              placeholder: \"请输入手机号码\",\n                              maxlength: \"11\",\n                            },\n                            model: {\n                              value: _vm.form.phonenumber,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.form, \"phonenumber\", $$v)\n                              },\n                              expression: \"form.phonenumber\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 12 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"个人邮箱\", prop: \"email\" } },\n                        [\n                          _c(\"el-input\", {\n                            attrs: {\n                              placeholder: \"请输入邮箱\",\n                              maxlength: \"50\",\n                            },\n                            model: {\n                              value: _vm.form.email,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.form, \"email\", $$v)\n                              },\n                              expression: \"form.email\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  ),\n                ],\n                1\n              ),\n              _c(\n                \"el-row\",\n                { attrs: { gutter: 10 } },\n                [\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 12 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"性别\" } },\n                        [\n                          _c(\n                            \"el-select\",\n                            {\n                              attrs: { placeholder: \"请选择\" },\n                              model: {\n                                value: _vm.form.sex,\n                                callback: function ($$v) {\n                                  _vm.$set(_vm.form, \"sex\", $$v)\n                                },\n                                expression: \"form.sex\",\n                              },\n                            },\n                            _vm._l(_vm.sexOptions, function (dict) {\n                              return _c(\"el-option\", {\n                                key: dict.dictValue,\n                                attrs: {\n                                  label: dict.dictLabel,\n                                  value: dict.dictValue,\n                                },\n                              })\n                            }),\n                            1\n                          ),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  ),\n                ],\n                1\n              ),\n              _c(\n                \"el-row\",\n                { attrs: { gutter: 10 } },\n                [\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 12 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        [\n                          _c(\n                            \"span\",\n                            { attrs: { slot: \"label\" }, slot: \"label\" },\n                            [\n                              _vm._v(\"\\n              岗位\\n              \"),\n                              _c(\n                                \"el-popover\",\n                                {\n                                  attrs: {\n                                    placement: \"top-start\",\n                                    title: \"\",\n                                    width: \"400\",\n                                    trigger: \"hover\",\n                                    content:\n                                      \"岗位是员工在公司里的内部职称，一个员工对应一个岗位，岗位名称可以任意命名，员工岗位与权限没有任何关联。\",\n                                  },\n                                },\n                                [\n                                  _c(\"svg-icon\", {\n                                    staticStyle: { \"font-size\": \"16px\" },\n                                    attrs: {\n                                      slot: \"reference\",\n                                      \"icon-class\": \"help\",\n                                    },\n                                    slot: \"reference\",\n                                  }),\n                                ],\n                                1\n                              ),\n                            ],\n                            1\n                          ),\n                          _c(\n                            \"el-select\",\n                            {\n                              attrs: { placeholder: \"请选择\" },\n                              on: { change: _vm.getPostInfo },\n                              model: {\n                                value: _vm.postId,\n                                callback: function ($$v) {\n                                  _vm.postId = $$v\n                                },\n                                expression: \"postId\",\n                              },\n                            },\n                            _vm._l(_vm.postOptions, function (item) {\n                              return _c(\"el-option\", {\n                                key: item.postId,\n                                attrs: {\n                                  label: item.postName,\n                                  value: item.postId,\n                                  disabled: item.status == 1,\n                                },\n                              })\n                            }),\n                            1\n                          ),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 12 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        [\n                          _c(\n                            \"span\",\n                            { attrs: { slot: \"label\" }, slot: \"label\" },\n                            [\n                              _vm._v(\"\\n              角色\\n              \"),\n                              _c(\n                                \"el-popover\",\n                                {\n                                  attrs: {\n                                    placement: \"top-start\",\n                                    title: \"\",\n                                    width: \"300\",\n                                    trigger: \"hover\",\n                                    content:\n                                      \"角色是平台内设定的统一固定称谓，一个员工可以对应多个角色，\\n                也就是说可以同时拥有多个角色的权限，以解决某些员工身兼数职的问题。\\n                角色名称是系统默认固定的，但是角色的数据权限和菜单权限管理员可以进行更改，\\n                请根据需要谨慎更改。平台后期可能新增角色，但不会对现有角色进行修改，\\n                若点击恢复默认权限，则会恢复到平台给予当前角色的默认权限。\",\n                                  },\n                                },\n                                [\n                                  _c(\"svg-icon\", {\n                                    staticStyle: { \"font-size\": \"16px\" },\n                                    attrs: {\n                                      slot: \"reference\",\n                                      \"icon-class\": \"help\",\n                                    },\n                                    slot: \"reference\",\n                                  }),\n                                ],\n                                1\n                              ),\n                            ],\n                            1\n                          ),\n                          _c(\n                            \"el-select\",\n                            {\n                              attrs: { multiple: \"\", placeholder: \"请选择\" },\n                              model: {\n                                value: _vm.form.roleIds,\n                                callback: function ($$v) {\n                                  _vm.$set(_vm.form, \"roleIds\", $$v)\n                                },\n                                expression: \"form.roleIds\",\n                              },\n                            },\n                            _vm._l(_vm.roleOptions, function (item) {\n                              return _c(\"el-option\", {\n                                key: item.roleId,\n                                attrs: {\n                                  label: item.roleName,\n                                  value: item.roleId,\n                                  disabled: item.status == 1,\n                                },\n                              })\n                            }),\n                            1\n                          ),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  ),\n                ],\n                1\n              ),\n              _c(\n                \"el-row\",\n                { attrs: { gutter: 10 } },\n                [\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 12 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { prop: \"isAppLogin\" } },\n                        [\n                          _c(\n                            \"span\",\n                            { attrs: { slot: \"label\" }, slot: \"label\" },\n                            [\n                              _vm._v(\"\\n              小程序\\n              \"),\n                              _c(\n                                \"el-popover\",\n                                {\n                                  attrs: {\n                                    placement: \"top-start\",\n                                    title: \"\",\n                                    width: \"300\",\n                                    trigger: \"hover\",\n                                    content:\n                                      \"允许采样组长/采样员通过手机端进行现场采样录样操作，如果员工的角色含有采样组长或采样员，建议打开允许按钮\",\n                                  },\n                                },\n                                [\n                                  _c(\"svg-icon\", {\n                                    staticStyle: { \"font-size\": \"16px\" },\n                                    attrs: {\n                                      slot: \"reference\",\n                                      \"icon-class\": \"help\",\n                                    },\n                                    slot: \"reference\",\n                                  }),\n                                ],\n                                1\n                              ),\n                            ],\n                            1\n                          ),\n                          _c(\"el-switch\", {\n                            attrs: {\n                              \"active-text\": \"允许\",\n                              \"inactive-text\": \"不允许\",\n                              \"active-value\": \"1\",\n                              \"inactive-value\": \"0\",\n                            },\n                            on: { change: _vm.switchChange },\n                            model: {\n                              value: _vm.form.isAppLogin,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.form, \"isAppLogin\", $$v)\n                              },\n                              expression: \"form.isAppLogin\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 12 } },\n                    [\n                      _vm.form.isAppLogin == 1\n                        ? _c(\n                            \"el-form-item\",\n                            {\n                              attrs: { label: \"小程序角色\", prop: \"appRoles\" },\n                            },\n                            [\n                              _c(\n                                \"el-select\",\n                                {\n                                  attrs: { multiple: \"\", clearable: \"\" },\n                                  model: {\n                                    value: _vm.form.appRoles,\n                                    callback: function ($$v) {\n                                      _vm.$set(_vm.form, \"appRoles\", $$v)\n                                    },\n                                    expression: \"form.appRoles\",\n                                  },\n                                },\n                                _vm._l(_vm.dataAppOptions, function (item) {\n                                  return _c(\"el-option\", {\n                                    key: item.value,\n                                    attrs: {\n                                      label: item.label,\n                                      value: item.value,\n                                    },\n                                  })\n                                }),\n                                1\n                              ),\n                            ],\n                            1\n                          )\n                        : _vm._e(),\n                    ],\n                    1\n                  ),\n                ],\n                1\n              ),\n              _c(\n                \"el-row\",\n                { attrs: { gutter: 10 } },\n                [\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 24 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"备注\" } },\n                        [\n                          _c(\"el-input\", {\n                            attrs: {\n                              type: \"textarea\",\n                              placeholder: \"请输入内容\",\n                            },\n                            model: {\n                              value: _vm.form.remark,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.form, \"remark\", $$v)\n                              },\n                              expression: \"form.remark\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  ),\n                ],\n                1\n              ),\n            ],\n            1\n          ),\n          _c(\n            \"div\",\n            {\n              staticClass: \"dialog-footer\",\n              attrs: { slot: \"footer\" },\n              slot: \"footer\",\n            },\n            [\n              _c(\n                \"el-button\",\n                { attrs: { type: \"primary\" }, on: { click: _vm.submitForm } },\n                [_vm._v(\"确 定\")]\n              ),\n              _c(\"el-button\", { on: { click: _vm.cancel } }, [_vm._v(\"取 消\")]),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n      _c(\n        \"el-dialog\",\n        {\n          attrs: {\n            title: \"批量导入员工\",\n            visible: _vm.uploadVisible,\n            \"append-to-body\": \"\",\n          },\n          on: {\n            \"update:visible\": function ($event) {\n              _vm.uploadVisible = $event\n            },\n          },\n        },\n        [\n          _c(\n            \"div\",\n            { staticClass: \"block\" },\n            [\n              _c(\n                \"el-timeline\",\n                [\n                  _c(\n                    \"el-timeline-item\",\n                    { attrs: { size: \"large\" } },\n                    [\n                      _c(\n                        \"span\",\n                        {\n                          staticClass: \"time-dot\",\n                          attrs: { slot: \"dot\" },\n                          slot: \"dot\",\n                        },\n                        [_vm._v(\"\\n            1\\n          \")]\n                      ),\n                      _c(\n                        \"el-row\",\n                        [\n                          _c(\"el-col\", { attrs: { span: 24 } }, [\n                            _vm._v(\n                              \"\\n              下载模板，批量填写员工信息\\n            \"\n                            ),\n                          ]),\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"el-row\",\n                        { staticStyle: { \"padding-top\": \"10px\" } },\n                        [\n                          _c(\n                            \"el-col\",\n                            { attrs: { span: 24 } },\n                            [\n                              _c(\n                                \"el-button\",\n                                {\n                                  attrs: { size: \"mini\", type: \"primary\" },\n                                  on: {\n                                    click: function ($event) {\n                                      return _vm.downloadTem()\n                                    },\n                                  },\n                                },\n                                [_vm._v(\"模板下载\")]\n                              ),\n                            ],\n                            1\n                          ),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-timeline-item\",\n                    { attrs: { size: \"large\" } },\n                    [\n                      _c(\n                        \"span\",\n                        {\n                          staticClass: \"time-dot\",\n                          attrs: { slot: \"dot\" },\n                          slot: \"dot\",\n                        },\n                        [_vm._v(\"\\n            2\\n          \")]\n                      ),\n                      _c(\n                        \"el-row\",\n                        [\n                          _c(\"el-col\", { attrs: { span: 24 } }, [\n                            _vm._v(\n                              \"\\n              上传填写好的员工信息表格\\n            \"\n                            ),\n                          ]),\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"el-row\",\n                        { staticStyle: { \"padding-top\": \"10px\" } },\n                        [\n                          _c(\n                            \"el-col\",\n                            { attrs: { span: 24 } },\n                            [\n                              _c(\n                                \"el-upload\",\n                                {\n                                  staticClass: \"upload-demo\",\n                                  staticStyle: { width: \"300px\" },\n                                  attrs: {\n                                    action: \"/api/dataImport/uploadEmployee\",\n                                    \"on-change\": _vm.uploadChange,\n                                    \"file-list\": _vm.excelFileList,\n                                    accept: \".xlsx,.xls\",\n                                    limit: 1,\n                                  },\n                                },\n                                [\n                                  _c(\n                                    \"el-button\",\n                                    {\n                                      attrs: { size: \"mini\", type: \"primary\" },\n                                    },\n                                    [_vm._v(\"点击上传\")]\n                                  ),\n                                  _c(\n                                    \"div\",\n                                    {\n                                      staticClass: \"el-upload__tip\",\n                                      staticStyle: { color: \"red\" },\n                                      attrs: { slot: \"tip\" },\n                                      slot: \"tip\",\n                                    },\n                                    [_vm._v(\"您只能上传.xlsx,.xls格式的文件\")]\n                                  ),\n                                ],\n                                1\n                              ),\n                            ],\n                            1\n                          ),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  ),\n                ],\n                1\n              ),\n              _c(\n                \"el-row\",\n                [\n                  _c(\"el-col\", { attrs: { span: 24 } }, [\n                    _c(\n                      \"span\",\n                      { staticStyle: { color: \"red\", \"font-size\": \"13px\" } },\n                      [\n                        _vm._v(\n                          \"备注：批量导入员工功能，只会将上传的员工信息列表内的员工新增到系统内，不对原有员工信息做任何替换或修改\"\n                        ),\n                      ]\n                    ),\n                  ]),\n                ],\n                1\n              ),\n            ],\n            1\n          ),\n        ]\n      ),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}