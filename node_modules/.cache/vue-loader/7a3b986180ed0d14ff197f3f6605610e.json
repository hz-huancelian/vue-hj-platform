{"remainingRequest":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\webstormProjects\\vue-hj-platform\\src\\views\\system\\role\\roleList.vue?vue&type=style&index=0&id=957f5732&scoped=true&lang=scss&","dependencies":[{"path":"F:\\webstormProjects\\vue-hj-platform\\src\\views\\system\\role\\roleList.vue","mtime":1638252990000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.search_div {\n  >div {\n    &:nth-child(1){\n      margin-right: 10px;\n    }\n    display: inline-block;\n  }\n}\n\n.search_input {\n  width: 200px;\n  margin-bottom: 5px;\n}\n.search-right {\n  text-align: right;\n  padding-right: 25px;\n}\n",{"version":3,"sources":["roleList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"roleList.vue","sourceRoot":"src/views/system/role","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-form :model=\"searchForm\" :inline=\"true\">\n      <el-row>\n        <el-col :span=\"20\">\n          <el-form-item label=\"角色名称:\">\n            <el-input v-model=\"searchForm.roleName\" style=\"width:165px\" placeholder=\"角色名称\" />\n          </el-form-item>\n          <el-form-item>\n            <el-button type=\"primary\" class=\"iconfont icon-chaxun1\" @click=\"handleSearch\"> 查询</el-button>\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"4\" class=\"search-right\">\n          <el-button type=\"text\" icon=\"el-icon-plus\" @click=\"handleCreate\">新增</el-button>\n          <el-button type=\"text\" icon=\"el-icon-refresh\" @click=\"handleSearch\">刷新</el-button>\n        </el-col>\n      </el-row>\n    </el-form>\n    <div>\n      <el-table\n        stripe\n        :data=\"roleData\"\n        highlight-current-row\n        :header-cell-style=\"{background:'#ECF3FC'}\"\n        style=\"width: 100%\"\n      >\n        <template slot=\"empty\">\n          <div class=\"table_empty\">\n            <div class=\"empty_tips\">\n              <span>\n                暂无角色,\n              </span>\n              <el-button type=\"text\" size=\"small\" style=\"font-size:14px;\" @click=\"handleCreate\">新建用户角色</el-button>\n            </div>\n          </div>\n        </template>\n        <el-table-column type=\"index\" width=\"55\" label=\"序号\" align=\"center\" />\n        <el-table-column prop=\"roleName\" label=\"角色名称\" align=\"center\" />\n        <el-table-column prop=\"platformPositionName\" label=\"平台岗位\" align=\"center\" />\n        <el-table-column prop=\"roleDesc\" label=\"角色描述\" align=\"center\" />\n\n        <el-table-column fixed=\"right\" align=\"center\" label=\"操作\" width=\"180\">\n          <template slot-scope=\"scope\">\n            <el-button type=\"text\" @click=\"handleRelation(scope.row)\">关联菜单</el-button>\n            <div class=\"erc-divider-vertical\" />\n            <el-button type=\"text\" @click=\"handleUpdate(scope.row)\">编辑</el-button>\n            <div class=\"erc-divider-vertical\" />\n            <el-button type=\"text\" @click=\"handleDelete(scope.row.roleId)\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </div>\n    <div style=\"float: right\">\n      <pagination\n        v-show=\"total>0\"\n        :total=\"total\"\n        :page.sync=\"searchForm.pageNumber\"\n        :limit.sync=\"searchForm.pageSize\"\n        @pagination=\"handleSearch\"\n      />\n    </div>\n\n    <el-dialog :title=\"titleMap[roleDialogStatus]\" :visible.sync=\"roleDialogVisible\" width=\"50%\">\n      <div style=\"width: 550px;margin:0 auto;\">\n        <el-form ref=\"roleForm\" :model=\"roleForm\" :rules=\"roleRules\" label-width=\"130px\">\n          <el-form-item prop=\"roleName\" label=\"岗位:\">\n            <el-input v-model=\"roleForm.roleName\" placeholder=\"岗位\" maxlength=\"8\" show-word-limit style=\"width: 70%;\" />\n          </el-form-item>\n          <el-form-item prop=\"platformPositionId\" label=\"角色:\">\n            <el-select v-model=\"roleForm.platformPositionId\" placeholder=\"角色\" style=\"width: 70%;\">\n              <el-option\n                v-for=\"item in Object.keys(positionArray)\"\n                :key=\"item\"\n                :label=\"positionArray[item]\"\n                :value=\"item\"\n              />\n            </el-select>\n          </el-form-item>\n          <el-form-item prop=\"roleDesc\" label=\"岗位描述:\">\n            <el-input v-model=\"roleForm.roleDesc\" type=\"textarea\" :rows=\"2\" maxlength=\"50\" show-word-limit placeholder=\"岗位描述\" style=\"width: 70%;\" />\n          </el-form-item>\n        </el-form>\n      </div>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"roleDialogVisible=false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"confirmDialog\">确认</el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog title=\"分配菜单权限\" :visible.sync=\"permissionsVisible\">\n      <el-tree\n        ref=\"tree\"\n        :check-strictly=\"checkStrictly\"\n        :data=\"routesData\"\n        :props=\"defaultProps\"\n        show-checkbox\n        node-key=\"path\"\n      />\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"permissionsVisible=false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"confirmPermissions\">保存</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport * as roleServer from '@/api/role'\nimport Pagination from '@/components/Pagination' // Secondary package based on el-pagination\n\nimport { getDicKey } from '@/api/dict'\nimport { asyncRoutes } from '@/router'\nimport path from 'path'\nexport default {\n  name: 'UserList',\n  components: { Pagination },\n  data() {\n    return {\n      roleData: [],\n      searchForm: {\n        roleName: '',\n        pageNumber: 1,\n        pageSize: 10\n      },\n      total: 0,\n      titleMap: {\n        edit: '修改角色',\n        create: '新增角色'\n      },\n      roleForm: {\n        roleId: '',\n        roleName: '',\n        platformPositionId: '',\n        roleDesc: ''\n      },\n      roleRules: {\n        roleName: [{ required: true, message: '请录入角色名称', trigger: 'blur' }],\n        platformPositionId: [{ required: true, message: '请关联岗位', trigger: 'change' }]\n      },\n      roleDialogStatus: 'create',\n      roleDialogVisible: false,\n      permissionsVisible: false,\n      checkStrictly: false,\n      routes: [],\n      defaultProps: {\n        children: 'children',\n        label: 'title'\n      },\n      currentItem: {},\n      positionArray: []\n\n    }\n  },\n  computed: {\n    routesData() {\n      return this.routes\n    }\n  },\n  created() {\n    this.getDicKey('positionArray', 1003)\n    this.handleSearch()\n    this.getRoutes()\n  },\n  methods: {\n    getDicKey(type, code) {\n      getDicKey(code).then(result => {\n        if (result.code === 200) {\n          this[type] = result.result\n        }\n      })\n    },\n    getRoutes() {\n      const newRoutes = asyncRoutes\n      this.routes = this.generateRoutes(newRoutes)\n    },\n    handleSearch() {\n      roleServer.getRoleList(this.searchForm).then(res => {\n        if (res.code === 200) {\n          this.roleData = res.result.records || []\n          this.total = res.result.total\n        }\n      })\n    },\n    // 重置\n    handleCreate() {\n      this.clearForm()\n      this.roleDialogStatus = 'create'\n\n      if (this.$refs.roleForm !== undefined) {\n        this.$refs.roleForm.resetFields()\n      }\n      this.roleDialogVisible = true\n    },\n    handleUpdate(row) {\n      if (this.$refs.roleForm !== undefined) {\n        this.$refs.roleForm.resetFields()\n      }\n      this.roleForm.roleId = row.roleId\n      this.roleForm.roleName = row.roleName || ''\n      this.roleForm.platformPositionId = row.platformPositionId || ''\n      this.roleForm.roleDesc = row.roleDesc || ''\n      this.roleDialogStatus = 'edit'\n      this.roleDialogVisible = true\n    },\n    confirmDialog() {\n      if (this.roleDialogStatus === 'create') {\n        this.confirmCreate()\n      } else {\n        this.confirmUpdate()\n      }\n    },\n    confirmCreate() {\n      this.$refs.roleForm.validate(valid => {\n        if (valid) {\n          roleServer.addRoleInfo(this.roleForm).then(request => {\n            this.$notify({\n              title: '成功',\n              message: request.message,\n              type: 'success'\n            })\n            this.handleSearch()\n            this.roleDialogVisible = false\n            this.$refs.roleForm.resetFields()\n          }).catch(() => {})\n        } else {\n          return false\n        }\n      })\n    },\n    confirmUpdate() {\n      this.$refs.roleForm.validate(valid => {\n        if (valid) {\n          roleServer.updRoleInfo(this.roleForm).then(request => {\n            this.$notify({\n              title: '成功',\n              message: request.message,\n              type: 'success'\n            })\n            this.handleSearch()\n            this.roleDialogVisible = false\n            this.$refs.roleForm.resetFields()\n          }).catch(() => {})\n        } else {\n          return false\n        }\n      })\n    },\n    handleDelete(id) {\n      this.$confirm('确定删除?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        roleServer.delRolePerms(id).then(result => {\n          if (result.code === 200) {\n            this.$notify({\n              title: '成功',\n              message: result.message,\n              type: 'success'\n            })\n            this.handleSearch()\n          } else {\n            this.$notify({\n              title: '失败',\n              message: result.message,\n              type: 'error'\n            })\n          }\n        })\n      }).catch(() => {})\n    },\n    clearForm() {\n      this.roleForm = {\n        roleId: '',\n        roleName: '',\n        platformPositionId: '',\n        roleDesc: ''\n      }\n    },\n    handleRelation({ roleId, roleName, rolesDesc }) {\n      this.currentItem = { roleId, roleName, rolesDesc }\n      roleServer.findPermsByRoleId(roleId).then(res => {\n        if (res.code === 200) {\n          const result = res.result || []\n          this.$nextTick(() => {\n            this.$refs.tree.setCheckedKeys(result)\n          })\n        }\n      })\n      this.permissionsVisible = true\n    },\n    resetChecked() {\n      this.$refs.tree.setCheckedKeys([])\n    },\n    generateRoutes(routes, basePath = '/') {\n      const res = []\n      for (let route of routes) {\n        // skip some route\n        if (route.hidden) {\n          continue\n        }\n        const onlyOneShowingChild = this.onlyOneShowingChild(\n          route.children,\n          route\n        )\n        if (route.children && onlyOneShowingChild && !route.alwaysShow) {\n          route = onlyOneShowingChild\n        }\n        const data = {\n          path: path.resolve(basePath, route.path),\n          title: route.meta && route.meta.title\n        }\n        // recursive child routes\n        if (route.children) {\n          data.children = this.generateRoutes(route.children, data.path)\n        }\n        res.push(data)\n      }\n      return res\n    },\n\n    onlyOneShowingChild(children = [], parent) {\n      let onlyOneChild = null\n      const showingChildren = children.filter(item => !item.hidden)\n\n      // When there is only one child route, the child route is displayed by default\n      if (showingChildren.length === 1) {\n        onlyOneChild = showingChildren[0]\n        onlyOneChild.path = path.resolve(parent.path, onlyOneChild.path)\n        return onlyOneChild\n      }\n\n      // Show parent if there are no child route to display\n      if (showingChildren.length === 0) {\n        onlyOneChild = { ...parent, path: '', noShowingChildren: true }\n        return onlyOneChild\n      }\n\n      return false\n    },\n    confirmPermissions() {\n      const checkedKeys = this.$refs.tree.getCheckedKeys()\n\n      const params = {\n        roleId: this.currentItem.roleId,\n        permUrls: checkedKeys\n      }\n      roleServer.saveRolePerms(params).then(result => {\n        if (result.code === 200) {\n          this.$notify({\n            title: '成功',\n            message: result.message,\n            type: 'success'\n          })\n          this.resetChecked()\n          this.permissionsVisible = false\n        } else {\n          this.$notify({\n            title: '失败',\n            message: result.message,\n            type: 'error'\n          })\n        }\n      }).catch(() => {})\n    },\n    generateArr(routes) {\n      let data = []\n      routes.forEach(route => {\n        data.push(route)\n        if (route.children) {\n          const temp = this.generateArr(route.children)\n          if (temp.length > 0) {\n            data = [...data, ...temp]\n          }\n        }\n      })\n      return data\n    },\n    generateTree(routes, basePath = '/', checkedKeys) {\n      // 原始数据被修改 这里传入数据要深拷贝\n      const res = []\n      for (const route of routes) {\n        const routePath = path.resolve(basePath, route.path)\n\n        // recursive child routes\n        if (route.children) {\n          route.children = this.generateTree(\n            route.children,\n            routePath,\n            checkedKeys\n          )\n        }\n\n        if (\n          checkedKeys.includes(routePath) ||\n          (route.children && route.children.length >= 1)\n        ) {\n          res.push(route)\n        }\n      }\n      return res\n    }\n\n  }\n}\n</script>\n\n<style scoped lang=\"scss\" type=\"text/scss\">\n  .search_div {\n    >div {\n      &:nth-child(1){\n        margin-right: 10px;\n      }\n      display: inline-block;\n    }\n  }\n\n  .search_input {\n    width: 200px;\n    margin-bottom: 5px;\n  }\n  .search-right {\n    text-align: right;\n    padding-right: 25px;\n  }\n</style>\n"]}]}