{"remainingRequest":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\webstormProjects\\vue-hj-platform\\src\\views\\profile\\password.vue?vue&type=style&index=0&id=b2ec184a&scoped=true&lang=css&","dependencies":[{"path":"F:\\webstormProjects\\vue-hj-platform\\src\\views\\profile\\password.vue","mtime":1637213971000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.create-container {\n  width: 500px;\n  margin: 60px auto;\n}\n",{"version":3,"sources":["password.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoHA;AACA;AACA;AACA","file":"password.vue","sourceRoot":"src/views/profile","sourcesContent":["<template>\n  <div class=\"create-container\">\n    <el-form ref=\"userForm\" :model=\"userForm\" :rules=\"userRule\" label-width=\"100px\">\n      <el-form-item label=\"原密码:\" prop=\"oldPassword\">\n        <el-input v-model=\"userForm.oldPassword\" type=\"password\" maxlength=\"15\" />\n      </el-form-item>\n\n      <el-form-item label=\"新密码:\" prop=\"newPassword\">\n        <el-input v-model=\"userForm.newPassword\" type=\"password\" maxlength=\"15\" />\n      </el-form-item>\n\n      <el-form-item label=\"新密码确认:\" prop=\"confirmPasswordVis\">\n        <el-input v-model=\"userForm.confirmPasswordVis\" type=\"password\" maxlength=\"15\" />\n      </el-form-item>\n\n      <el-form-item style=\"text-align: center;margin-top: 50px\">\n        <el-button\n          class=\"iconfont icon-right_circle\"\n          type=\"primary\"\n          @click=\"onSubmit\"\n        >更新</el-button>\n        <el-button type=\"\" class=\"iconfont icon-fanhui\" @click=\"goBack\">返回</el-button>\n        <!-- <el-button class=\"iconfont icon-zhongzhi1\" @click=\"resetForm('userForm')\">重置</el-button> -->\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n<script>\nimport { modifyPassword } from '@/api/organ'\nexport default {\n  components: {},\n  data() {\n    var validatorPassword = (rule, value, callback) => {\n      if (!value) {\n        callback(new Error('录入信息不能为空'))\n      } else if (value.length < 6) {\n        callback(new Error('密码固定长度不能低于6位'))\n      } else {\n        callback()\n      }\n    }\n    var validatorConfirm = (rule, value, callback) => {\n      if (!value) {\n        callback(new Error('录入信息不能为空'))\n      } else if (this.userForm.newPassword !== value) {\n        callback(new Error('两次密码不相同!'))\n      } else {\n        callback()\n      }\n    }\n    return {\n      userForm: {\n        userId: this.$store.getters.userInfo.userId,\n        oldPassword: '',\n        newPassword: '',\n        confirmPasswordVis: ''\n      },\n      userRule: {\n        oldPassword: [\n          { required: true, validator: validatorPassword, trigger: 'blur' }\n        ],\n        newPassword: [\n          { required: true, validator: validatorPassword, trigger: 'blur' }\n        ],\n        confirmPasswordVis: [\n          { required: true, validator: validatorConfirm, trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  computed: {\n\n  },\n  created() {\n\n  },\n  methods: {\n\n    onSubmit() {\n      this.$refs.userForm.validate(valid => {\n        if (valid) {\n          const params = {\n            ...this.userForm\n          }\n          this.$delete(params, 'confirmPasswordVis')\n          modifyPassword(params).then(request => {\n            if (request.code === 200) {\n              this.$notify({\n                title: '成功',\n                message: request.message,\n                type: 'success'\n              })\n              this.$router.back()\n            } else {\n              this.$notify({\n                title: '失败',\n                message: request.message,\n                type: 'error'\n              })\n            }\n          }).catch(() => {})\n        } else {\n          return false\n        }\n      })\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields()\n    },\n    goBack() {\n      this.$router.back()\n    }\n  }\n}\n</script>\n<style scoped>\n.create-container {\n  width: 500px;\n  margin: 60px auto;\n}\n</style>\n"]}]}