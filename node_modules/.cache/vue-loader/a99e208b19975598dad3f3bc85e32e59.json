{"remainingRequest":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\webstormProjects\\vue-hj-platform\\src\\views\\dashboard\\director\\components\\BarChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\webstormProjects\\vue-hj-platform\\src\\views\\dashboard\\director\\components\\BarChart.vue","mtime":1639377280000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n\nimport echarts from 'echarts'\nrequire('echarts/theme/macarons') // echarts theme\n\nexport default {\n  props: {\n    className: {\n      type: String,\n      default: 'chart'\n    },\n    width: {\n      type: String,\n      default: '100%'\n    },\n    height: {\n      type: String,\n      default: '260px'\n    },\n    chartData: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      chart: null\n    }\n  },\n  watch: {\n    chartData: {\n      deep: true,\n      handler(val) {\n        this.setOptions(val)\n      }\n    }\n  },\n  mounted() {\n    this.$nextTick(() => {\n      this.initChart()\n    })\n  },\n  beforeDestroy() {\n    if (!this.chart) {\n      return\n    }\n    this.chart.dispose()\n    this.chart = null\n  },\n  methods: {\n    initChart() {\n      this.chart = echarts.init(this.$el, 'macarons')\n      this.setOptions(this.chartData)\n    },\n    setOptions({ xNameData, title, xValData } = {}) {\n      const markArr = []\n      xValData.forEach(function(v, i) {\n        markArr.push({\n          value: v,\n          xAxis: i,\n          yAxis: v\n        })\n      })\n\n      this.chart.setOption({\n        title: {\n          text: title\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross',\n            crossStyle: {\n              color: '#999'\n            }\n          }\n        },\n        xAxis: [\n          {\n            type: 'category',\n            data: xNameData,\n            axisPointer: {\n              type: 'shadow'\n            }\n          }\n        ],\n        grid: {\n          containLabel: true,\n          top: 15,\n          left: 0,\n          right: 10,\n          bottom: 16\n        },\n        yAxis: [\n          {\n            type: 'value',\n            min: 0,\n            interval: 10000,\n            axisLabel: {\n              formatter: '{value}'\n            }\n          }\n        ],\n        series: [\n          {\n            data: xValData,\n            type: 'bar',\n            smooth: true,\n            barWidth: 28,\n            markPoint: {\n              itemStyle: {\n                color: '#7B73FE'\n              },\n              data: markArr\n            },\n            itemStyle: {\n              color: '#7B73FE'\n            }\n          }\n        ]\n      })\n    }\n  }\n}\n",{"version":3,"sources":["BarChart.vue"],"names":[],"mappings":";;;;;AAKA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BarChart.vue","sourceRoot":"src/views/dashboard/director/components","sourcesContent":["<template>\n  <div :class=\"className\" :style=\"{height:height,width:width}\" />\n</template>\n\n<script>\nimport echarts from 'echarts'\nrequire('echarts/theme/macarons') // echarts theme\n\nexport default {\n  props: {\n    className: {\n      type: String,\n      default: 'chart'\n    },\n    width: {\n      type: String,\n      default: '100%'\n    },\n    height: {\n      type: String,\n      default: '260px'\n    },\n    chartData: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      chart: null\n    }\n  },\n  watch: {\n    chartData: {\n      deep: true,\n      handler(val) {\n        this.setOptions(val)\n      }\n    }\n  },\n  mounted() {\n    this.$nextTick(() => {\n      this.initChart()\n    })\n  },\n  beforeDestroy() {\n    if (!this.chart) {\n      return\n    }\n    this.chart.dispose()\n    this.chart = null\n  },\n  methods: {\n    initChart() {\n      this.chart = echarts.init(this.$el, 'macarons')\n      this.setOptions(this.chartData)\n    },\n    setOptions({ xNameData, title, xValData } = {}) {\n      const markArr = []\n      xValData.forEach(function(v, i) {\n        markArr.push({\n          value: v,\n          xAxis: i,\n          yAxis: v\n        })\n      })\n\n      this.chart.setOption({\n        title: {\n          text: title\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross',\n            crossStyle: {\n              color: '#999'\n            }\n          }\n        },\n        xAxis: [\n          {\n            type: 'category',\n            data: xNameData,\n            axisPointer: {\n              type: 'shadow'\n            }\n          }\n        ],\n        grid: {\n          containLabel: true,\n          top: 15,\n          left: 0,\n          right: 10,\n          bottom: 16\n        },\n        yAxis: [\n          {\n            type: 'value',\n            min: 0,\n            interval: 10000,\n            axisLabel: {\n              formatter: '{value}'\n            }\n          }\n        ],\n        series: [\n          {\n            data: xValData,\n            type: 'bar',\n            smooth: true,\n            barWidth: 28,\n            markPoint: {\n              itemStyle: {\n                color: '#7B73FE'\n              },\n              data: markArr\n            },\n            itemStyle: {\n              color: '#7B73FE'\n            }\n          }\n        ]\n      })\n    }\n  }\n}\n</script>\n\n"]}]}