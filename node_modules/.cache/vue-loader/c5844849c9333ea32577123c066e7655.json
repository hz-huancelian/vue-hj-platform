{"remainingRequest":"F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\webstormProjectsJiu\\vue-hj-platform\\src\\views\\system\\position\\index.vue?vue&type=style&index=0&id=7ee996bc&scoped=true&lang=scss&","dependencies":[{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\src\\views\\system\\position\\index.vue","mtime":1638252990000},{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.search_div {\n  >div {\n    &:nth-child(1){\n      margin-right: 10px;\n    }\n    display: inline-block;\n  }\n}\n\n.search_input {\n  width: 200px;\n  margin-bottom: 5px;\n}\n.search-right {\n  text-align: right;\n  padding-right: 25px;\n}\n.info-container {\n  padding: 0;\n  margin: 0;\n  height: auto;\n  width: 100%;\n}\n.card-left {\n  width: 100%;\n  min-height: 600px;\n}\n.card-right {\n  width: 100%;\n  min-height: 600px;\n}\n.card-right {\n  right: 0px;\n  width: 100%;\n  height: 100%;\n}\n.filter-tree {\n  margin-top: 15px;\n  line-height: 10px;;\n}\n.custom-tree-node {\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 14px;\n  padding-right: 8px;\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+VA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/system/position","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-row :gutter=\"10\">\n      <el-col :span=\"7\">\n        <el-card class=\"card-left\" shadow=\"never\">\n          <el-input\n            v-model=\"filterText\"\n            placeholder=\"输入名称\"\n          />\n          <el-tree\n            ref=\"tree\"\n            class=\"filter-tree\"\n            :data=\"positionTreeData\"\n            :props=\"defaultProps\"\n            highlight-current\n            default-expand-all\n            :filter-node-method=\"filterNode\"\n            :expand-on-click-node=\"false\"\n            @node-click=\"onSelectDepart\"\n          />\n        </el-card>\n      </el-col>\n      <el-col :span=\"17\">\n        <el-card class=\"card-right\" shadow=\"never\">\n          <el-form :inline=\"true\">\n            <el-row>\n              <el-col :span=\"24\" class=\"search-right\">\n                <el-button v-if=\"currentPosId && currentPosId !== '-1001'\" type=\"text\" icon=\"el-icon-plus\" @click=\"handleCreate\">新增</el-button>\n                <el-button type=\"text\" icon=\"el-icon-refresh\" @click=\"handleSearch\">刷新</el-button>\n              </el-col>\n            </el-row>\n          </el-form>\n          <div>\n            <el-table\n              stripe\n              :data=\"positionData\"\n              highlight-current-row\n              :header-cell-style=\"{background:'#ECF3FC'}\"\n              style=\"width: 100%\"\n            >\n              <template slot=\"empty\">\n                <div class=\"table_empty\">\n                  <div class=\"empty_tips\">\n                    <span>\n                      暂无岗位\n                    </span>\n                  </div>\n                </div>\n              </template>\n              <el-table-column type=\"index\" width=\"50\" label=\"序号\" align=\"center\" />\n              <el-table-column prop=\"positionName\" label=\"岗位名称\" align=\"center\" />\n              <el-table-column prop=\"roleName\" label=\"关联角色\" align=\"center\" />\n              <el-table-column prop=\"positionDesc\" label=\"岗位描述\" align=\"center\" />\n              <el-table-column prop=\"parentName\" label=\"上级岗位\" align=\"center\" />\n              <el-table-column fixed=\"right\" align=\"center\" width=\"170px\" label=\"操作\">\n                <template slot-scope=\"scope\">\n                  <el-button type=\"text\" @click=\"handleRelation(scope.row)\">关联角色</el-button>\n                  <div class=\"erc-divider-vertical\" />\n                  <el-button type=\"text\" @click=\"handleUpdate(scope.row)\">编辑</el-button>\n                  <div class=\"erc-divider-vertical\" />\n                  <el-button type=\"text\" @click=\"handleDelete(scope.row.id)\">删除</el-button>\n                </template>\n              </el-table-column>\n            </el-table>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n    <el-dialog :title=\"titleMap[positionDialogStatus]\" :visible.sync=\"positionVisible\" center>\n      <div style=\"width: 400px;margin:0 auto;\">\n        <el-form ref=\"positionForm\" :model=\"positionForm\" :rules=\"positionRules\" label-width=\"90px\">\n          <el-form-item prop=\"positionName\" label=\"部门名称:\">\n            <el-input v-model=\"positionForm.positionName\" placeholder=\"请录入部门名称\" />\n          </el-form-item>\n          <el-form-item label=\"部门描述:\">\n            <el-input v-model=\"positionForm.positionDesc\" type=\"textarea\" :rows=\"2\" maxlength=\"50\" show-word-limit placeholder=\"请录入部门描述\" />\n          </el-form-item>\n        </el-form>\n      </div>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"positionVisible=false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"confirmDepart\">保存</el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog title=\"关联角色\" :visible.sync=\"roleVisible\" center>\n      <div style=\"width: 500px;margin:0 auto;\">\n        <el-form :model=\"posRelationForm\" label-width=\"100px\">\n          <el-form-item label=\"角色关联:\">\n            <el-select v-model=\"posRelationForm.roleIds\" clearable multiple placeholder=\"请选择角色\" style=\"width:280px\">\n              <el-option\n                v-for=\"(item, index) in roleRelations\"\n                :key=\"index\"\n                :value=\"item.roleId\"\n                :label=\"item.roleName\"\n              />\n            </el-select>\n          </el-form-item>\n        </el-form>\n      </div>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"roleVisible=false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"confirmRelation\">保存</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport * as positionServer from '@/api/dept'\nimport * as roleServer from '@/api/role'\nexport default {\n  name: 'PositionList',\n  data() {\n    return {\n      positionTreeData: [],\n      defaultProps: {\n        children: 'children',\n        label: 'positionName',\n        id: 'id'\n      },\n      titleMap: {\n        edit: '修改岗位',\n        create: '新增岗位'\n      },\n      positionDialogStatus: 'create',\n      currentPosId: '',\n      currentPosName: '',\n      positionData: [],\n      filterText: '',\n      positionVisible: false,\n      positionForm: {\n        parentPositionId: '',\n        positionId: '',\n        positionName: '',\n        positionDesc: ''\n      },\n      positionRules: {\n        positionName: [{ required: true, message: '岗位名称', trigger: 'blur' }]\n      },\n      currentTreeItem: {},\n      positionName: '',\n      currentNode: {},\n      currentResolve: {},\n      roleVisible: false,\n      posRelationForm: {\n        positionId: '',\n        roleIds: []\n      },\n      roleRelations: []\n\n    }\n  },\n  watch: {\n    filterText(val) {\n      this.$refs.tree.filter(val)\n    }\n  },\n  created() {\n    this.findPositionTreeList()\n    this.getRoleList()\n  },\n  methods: {\n    findPositionTreeList() {\n      this.positionTreeData = []\n      positionServer.findPositionTreeList().then(res => {\n        const resObj = res.result || {}\n        this.positionTreeData.push(resObj)\n      })\n    },\n    filterNode(value, data) {\n      if (!value) return true\n\n      return data.positionName.indexOf(value) !== -1\n    },\n    getRoleList() {\n      roleServer.findRoleList().then(res => {\n        this.roleRelations = res.result || []\n      })\n    },\n    loadNode(node, resolve) {\n      this.currentNode = node\n      this.currentResolve = resolve\n      const obj = node.data\n      this.currentPosId = obj.id\n      this.currentPosName = obj.positionName\n      if (node.level === 0) {\n        return resolve([{\n          id: -1001,\n          positionName: this.$store.getters.userInfo.organName || '当前机构',\n          children: []\n        }])\n      }\n      if (this.currentPosId) {\n        this.positionData = []\n        positionServer.findSubPositionListByParentId(this.currentPosId).then(res => {\n          if (res.code === 200 && res.result) {\n            this.positionData = res.result.map(i => {\n              return { ...i, parentName: this.currentPosName }\n            }) || []\n            resolve(res.result)\n          } else {\n            resolve([])\n          }\n        }).catch(() => {\n          resolve([])\n        })\n      } else {\n        resolve([])\n      }\n    },\n    addNode() {\n      this.currentNode.children = []\n      this.loadNode(this.currentNode, this.currentResolve)\n    },\n    onSelectDepart(even) {\n      if (even.id === this.currentPosId) {\n        return\n      }\n      this.currentPosId = even.id\n      this.currentPosName = even.positionName\n      this.$nextTick(() => {\n        this.handleSearch()\n      })\n    },\n    confirmDepart() {\n      this.$refs.positionForm.validate(valid => {\n        if (valid) {\n          if (this.positionDialogStatus === 'create') {\n            const params = {\n              parentPositionId: this.positionForm.parentPositionId,\n              positionName: this.positionForm.positionName,\n              positionDesc: this.positionForm.positionDesc\n            }\n            positionServer.saveDeptPositions(params).then(res => {\n              if (res.code === 200) {\n                this.handleSearch()\n                this.findPositionTreeList()\n                this.positionVisible = false\n              }\n            })\n          } else {\n            const params = {\n              positionId: this.positionForm.positionId,\n              positionName: this.positionForm.positionName,\n              positionDesc: this.positionForm.positionDesc\n            }\n            positionServer.updateDeptPositions(params).then(res => {\n              if (res.code === 200) {\n                this.handleSearch()\n                this.findPositionTreeList()\n                this.positionVisible = false\n              }\n            })\n          }\n        }\n      })\n    },\n    handleSearch() {\n      this.positionData = []\n      positionServer.findSubPositionListByParentId(this.currentPosId).then(res => {\n        if (res.code === 200 && res.result) {\n          this.positionData = res.result.map(i => {\n            return { ...i, parentName: this.currentPosName }\n          }) || []\n        }\n      }).catch(() => {\n      })\n    },\n    // 重置\n    handleCreate() {\n      this.clearForm()\n      this.positionForm.parentPositionId = this.currentPosId\n      this.positionDialogStatus = 'create'\n      this.positionVisible = true\n    },\n    handleUpdate(row) {\n      this.clearForm()\n      this.positionForm.positionId = row.id\n      this.positionForm.positionName = row.positionName || ''\n      this.positionForm.positionDesc = row.positionDesc || ''\n      this.positionDialogStatus = 'edit'\n      this.positionVisible = true\n    },\n    handleDelete(id) {\n      this.$confirm('确定删除?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        positionServer.delPositionById(id).then(result => {\n          if (result.code === 200) {\n            this.$notify({\n              title: '成功',\n              message: result.message,\n              type: 'success'\n            })\n            this.handleSearch()\n            this.findPositionTreeList()\n          } else {\n            this.$notify({\n              title: '失败',\n              message: result.message,\n              type: 'error'\n            })\n          }\n        })\n      }).catch(() => {})\n    },\n    handleRelation(row) {\n      this.posRelationForm.positionId = row.id\n      this.posRelationForm.roleIds = row.roleIds\n      this.roleVisible = true\n    },\n    confirmRelation() {\n      if (this.posRelationForm.roleIds && this.posRelationForm.roleIds.length > 0) {\n        positionServer.savePositionRoles(this.posRelationForm).then(result => {\n          if (result.code === 200) {\n            this.$notify({\n              title: '成功',\n              message: result.message,\n              type: 'success'\n            })\n            this.handleSearch()\n            this.roleVisible = false\n          } else {\n            this.$notify({\n              title: '失败',\n              message: result.message,\n              type: 'error'\n            })\n          }\n        })\n      } else {\n        this.$message.error('角色选择不能为空')\n      }\n    },\n    clearForm() {\n      this.positionForm = {\n        parentPositionId: '',\n        positionId: '',\n        positionName: '',\n        positionDesc: ''\n      }\n    }\n\n  }\n}\n</script>\n\n<style scoped lang=\"scss\" type=\"text/scss\">\n  .search_div {\n    >div {\n      &:nth-child(1){\n        margin-right: 10px;\n      }\n      display: inline-block;\n    }\n  }\n\n  .search_input {\n    width: 200px;\n    margin-bottom: 5px;\n  }\n  .search-right {\n    text-align: right;\n    padding-right: 25px;\n  }\n  .info-container {\n    padding: 0;\n    margin: 0;\n    height: auto;\n    width: 100%;\n  }\n  .card-left {\n    width: 100%;\n    min-height: 600px;\n  }\n  .card-right {\n    width: 100%;\n    min-height: 600px;\n  }\n  .card-right {\n    right: 0px;\n    width: 100%;\n    height: 100%;\n  }\n  .filter-tree {\n    margin-top: 15px;\n    line-height: 10px;;\n  }\n  .custom-tree-node {\n    flex: 1;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    font-size: 14px;\n    padding-right: 8px;\n  }\n</style>\n"]}]}