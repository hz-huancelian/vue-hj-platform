{"remainingRequest":"F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\webstormProjectsJiu\\vue-hj-platform\\src\\views\\system\\dept\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\src\\views\\system\\dept\\index.vue","mtime":1637571778000},{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\webstormProjectsJiu\\vue-hj-platform\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { listDept, getDept, delDept, addDept, updateDept, listDeptExcludeChild } from '@/api/system/dept'\nimport Treeselect from '@riophae/vue-treeselect'\nimport '@riophae/vue-treeselect/dist/vue-treeselect.css'\n\nexport default {\n  name: 'Dept',\n  components: { Treeselect },\n  data() {\n    return {\n      // 遮罩层\n      loading: true,\n      // 显示搜索条件\n      showSearch: true,\n      // 表格树数据\n      deptList: [],\n      // 部门树选项\n      deptOptions: [],\n      // 弹出层标题\n      title: '',\n      // 是否显示弹出层\n      open: false,\n      // 状态数据字典\n      statusOptions: [],\n      // 查询参数\n      queryParams: {\n        deptName: '',\n        status: ''\n      },\n      // 表单参数\n      form: {},\n      // 表单校验\n      rules: {\n        parentId: [\n          { required: true, message: '上级部门不能为空', trigger: 'blur' }\n        ],\n        deptName: [\n          { required: true, message: '部门名称不能为空', trigger: 'blur' }\n        ],\n        orderNum: [\n          { required: true, message: '显示排序不能为空', trigger: 'blur' }\n        ]\n        // email: [\n        //   {\n        //     type: 'email',\n        //     message: \"'请输入正确的邮箱地址\",\n        //     trigger: ['blur', 'change']\n        //   }\n        // ],\n        // phone: [\n        //   {\n        //     pattern: /^1[3|4|5|6|7|8|9][0-9]\\d{8}$/,\n        //     message: '请输入正确的手机号码',\n        //     trigger: 'blur'\n        //   }\n        // ]\n      }\n    }\n  },\n  created() {\n    this.getList()\n  },\n  methods: {\n    /** 查询部门列表 */\n    getList() {\n      this.loading = true\n      listDept(this.queryParams).then(response => {\n        this.deptList = this.handleTree(response.result, 'deptId')\n        this.loading = false\n      })\n    },\n    /** 转换部门数据结构 */\n    normalizer(node) {\n      if (node.children && !node.children.length) {\n        delete node.children\n      }\n      return {\n        id: node.deptId,\n        label: node.deptName,\n        children: node.children\n      }\n    },\n    // 字典状态字典翻译\n    statusFormat(row, column) {\n      if (row.status === '0') {\n        return '正常'\n      } else {\n        return '停用'\n      }\n    },\n    // 取消按钮\n    cancel() {\n      this.open = false\n      this.reset()\n    },\n    // 表单重置\n    reset() {\n      this.form = {\n        deptId: undefined,\n        parentId: undefined,\n        deptName: undefined,\n        orderNum: 0,\n        leader: undefined,\n        // phone: undefined,\n        status: '0'\n      }\n      this.resetForm('form')\n    },\n    /** 搜索按钮操作 */\n    handleQuery() {\n      this.getList()\n    },\n    /** 重置按钮操作 */\n    resetQuery() {\n      this.resetForm('queryForm')\n      this.handleQuery()\n    },\n    /** 新增按钮操作 */\n    handleAdd(row) {\n      this.reset()\n      if (row !== undefined) {\n        this.form.parentId = row.deptId\n      }\n      this.open = true\n      this.title = '添加部门'\n      listDept({ deptName: '', status: '' }).then(response => {\n        this.deptOptions = this.handleTree(response.result, 'deptId')\n      })\n    },\n    /** 修改按钮操作 */\n    handleUpdate(row) {\n      this.reset()\n      getDept(row.deptId).then(response => {\n        this.form = response.result\n        this.open = true\n        this.title = '修改部门'\n      })\n      if (row.parentId !== 0 && row.parentId !== '0') {\n        listDept({ deptName: '', status: '' }).then(response => {\n          this.deptOptions = this.handleTree(response.result, 'deptId')\n        })\n      }\n      // listDeptExcludeChild(row.deptId).then(response => {\n      //   this.deptOptions = this.handleTree(response.data, 'deptId')\n      // })\n    },\n    /** 提交按钮 */\n    submitForm: function() {\n      this.$refs['form'].validate(valid => {\n        if (valid) {\n          if (this.form.deptId !== undefined) {\n            updateDept(this.form).then(response => {\n              this.msgSuccess('修改成功')\n              this.open = false\n              this.getList()\n            })\n          } else {\n            addDept(this.form).then(response => {\n              this.msgSuccess('新增成功')\n              this.open = false\n              this.getList()\n            })\n          }\n        }\n      })\n    },\n    /** 删除按钮操作 */\n    handleDelete(row) {\n      this.$confirm('是否确认删除名称为\"' + row.deptName + '\"的数据项?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function() {\n        return delDept(row.deptId)\n      }).then(() => {\n        this.getList()\n        this.msgSuccess('删除成功')\n      }).catch(() => {})\n    }\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"index.vue","sourceRoot":"src/views/system/dept","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-form v-show=\"showSearch\" ref=\"queryForm\" :model=\"queryParams\" :inline=\"true\">\n      <el-form-item label=\"部门名称\" prop=\"deptName\">\n        <el-input\n          v-model=\"queryParams.deptName\"\n          placeholder=\"请输入部门名称\"\n          clearable\n          style=\"width: 180px;\"\n          @keyup.enter.native=\"handleQuery\"\n        />\n      </el-form-item>\n      <el-form-item label=\"状态\" prop=\"status\">\n        <el-select\n          v-model=\"queryParams.status\"\n          placeholder=\"部门状态\"\n          style=\"width: 180px;\"\n          clearable\n        >\n          <el-option label=\"正常\" value=\"0\" />\n          <el-option label=\"停用\" value=\"1\" />\n        </el-select>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" icon=\"el-icon-search\" size=\"small\" @click=\"handleQuery\">搜索</el-button>\n        <el-button icon=\"el-icon-refresh\" size=\"small\" @click=\"resetQuery\">重置</el-button>\n      </el-form-item>\n    </el-form>\n\n    <el-row :gutter=\"10\" class=\"mb8\">\n      <el-col :span=\"1.5\">\n        <el-button\n          v-hasPermi=\"['system:dept:add']\"\n          type=\"primary\"\n          plain\n          icon=\"el-icon-plus\"\n          size=\"small\"\n          @click=\"handleAdd\"\n        >新增</el-button>\n      </el-col>\n      <right-toolbar :show-search.sync=\"showSearch\" @queryTable=\"getList\" />\n    </el-row>\n\n    <el-table\n      v-loading=\"loading\"\n      :data=\"deptList\"\n      row-key=\"deptId\"\n      default-expand-all\n      :tree-props=\"{children: 'children', hasChildren: 'hasChildren'}\"\n    >\n      <el-table-column prop=\"deptName\" label=\"部门名称\" width=\"260\" />\n      <!-- <el-table-column prop=\"orderNum\" label=\"排序\" width=\"200\" /> -->\n      <el-table-column key=\"status\" label=\"状态\" align=\"center\">\n        <template slot-scope=\"scope\">\n          <el-tag :type=\"scope.row.status==='0'?'success':'danger'\">{{ scope.row.status==='0'?'正常':'停用' }}</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"创建日期\" align=\"center\" prop=\"createTime\" width=\"200\">\n        <template slot-scope=\"scope\">\n          <span>{{ parseTime(scope.row.createTime, '{y}-{m}-{d}') }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\" align=\"center\" class-name=\"small-padding fixed-width\">\n        <template slot-scope=\"scope\">\n          <el-button\n            v-if=\"scope.row.parentId != 0\"\n            v-hasPermi=\"['system:dept:edit']\"\n            size=\"mini\"\n            type=\"text\"\n            icon=\"el-icon-edit\"\n            @click=\"handleUpdate(scope.row)\"\n          >修改</el-button>\n          <el-button\n            v-hasPermi=\"['system:dept:add']\"\n            size=\"mini\"\n            type=\"text\"\n            icon=\"el-icon-plus\"\n            @click=\"handleAdd(scope.row)\"\n          >新增</el-button>\n          <el-button\n            v-if=\"scope.row.parentId != 0\"\n            v-hasPermi=\"['system:dept:remove']\"\n            size=\"mini\"\n            type=\"text\"\n            icon=\"el-icon-delete\"\n            @click=\"handleDelete(scope.row)\"\n          >删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <!-- 添加或修改部门对话框 -->\n    <el-dialog :title=\"title\" :visible.sync=\"open\" width=\"620px\" append-to-body>\n      <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"80px\">\n        <el-row :gutter=\"20\">\n          <el-col v-if=\"form.parentId !== 0 && form.parentId !== '0' \" :span=\"24\">\n            <el-form-item label=\"上级部门\" prop=\"parentId\">\n              <treeselect v-model=\"form.parentId\" :options=\"deptOptions\" :normalizer=\"normalizer\" placeholder=\"选择上级部门\" />\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"部门名称\" prop=\"deptName\">\n              <el-input v-model=\"form.deptName\" placeholder=\"请输入部门名称\" />\n            </el-form-item>\n          </el-col>\n          <!-- <el-col :span=\"12\">\n            <el-form-item label=\"显示排序\" prop=\"orderNum\">\n              <el-input-number v-model=\"form.orderNum\" controls-position=\"right\" :min=\"0\" />\n            </el-form-item>\n          </el-col> -->\n          <el-col :span=\"12\">\n            <el-form-item label=\"负责人\" prop=\"leader\">\n              <el-input v-model=\"form.leader\" placeholder=\"请输入负责人\" maxlength=\"20\" />\n            </el-form-item>\n          </el-col>\n          <!-- <el-col :span=\"12\">\n            <el-form-item label=\"联系电话\" prop=\"phone\">\n              <el-input v-model=\"form.phone\" placeholder=\"请输入联系电话\" maxlength=\"11\" />\n            </el-form-item>\n          </el-col> -->\n          <!-- <el-col :span=\"12\">\n            <el-form-item label=\"邮箱\" prop=\"email\">\n              <el-input v-model=\"form.email\" placeholder=\"请输入邮箱\" maxlength=\"50\" />\n            </el-form-item>\n          </el-col> -->\n          <el-col :span=\"12\">\n            <el-form-item label=\"部门状态\">\n              <el-radio-group v-model=\"form.status\">\n                <el-radio label=\"0\">正常</el-radio>\n                <el-radio label=\"1\">停用</el-radio>\n              </el-radio-group>\n            </el-form-item>\n          </el-col>\n        </el-row>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\n        <el-button @click=\"cancel\">取 消</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { listDept, getDept, delDept, addDept, updateDept, listDeptExcludeChild } from '@/api/system/dept'\nimport Treeselect from '@riophae/vue-treeselect'\nimport '@riophae/vue-treeselect/dist/vue-treeselect.css'\n\nexport default {\n  name: 'Dept',\n  components: { Treeselect },\n  data() {\n    return {\n      // 遮罩层\n      loading: true,\n      // 显示搜索条件\n      showSearch: true,\n      // 表格树数据\n      deptList: [],\n      // 部门树选项\n      deptOptions: [],\n      // 弹出层标题\n      title: '',\n      // 是否显示弹出层\n      open: false,\n      // 状态数据字典\n      statusOptions: [],\n      // 查询参数\n      queryParams: {\n        deptName: '',\n        status: ''\n      },\n      // 表单参数\n      form: {},\n      // 表单校验\n      rules: {\n        parentId: [\n          { required: true, message: '上级部门不能为空', trigger: 'blur' }\n        ],\n        deptName: [\n          { required: true, message: '部门名称不能为空', trigger: 'blur' }\n        ],\n        orderNum: [\n          { required: true, message: '显示排序不能为空', trigger: 'blur' }\n        ]\n        // email: [\n        //   {\n        //     type: 'email',\n        //     message: \"'请输入正确的邮箱地址\",\n        //     trigger: ['blur', 'change']\n        //   }\n        // ],\n        // phone: [\n        //   {\n        //     pattern: /^1[3|4|5|6|7|8|9][0-9]\\d{8}$/,\n        //     message: '请输入正确的手机号码',\n        //     trigger: 'blur'\n        //   }\n        // ]\n      }\n    }\n  },\n  created() {\n    this.getList()\n  },\n  methods: {\n    /** 查询部门列表 */\n    getList() {\n      this.loading = true\n      listDept(this.queryParams).then(response => {\n        this.deptList = this.handleTree(response.result, 'deptId')\n        this.loading = false\n      })\n    },\n    /** 转换部门数据结构 */\n    normalizer(node) {\n      if (node.children && !node.children.length) {\n        delete node.children\n      }\n      return {\n        id: node.deptId,\n        label: node.deptName,\n        children: node.children\n      }\n    },\n    // 字典状态字典翻译\n    statusFormat(row, column) {\n      if (row.status === '0') {\n        return '正常'\n      } else {\n        return '停用'\n      }\n    },\n    // 取消按钮\n    cancel() {\n      this.open = false\n      this.reset()\n    },\n    // 表单重置\n    reset() {\n      this.form = {\n        deptId: undefined,\n        parentId: undefined,\n        deptName: undefined,\n        orderNum: 0,\n        leader: undefined,\n        // phone: undefined,\n        status: '0'\n      }\n      this.resetForm('form')\n    },\n    /** 搜索按钮操作 */\n    handleQuery() {\n      this.getList()\n    },\n    /** 重置按钮操作 */\n    resetQuery() {\n      this.resetForm('queryForm')\n      this.handleQuery()\n    },\n    /** 新增按钮操作 */\n    handleAdd(row) {\n      this.reset()\n      if (row !== undefined) {\n        this.form.parentId = row.deptId\n      }\n      this.open = true\n      this.title = '添加部门'\n      listDept({ deptName: '', status: '' }).then(response => {\n        this.deptOptions = this.handleTree(response.result, 'deptId')\n      })\n    },\n    /** 修改按钮操作 */\n    handleUpdate(row) {\n      this.reset()\n      getDept(row.deptId).then(response => {\n        this.form = response.result\n        this.open = true\n        this.title = '修改部门'\n      })\n      if (row.parentId !== 0 && row.parentId !== '0') {\n        listDept({ deptName: '', status: '' }).then(response => {\n          this.deptOptions = this.handleTree(response.result, 'deptId')\n        })\n      }\n      // listDeptExcludeChild(row.deptId).then(response => {\n      //   this.deptOptions = this.handleTree(response.data, 'deptId')\n      // })\n    },\n    /** 提交按钮 */\n    submitForm: function() {\n      this.$refs['form'].validate(valid => {\n        if (valid) {\n          if (this.form.deptId !== undefined) {\n            updateDept(this.form).then(response => {\n              this.msgSuccess('修改成功')\n              this.open = false\n              this.getList()\n            })\n          } else {\n            addDept(this.form).then(response => {\n              this.msgSuccess('新增成功')\n              this.open = false\n              this.getList()\n            })\n          }\n        }\n      })\n    },\n    /** 删除按钮操作 */\n    handleDelete(row) {\n      this.$confirm('是否确认删除名称为\"' + row.deptName + '\"的数据项?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function() {\n        return delDept(row.deptId)\n      }).then(() => {\n        this.getList()\n        this.msgSuccess('删除成功')\n      }).catch(() => {})\n    }\n  }\n}\n</script>\n"]}]}