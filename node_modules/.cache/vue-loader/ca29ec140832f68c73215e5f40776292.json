{"remainingRequest":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\webstormProjects\\vue-hj-platform\\src\\views\\system\\user\\userList.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\webstormProjects\\vue-hj-platform\\src\\views\\system\\user\\userList.vue","mtime":1647225793000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as userServer from '@/api/user'\nimport * as deptServer from '@/api/dept'\nimport Pagination from '@/components/Pagination' // Secondary package based on el-pagination\nimport { validPhone } from '@/utils/validate'\nconst ACCOUNT_STATUS = {\n  '0': '有效',\n  '1': '无效'\n}\nexport default {\n  name: 'UserList',\n  components: { Pagination },\n  data() {\n    const validatePhone = (rule, value, callback) => {\n      if (value && value.length > 0) {\n        if (validPhone(value)) {\n          callback()\n        } else {\n          callback(new Error('输入正确的电话号码'))\n        }\n      } else {\n        callback()\n      }\n    }\n    return {\n      ACCOUNT_STATUS,\n      userData: [],\n      searchForm: {\n        empCode: '',\n        empName: '',\n        deptId: '',\n        status: '',\n        pageNumber: 1,\n        pageSize: 10\n      },\n      total: 0,\n      titleMap: {\n        edit: '修改用户',\n        create: '新增用户'\n      },\n      userForm: {\n        empCode: '',\n        userId: '',\n        deptId: '',\n        empName: '',\n        platformPositionId: '',\n        phone: ''\n      },\n      userRules: {\n        phone: [{ required: true, message: '请录入联系方式', trigger: 'blur' }, { required: true, validator: validatePhone, trigger: 'blur' }],\n        empName: [{ required: true, message: '请录入姓名信息', trigger: 'blur' }],\n        empCode: [{ required: true, message: '请录入员工编号', trigger: 'blur' }],\n        deptId: [{ required: true, message: '请选择部门', trigger: 'change' }],\n        platformPositionId: [{ required: true, message: '请选择岗位', trigger: 'change' }]\n      },\n      userDialogStatus: 'create',\n      userDialogVisible: false,\n      deptArray: [],\n      currentRow: {},\n      postionVisible: false,\n      chosePosition: [],\n      postionArray: {},\n      otherPositArray: {},\n      otherDeptId: '',\n      otherPostId: ''\n    }\n  },\n  created() {\n    this.getDeptTreeList()\n    this.handleSearch()\n  },\n  methods: {\n    getDeptTreeList() {\n      deptServer.getDeptList().then(res => {\n        this.deptArray = res.result || []\n      })\n    },\n    handleSearch() {\n      userServer.getUserListForPage(this.searchForm).then(res => {\n        if (res.code === 200) {\n          this.userData = res.result.records || []\n          this.total = res.result.total\n        }\n      })\n    },\n    // 重置\n    handleCreate() {\n      this.clearForm()\n      this.userDialogStatus = 'create'\n      this.userDialogVisible = true\n      if (this.$refs.userForm !== undefined) {\n        this.$refs.userForm.resetFields()\n      }\n    },\n    handleUpdate(row) {\n      if (this.$refs.userForm !== undefined) {\n        this.$refs.userForm.resetFields()\n      }\n      this.userForm.userId = row.id\n      this.userForm.empCode = row.empCode\n      this.userForm.empName = row.empName || ''\n      this.userForm.deptId = row.deptId || ''\n      this.userForm.phone = row.phone || ''\n      this.handleChange(row.deptId)\n      this.userForm.platformPositionId = row.platformPositionId || ''\n      this.userDialogStatus = 'edit'\n      this.userDialogVisible = true\n    },\n    confirmDialog() {\n      if (this.userDialogStatus === 'create') {\n        this.confirmCreate()\n      } else {\n        this.confirmUpdate()\n      }\n    },\n    confirmOtherDialog() {\n      if (this.chosePosition && this.chosePosition.length > 0) {\n        const data = {\n          userId: this.currentRow.id,\n          postIds: this.chosePosition.map(i => {\n            const { deptId, platformPositionId } = i\n            return { deptId, platformPositionId }\n          })\n        }\n        userServer.saveOtherPositions(data).then(result => {\n          if (result.code === 200) {\n            this.$notify({\n              title: '成功',\n              message: result.message,\n              type: 'success'\n            })\n            this.handleSearch()\n            this.postionVisible = false\n          } else {\n            this.$notify({\n              title: '失败',\n              message: result.message,\n              type: 'error'\n            })\n          }\n        })\n      } else {\n        this.$message.warning('至少选择一个挂职的岗位')\n      }\n    },\n    confirmCreate() {\n      this.$refs.userForm.validate(valid => {\n        if (valid) {\n          userServer.addUserInfo(this.userForm).then(request => {\n            this.$notify({\n              title: '成功',\n              message: request.message,\n              type: 'success'\n            })\n            this.handleSearch()\n            this.userDialogVisible = false\n            this.$refs.userForm.resetFields()\n          }).catch(() => {})\n        } else {\n          return false\n        }\n      })\n    },\n    confirmUpdate() {\n      this.$refs.userForm.validate(valid => {\n        if (valid) {\n          userServer.saveUserInfo(this.userForm).then(request => {\n            this.$notify({\n              title: '成功',\n              message: request.message,\n              type: 'success'\n            })\n            this.handleSearch()\n            this.userDialogVisible = false\n            this.$refs.userForm.resetFields()\n          }).catch(() => {})\n        } else {\n          return false\n        }\n      })\n    },\n    handleDelete(userId) {\n      this.$confirm('确定注销?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        userServer.resetUser(userId).then(result => {\n          if (result.code === 200) {\n            this.$notify({\n              title: '成功',\n              message: result.message,\n              type: 'success'\n            })\n            this.handleSearch()\n          } else {\n            this.$notify({\n              title: '失败',\n              message: result.message,\n              type: 'error'\n            })\n          }\n        })\n      }).catch(() => {})\n    },\n    handleResetPwd(userId) {\n      this.$confirm('确定重置?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        userServer.resetUser(userId).then(result => {\n          if (result.code === 200) {\n            this.$notify({\n              title: '成功',\n              message: result.message,\n              type: 'success'\n            })\n            this.handleSearch()\n          } else {\n            this.$notify({\n              title: '失败',\n              message: result.message,\n              type: 'error'\n            })\n          }\n        })\n      }).catch(() => {})\n    },\n    clearForm() {\n      this.userForm = {\n        userId: '',\n        deptId: '',\n        empCode: '',\n        empName: '',\n        platformPositionId: '',\n        phone: ''\n      }\n    },\n    handleChange(val) {\n      this.postionArray = {}\n      this.userForm.platformPositionId = ''\n      if (val) {\n        const obj = this.deptArray.find(i => i.id === val)\n        if (obj) {\n          deptServer.dpfindPositionIdByDeptId(obj.platformDeptId).then(res => {\n            this.$nextTick(() => {\n              this.postionArray = res.result || {}\n            })\n          })\n        }\n      }\n    },\n    handleDepartChange(val) {\n      this.otherPositArray = {}\n      this.otherPostId = ''\n      if (val) {\n        const obj = this.deptArray.find(i => i.id === val)\n        if (obj) {\n          deptServer.dpfindPositionIdByDeptId(obj.platformDeptId).then(res => {\n            this.otherPositArray = res.result || {}\n          })\n        }\n      }\n    },\n    handlePosChange(val) {\n      if (val) {\n        const ob = this.chosePosition.find(j => j.platformPositionId === val)\n        if (!ob) {\n          this.chosePosition.push({\n            platformPositionId: val,\n            deptId: this.otherDeptId,\n            platformDeptName: this.otherPositArray[val]\n          })\n        }\n      }\n    },\n    handleRelation(row) {\n      this.chosePosition = []\n      this.currentRow = Object.assign({}, row)\n      let posIds = []\n      const depNames = []\n      const posNames = []\n      if (row.positionNames && row.positionNames.length > 0) {\n        const firstPos = row.positionNames.split(';')\n        const firstPosIds = row.positionIds.split(',')\n        if (firstPos && firstPos.length > 0) {\n          firstPos.forEach(element => {\n            depNames.push(element.split('/')[0])\n            posNames.push(element.split('/')[1])\n          })\n          posIds = firstPosIds\n        } else {\n          posIds.push(row.positionIds)\n          depNames.push(row.positionNames.split('/')[0])\n          posNames.push(row.positionNames.split('/')[1])\n        }\n        posIds.forEach((i, index) => {\n          const ob = {\n            platformPositionId: i,\n            deptId: this.getDepartIdForName(depNames[index]),\n            platformDeptName: posNames[index]\n          }\n          this.chosePosition.push(ob)\n        })\n      }\n      this.postionVisible = true\n    },\n    getDepartIdForName(name) {\n      const o = this.deptArray.find(i => i.deptName === name)\n      return o.id || ''\n    },\n    handleClose(item) {\n      // 移除存储的因子\n      this.chosePosition.splice(this.chosePosition.indexOf(item), 1)\n    }\n\n  }\n}\n",{"version":3,"sources":["userList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"userList.vue","sourceRoot":"src/views/system/user","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-form :model=\"searchForm\" :inline=\"true\">\n      <el-row>\n        <el-col :span=\"20\">\n          <el-form-item label=\"工号:\">\n            <el-input v-model=\"searchForm.empCode\" style=\"width:165px\" placeholder=\"员工工号\" />\n          </el-form-item>\n          <el-form-item label=\"名称:\">\n            <el-input v-model=\"searchForm.empName\" style=\"width:165px\" placeholder=\"员工名称\" />\n          </el-form-item>\n          <el-form-item label=\"状态:\">\n            <el-select v-model=\"searchForm.status\" clearable style=\"width:165px\" filterable placeholder=\"账号状态\">\n              <el-option\n                v-for=\"item in Object.keys(ACCOUNT_STATUS)\"\n                :key=\"item\"\n                :label=\"ACCOUNT_STATUS[item]\"\n                :value=\"item\"\n              />\n            </el-select>\n          </el-form-item>\n          <el-form-item>\n            <el-button type=\"primary\" class=\"iconfont icon-chaxun1\" @click=\"handleSearch\"> 查询</el-button>\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"4\" class=\"search-right\">\n          <el-button type=\"text\" icon=\"el-icon-plus\" @click=\"handleCreate\">新增</el-button>\n          <el-button type=\"text\" icon=\"el-icon-refresh\" @click=\"handleSearch\">刷新</el-button>\n        </el-col>\n      </el-row>\n    </el-form>\n    <div>\n      <el-table\n        stripe\n        :data=\"userData\"\n        highlight-current-row\n        :header-cell-style=\"{background:'#ECF3FC'}\"\n        style=\"width: 100%\"\n      >\n        <template slot=\"empty\">\n          <div class=\"table_empty\">\n            <div class=\"empty_tips\">\n              <span>\n                暂无用户,\n              </span>\n              <el-button type=\"text\" size=\"small\" style=\"font-size:14px;\" @click=\"handleCreate\">新建用户信息</el-button>\n            </div>\n          </div>\n        </template>\n        <el-table-column type=\"index\" width=\"55\" label=\"序号\" align=\"center\" />\n        <el-table-column prop=\"empCode\" label=\"员工工号\" align=\"center\" />\n        <el-table-column prop=\"username\" label=\"登录账号\" align=\"center\" />\n        <el-table-column prop=\"empName\" label=\"员工名称\" align=\"center\" />\n        <el-table-column prop=\"deptName\" label=\"部门/角色\" align=\"center\">\n          <template slot-scope=\"{row}\">\n            {{ row.deptName }}{{ row.platformPositionName?'/'+row.platformPositionName:'' }}\n          </template>\n        </el-table-column>\n        <el-table-column label=\"兼职\" align=\"center\">\n          <template slot-scope=\"{row}\">\n            {{ row.positionNames }}\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"phone\" label=\"绑定手机号1\" align=\"center\" />\n        <el-table-column prop=\"status\" label=\"账号状态\" align=\"center\" width=\"90\">\n          <template slot-scope=\"{row}\">\n            <el-tag :type=\"row.status==='0'?'success':'danger'\">{{ row.status==='0'?'有效':'停用' }}</el-tag>\n          </template>\n        </el-table-column>\n\n        <el-table-column fixed=\"right\" align=\"center\" label=\"操作\" width=\"210\">\n          <template slot-scope=\"scope\">\n            asd\n            <el-button type=\"text\" size=\"small\" @click=\"handleUpdate(scope.row)\"> 编辑</el-button>\n            <div v-if=\"scope.row.deptId!=='-1'\" class=\"erc-divider-vertical\" />\n            <el-button v-if=\"scope.row.deptId!=='-1'\" type=\"text\" size=\"small\" @click=\"handleRelation(scope.row)\"> 兼职</el-button>\n            <div v-if=\"scope.row.deptId!=='-1'\" class=\"erc-divider-vertical\" />\n            <el-button v-if=\"scope.row.deptId!=='-1'\" type=\"text\" size=\"small\" @click=\"handleDelete(scope.row.userId)\"> 离职注销</el-button>\n            <div v-if=\"scope.row.deptId!=='-1'\" class=\"erc-divider-vertical\" />\n            <el-button v-if=\"scope.row.deptId!=='-1'\" type=\"text\" size=\"small\" @click=\"handleResetPwd(scope.row.userId)\"> 重置密码</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </div>\n    <div style=\"float: right\">\n      <pagination\n        v-show=\"total>0\"\n        :total=\"total\"\n        :page.sync=\"searchForm.pageNumber\"\n        :limit.sync=\"searchForm.pageSize\"\n        @pagination=\"handleSearch\"\n      />\n    </div>\n\n    <el-dialog :title=\"titleMap[userDialogStatus]\" :visible.sync=\"userDialogVisible\" width=\"50%\">\n      <div style=\"width: 550px;margin:0 auto;\">\n        <el-form ref=\"userForm\" :model=\"userForm\" :rules=\"userRules\" label-width=\"140px\">\n          <el-form-item prop=\"empCode\" label=\"员工工号:\">\n            <el-input v-model=\"userForm.empCode\" placeholder=\"员工工号\" maxlength=\"15\" style=\"width: 70%;\" />\n          </el-form-item>\n          <el-form-item prop=\"empName\" label=\"姓名:\">\n            <el-input v-model=\"userForm.empName\" placeholder=\"用户姓名\" maxlength=\"15\" style=\"width: 70%;\" />\n          </el-form-item>\n\n          <el-form-item prop=\"deptId\" label=\"部门:\">\n            <el-select\n              v-model=\"userForm.deptId\"\n              filterable\n              placeholder=\"主部门选择\"\n              style=\"width: 70%;\"\n              @change=\"handleChange\"\n            >\n              <el-option\n                v-for=\"item in deptArray\"\n                :key=\"item.id\"\n                :label=\"item.deptName\"\n                :value=\"item.id\"\n              />\n            </el-select>\n          </el-form-item>\n\n          <el-form-item prop=\"platformPositionId\" label=\"岗位:\">\n            <el-select\n              v-model=\"userForm.platformPositionId\"\n              filterable\n              placeholder=\"岗位选择\"\n              style=\"width: 70%;\"\n            >\n              <el-option\n                v-for=\"item in Object.keys(postionArray)\"\n                :key=\"item\"\n                :label=\"postionArray[item]\"\n                :value=\"item\"\n              />\n            </el-select>\n          </el-form-item>\n          <el-form-item prop=\"phone\" label=\"手机号:\">\n            <el-input v-model=\"userForm.phone\" placeholder=\"手机号\" maxlength=\"11\" style=\"width: 70%;\" />\n          </el-form-item>\n\n        </el-form>\n      </div>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"userDialogVisible=false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"confirmDialog\">确认</el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog title=\"兼职岗位信息\" :visible.sync=\"postionVisible\">\n      <el-form label-width=\"100px\">\n        <el-form-item label=\"岗位:\">\n          <el-input v-model=\"currentRow.platformPositionName\" disabled style=\"width:300px;\" />\n        </el-form-item>\n        <el-form-item label=\"兼职岗位:\">\n          <template v-if=\"chosePosition && chosePosition.length > 0\">\n            <el-tag\n              v-for=\"item in chosePosition\"\n              :key=\"item.platformPositionId\"\n              closable\n              :disable-transitions=\"false\"\n              style=\"margin:2px 3px\"\n              @close=\"handleClose(item)\"\n            >\n              {{ item.platformDeptName }}\n            </el-tag>\n          </template>\n        </el-form-item>\n        <el-form-item label=\"岗位选择:\">\n          <el-row>\n            <el-col :span=\"6\">\n              <el-select\n                v-model=\"otherDeptId\"\n                clearable\n                filterable\n                placeholder=\"部门选择\"\n                style=\"width: 98%;\"\n                @change=\"handleDepartChange\"\n              >\n                <el-option\n                  v-for=\"item in deptArray\"\n                  :key=\"item.id\"\n                  :label=\"item.deptName\"\n                  :value=\"item.id\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"6\">\n              <el-select\n                v-model=\"otherPostId\"\n                clearable\n                filterable\n                style=\"width: 98%;\"\n                placeholder=\"请选择角色\"\n                @change=\"handlePosChange\"\n              >\n                <el-option\n                  v-for=\"item in Object.keys(otherPositArray)\"\n                  :key=\"item\"\n                  :label=\"otherPositArray[item]\"\n                  :value=\"item\"\n                />\n              </el-select>\n            </el-col>\n          </el-row>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"postionVisible=false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"confirmOtherDialog\">确认</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport * as userServer from '@/api/user'\nimport * as deptServer from '@/api/dept'\nimport Pagination from '@/components/Pagination' // Secondary package based on el-pagination\nimport { validPhone } from '@/utils/validate'\nconst ACCOUNT_STATUS = {\n  '0': '有效',\n  '1': '无效'\n}\nexport default {\n  name: 'UserList',\n  components: { Pagination },\n  data() {\n    const validatePhone = (rule, value, callback) => {\n      if (value && value.length > 0) {\n        if (validPhone(value)) {\n          callback()\n        } else {\n          callback(new Error('输入正确的电话号码'))\n        }\n      } else {\n        callback()\n      }\n    }\n    return {\n      ACCOUNT_STATUS,\n      userData: [],\n      searchForm: {\n        empCode: '',\n        empName: '',\n        deptId: '',\n        status: '',\n        pageNumber: 1,\n        pageSize: 10\n      },\n      total: 0,\n      titleMap: {\n        edit: '修改用户',\n        create: '新增用户'\n      },\n      userForm: {\n        empCode: '',\n        userId: '',\n        deptId: '',\n        empName: '',\n        platformPositionId: '',\n        phone: ''\n      },\n      userRules: {\n        phone: [{ required: true, message: '请录入联系方式', trigger: 'blur' }, { required: true, validator: validatePhone, trigger: 'blur' }],\n        empName: [{ required: true, message: '请录入姓名信息', trigger: 'blur' }],\n        empCode: [{ required: true, message: '请录入员工编号', trigger: 'blur' }],\n        deptId: [{ required: true, message: '请选择部门', trigger: 'change' }],\n        platformPositionId: [{ required: true, message: '请选择岗位', trigger: 'change' }]\n      },\n      userDialogStatus: 'create',\n      userDialogVisible: false,\n      deptArray: [],\n      currentRow: {},\n      postionVisible: false,\n      chosePosition: [],\n      postionArray: {},\n      otherPositArray: {},\n      otherDeptId: '',\n      otherPostId: ''\n    }\n  },\n  created() {\n    this.getDeptTreeList()\n    this.handleSearch()\n  },\n  methods: {\n    getDeptTreeList() {\n      deptServer.getDeptList().then(res => {\n        this.deptArray = res.result || []\n      })\n    },\n    handleSearch() {\n      userServer.getUserListForPage(this.searchForm).then(res => {\n        if (res.code === 200) {\n          this.userData = res.result.records || []\n          this.total = res.result.total\n        }\n      })\n    },\n    // 重置\n    handleCreate() {\n      this.clearForm()\n      this.userDialogStatus = 'create'\n      this.userDialogVisible = true\n      if (this.$refs.userForm !== undefined) {\n        this.$refs.userForm.resetFields()\n      }\n    },\n    handleUpdate(row) {\n      if (this.$refs.userForm !== undefined) {\n        this.$refs.userForm.resetFields()\n      }\n      this.userForm.userId = row.id\n      this.userForm.empCode = row.empCode\n      this.userForm.empName = row.empName || ''\n      this.userForm.deptId = row.deptId || ''\n      this.userForm.phone = row.phone || ''\n      this.handleChange(row.deptId)\n      this.userForm.platformPositionId = row.platformPositionId || ''\n      this.userDialogStatus = 'edit'\n      this.userDialogVisible = true\n    },\n    confirmDialog() {\n      if (this.userDialogStatus === 'create') {\n        this.confirmCreate()\n      } else {\n        this.confirmUpdate()\n      }\n    },\n    confirmOtherDialog() {\n      if (this.chosePosition && this.chosePosition.length > 0) {\n        const data = {\n          userId: this.currentRow.id,\n          postIds: this.chosePosition.map(i => {\n            const { deptId, platformPositionId } = i\n            return { deptId, platformPositionId }\n          })\n        }\n        userServer.saveOtherPositions(data).then(result => {\n          if (result.code === 200) {\n            this.$notify({\n              title: '成功',\n              message: result.message,\n              type: 'success'\n            })\n            this.handleSearch()\n            this.postionVisible = false\n          } else {\n            this.$notify({\n              title: '失败',\n              message: result.message,\n              type: 'error'\n            })\n          }\n        })\n      } else {\n        this.$message.warning('至少选择一个挂职的岗位')\n      }\n    },\n    confirmCreate() {\n      this.$refs.userForm.validate(valid => {\n        if (valid) {\n          userServer.addUserInfo(this.userForm).then(request => {\n            this.$notify({\n              title: '成功',\n              message: request.message,\n              type: 'success'\n            })\n            this.handleSearch()\n            this.userDialogVisible = false\n            this.$refs.userForm.resetFields()\n          }).catch(() => {})\n        } else {\n          return false\n        }\n      })\n    },\n    confirmUpdate() {\n      this.$refs.userForm.validate(valid => {\n        if (valid) {\n          userServer.saveUserInfo(this.userForm).then(request => {\n            this.$notify({\n              title: '成功',\n              message: request.message,\n              type: 'success'\n            })\n            this.handleSearch()\n            this.userDialogVisible = false\n            this.$refs.userForm.resetFields()\n          }).catch(() => {})\n        } else {\n          return false\n        }\n      })\n    },\n    handleDelete(userId) {\n      this.$confirm('确定注销?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        userServer.resetUser(userId).then(result => {\n          if (result.code === 200) {\n            this.$notify({\n              title: '成功',\n              message: result.message,\n              type: 'success'\n            })\n            this.handleSearch()\n          } else {\n            this.$notify({\n              title: '失败',\n              message: result.message,\n              type: 'error'\n            })\n          }\n        })\n      }).catch(() => {})\n    },\n    handleResetPwd(userId) {\n      this.$confirm('确定重置?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        userServer.resetUser(userId).then(result => {\n          if (result.code === 200) {\n            this.$notify({\n              title: '成功',\n              message: result.message,\n              type: 'success'\n            })\n            this.handleSearch()\n          } else {\n            this.$notify({\n              title: '失败',\n              message: result.message,\n              type: 'error'\n            })\n          }\n        })\n      }).catch(() => {})\n    },\n    clearForm() {\n      this.userForm = {\n        userId: '',\n        deptId: '',\n        empCode: '',\n        empName: '',\n        platformPositionId: '',\n        phone: ''\n      }\n    },\n    handleChange(val) {\n      this.postionArray = {}\n      this.userForm.platformPositionId = ''\n      if (val) {\n        const obj = this.deptArray.find(i => i.id === val)\n        if (obj) {\n          deptServer.dpfindPositionIdByDeptId(obj.platformDeptId).then(res => {\n            this.$nextTick(() => {\n              this.postionArray = res.result || {}\n            })\n          })\n        }\n      }\n    },\n    handleDepartChange(val) {\n      this.otherPositArray = {}\n      this.otherPostId = ''\n      if (val) {\n        const obj = this.deptArray.find(i => i.id === val)\n        if (obj) {\n          deptServer.dpfindPositionIdByDeptId(obj.platformDeptId).then(res => {\n            this.otherPositArray = res.result || {}\n          })\n        }\n      }\n    },\n    handlePosChange(val) {\n      if (val) {\n        const ob = this.chosePosition.find(j => j.platformPositionId === val)\n        if (!ob) {\n          this.chosePosition.push({\n            platformPositionId: val,\n            deptId: this.otherDeptId,\n            platformDeptName: this.otherPositArray[val]\n          })\n        }\n      }\n    },\n    handleRelation(row) {\n      this.chosePosition = []\n      this.currentRow = Object.assign({}, row)\n      let posIds = []\n      const depNames = []\n      const posNames = []\n      if (row.positionNames && row.positionNames.length > 0) {\n        const firstPos = row.positionNames.split(';')\n        const firstPosIds = row.positionIds.split(',')\n        if (firstPos && firstPos.length > 0) {\n          firstPos.forEach(element => {\n            depNames.push(element.split('/')[0])\n            posNames.push(element.split('/')[1])\n          })\n          posIds = firstPosIds\n        } else {\n          posIds.push(row.positionIds)\n          depNames.push(row.positionNames.split('/')[0])\n          posNames.push(row.positionNames.split('/')[1])\n        }\n        posIds.forEach((i, index) => {\n          const ob = {\n            platformPositionId: i,\n            deptId: this.getDepartIdForName(depNames[index]),\n            platformDeptName: posNames[index]\n          }\n          this.chosePosition.push(ob)\n        })\n      }\n      this.postionVisible = true\n    },\n    getDepartIdForName(name) {\n      const o = this.deptArray.find(i => i.deptName === name)\n      return o.id || ''\n    },\n    handleClose(item) {\n      // 移除存储的因子\n      this.chosePosition.splice(this.chosePosition.indexOf(item), 1)\n    }\n\n  }\n}\n</script>\n\n<style scoped lang=\"scss\" type=\"text/scss\">\n  .search_div {\n    >div {\n      &:nth-child(1){\n        margin-right: 10px;\n      }\n      display: inline-block;\n    }\n  }\n\n  .search_input {\n    width: 200px;\n    margin-bottom: 5px;\n  }\n  .search-right {\n    text-align: right;\n    padding-right: 25px;\n  }\n</style>\n"]}]}