{"remainingRequest":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\webstormProjects\\vue-hj-platform\\src\\views\\dashboard\\components\\PieChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\webstormProjects\\vue-hj-platform\\src\\views\\dashboard\\components\\PieChart.vue","mtime":1637459832000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport echarts from 'echarts'\nrequire('echarts/theme/macarons') // echarts theme\nimport resize from './mixins/resize'\n\nexport default {\n  mixins: [resize],\n  props: {\n    className: {\n      type: String,\n      default: 'chart'\n    },\n    width: {\n      type: String,\n      default: '100%'\n    },\n    height: {\n      type: String,\n      default: '230px'\n    },\n    pieDatas: {\n      type: Array,\n      required: true\n    }\n  },\n  mounted() {\n    this.$nextTick(() => {\n      this.initChart()\n    })\n  },\n  beforeDestroy() {\n    if (!this.chart) {\n      return\n    }\n    this.chart.dispose()\n    this.chart = null\n  },\n  methods: {\n    initChart() {\n      this.chart = echarts.init(document.getElementById('pieChart'))\n\n      const showValue = true; const showPercent = true\n      this.chart.setOption({\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b} : {c} ({d}%)'\n        },\n        legend: {\n          show: true,\n          orient: 'vertical',\n          top: 'center',\n          left: 5,\n          textStyle: {\n            align: 'left',\n            verticalAlign: 'middle',\n            rich: {\n              name: {\n                color: 'rgba(255,255,255,0.5)',\n                fontSize: 10\n              },\n              value: {\n                color: 'rgba(255,255,255,0.5)',\n                fontSize: 10\n              },\n              rate: {\n                color: 'rgba(255,255,255,0.9)',\n                fontSize: 10\n              }\n            }\n          },\n          formatter: (name) => {\n            var datas = this.pieDatas\n            let total = 0\n            datas.map(item => {\n              total += (item.value - 0)\n            })\n            const valueIndex = datas.map(item => item.name).indexOf(name)\n            return name + '  ' + (showValue ? datas[valueIndex].value + ' ' : '') + (showPercent ? '(' + ((datas[valueIndex].value / total) * 100).toFixed(2) + '%)' : '')\n          }\n        },\n        series: [\n          {\n            type: 'pie',\n            center: ['76%', '50%'],\n            radius: ['30%', '52%'],\n            label: {\n              normal: {\n                show: false,\n                position: 'center',\n                formatter: '{value|{c}}\\n{label|{b}}',\n                rich: {\n                  value: {\n                    padding: 5,\n                    align: 'center',\n                    verticalAlign: 'middle',\n                    fontSize: 28\n                  },\n                  label: {\n                    align: 'center',\n                    verticalAlign: 'middle',\n                    fontSize: 16\n                  }\n                }\n              },\n              emphasis: {\n                show: true,\n                textStyle: {\n                  fontSize: '12'\n                }\n              }\n            },\n            data: this.pieDatas\n          }\n        ]\n      })\n    }\n  }\n}\n",{"version":3,"sources":["PieChart.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PieChart.vue","sourceRoot":"src/views/dashboard/components","sourcesContent":["<template>\n  <el-card class=\"box-card-component\" shadow=\"never\" style=\"height: 316px;\">\n    <div slot=\"header\" class=\"clearfix\">\n      <span>本月度-发放报告数</span>\n    </div>\n    <div id=\"pieChart\" :class=\"className\" :style=\"{height:height,width:width}\" />\n  </el-card>\n</template>\n\n<script>\nimport echarts from 'echarts'\nrequire('echarts/theme/macarons') // echarts theme\nimport resize from './mixins/resize'\n\nexport default {\n  mixins: [resize],\n  props: {\n    className: {\n      type: String,\n      default: 'chart'\n    },\n    width: {\n      type: String,\n      default: '100%'\n    },\n    height: {\n      type: String,\n      default: '230px'\n    },\n    pieDatas: {\n      type: Array,\n      required: true\n    }\n  },\n  mounted() {\n    this.$nextTick(() => {\n      this.initChart()\n    })\n  },\n  beforeDestroy() {\n    if (!this.chart) {\n      return\n    }\n    this.chart.dispose()\n    this.chart = null\n  },\n  methods: {\n    initChart() {\n      this.chart = echarts.init(document.getElementById('pieChart'))\n\n      const showValue = true; const showPercent = true\n      this.chart.setOption({\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b} : {c} ({d}%)'\n        },\n        legend: {\n          show: true,\n          orient: 'vertical',\n          top: 'center',\n          left: 5,\n          textStyle: {\n            align: 'left',\n            verticalAlign: 'middle',\n            rich: {\n              name: {\n                color: 'rgba(255,255,255,0.5)',\n                fontSize: 10\n              },\n              value: {\n                color: 'rgba(255,255,255,0.5)',\n                fontSize: 10\n              },\n              rate: {\n                color: 'rgba(255,255,255,0.9)',\n                fontSize: 10\n              }\n            }\n          },\n          formatter: (name) => {\n            var datas = this.pieDatas\n            let total = 0\n            datas.map(item => {\n              total += (item.value - 0)\n            })\n            const valueIndex = datas.map(item => item.name).indexOf(name)\n            return name + '  ' + (showValue ? datas[valueIndex].value + ' ' : '') + (showPercent ? '(' + ((datas[valueIndex].value / total) * 100).toFixed(2) + '%)' : '')\n          }\n        },\n        series: [\n          {\n            type: 'pie',\n            center: ['76%', '50%'],\n            radius: ['30%', '52%'],\n            label: {\n              normal: {\n                show: false,\n                position: 'center',\n                formatter: '{value|{c}}\\n{label|{b}}',\n                rich: {\n                  value: {\n                    padding: 5,\n                    align: 'center',\n                    verticalAlign: 'middle',\n                    fontSize: 28\n                  },\n                  label: {\n                    align: 'center',\n                    verticalAlign: 'middle',\n                    fontSize: 16\n                  }\n                }\n              },\n              emphasis: {\n                show: true,\n                textStyle: {\n                  fontSize: '12'\n                }\n              }\n            },\n            data: this.pieDatas\n          }\n        ]\n      })\n    }\n  }\n}\n</script>\n<style lang=\"scss\" scoped>\n.clearfix {\n  line-height: 50px;\n  padding-left: 15px;\n}\n</style>\n"]}]}