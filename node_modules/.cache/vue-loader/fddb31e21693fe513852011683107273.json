{"remainingRequest":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\webstormProjects\\vue-hj-platform\\src\\views\\system\\dept\\deptList.vue?vue&type=style&index=0&id=64323dc7&scoped=true&lang=scss&","dependencies":[{"path":"F:\\webstormProjects\\vue-hj-platform\\src\\views\\system\\dept\\deptList.vue","mtime":1638252990000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\webstormProjects\\vue-hj-platform\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.search_div {\n  >div {\n    &:nth-child(1){\n      margin-right: 10px;\n    }\n    display: inline-block;\n  }\n}\n\n.search_input {\n  width: 200px;\n  margin-bottom: 5px;\n}\n.search-right {\n  text-align: right;\n  padding-right: 25px;\n}\n.info-container {\n  padding: 0;\n  margin: 0;\n  height: auto;\n  width: 100%;\n}\n.card-left {\n  width: 100%;\n  min-height: 600px;\n}\n.card-right {\n  width: 100%;\n  min-height: 600px;\n}\n.card-right {\n  right: 0px;\n  width: 100%;\n  height: 100%;\n}\n.filter-tree {\n  margin-top: 15px;\n  line-height: 10px;;\n}\n.custom-tree-node {\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 14px;\n  padding-right: 8px;\n}\n::v-deep .el-card .el-card__header {\n  padding: 5px 20px;\n}\n.block-flex {\n  position: relative;\n  display: flex;\n  &>div{\n    border: 1px solid #B7B7B7;\n    width: 100px;\n    margin: 0;\n    line-height: 30px;\n    text-align: center;\n  }\n  &>div:first-child {\n    background: #B7B7B7;\n  }\n}\n",{"version":3,"sources":["deptList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"deptList.vue","sourceRoot":"src/views/system/dept","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-row :gutter=\"10\">\n      <el-col :span=\"7\">\n        <el-card class=\"card-left\" shadow=\"never\">\n          <el-input\n            v-model=\"filterText\"\n            placeholder=\"输入名称\"\n          />\n          <el-tree\n            ref=\"tree\"\n            class=\"filter-tree\"\n            :data=\"deptTreeData\"\n            :props=\"defaultProps\"\n            highlight-current\n            default-expand-all\n            :filter-node-method=\"filterNode\"\n            :expand-on-click-node=\"false\"\n            @node-click=\"onSelectDepart\"\n          >\n            <!-- <span slot-scope=\"{ node, data }\" class=\"custom-tree-node\">\n              <span>{{ node.label }}</span>\n              <span>\n                <el-button\n                  type=\"text\"\n                  size=\"mini\"\n                  @click=\"() => appendDepart(data)\"\n                >\n                  添加\n                </el-button>\n                <el-button\n                  v-if=\"data.id !== '-1001'\"\n                  type=\"text\"\n                  size=\"mini\"\n                  @click=\"() => updateDepart(data)\"\n                >\n                  修改\n                </el-button>\n                <el-button\n                  v-if=\"data.id !== '-1001'\"\n                  type=\"text\"\n                  size=\"mini\"\n                  @click=\"() => removeDepart(node, data)\"\n                >\n                  删除\n                </el-button>\n              </span>\n            </span> -->\n          </el-tree>\n        </el-card>\n      </el-col>\n      <el-col :span=\"17\">\n        <el-card class=\"card-right\" shadow=\"never\">\n          <div slot=\"header\" class=\"clearfix\">\n            <span>当前部门: <i class=\"el-input__icon\" /></span>{{ currentDeptName }}\n            <el-button v-if=\"currentDeptId && currentDeptId.length > 0\" style=\"float: right; margin:4px 2px;\" type=\"text\" icon=\"el-icon-plus\" @click=\"handleCreate\">新增</el-button>\n            <el-button style=\"float: right; margin:4px 2px;\" type=\"text\" icon=\"el-icon-refresh\" @click=\"handleSearch\">刷新</el-button>\n          </div>\n          <div>\n            <el-table\n              stripe\n              :data=\"departData\"\n              border\n              highlight-current-row\n              :header-cell-style=\"{background:'#ECF3FC'}\"\n              style=\"width: 100%\"\n            >\n              <template slot=\"empty\">\n                <div class=\"table_empty\">\n                  <div class=\"empty_tips\">\n                    <span>\n                      暂无部门\n                    </span>\n                  </div>\n                </div>\n              </template>\n              <el-table-column type=\"index\" width=\"50\" label=\"序号\" align=\"center\" />\n              <el-table-column prop=\"deptName\" label=\"下级部门名称\" align=\"center\" />\n              <el-table-column prop=\"platformDeptName\" label=\"部门职能\" align=\"center\">\n                <template slot-scope=\"{row}\">\n                  <el-tag>{{ row.platformDeptName }}</el-tag>\n                </template>\n              </el-table-column>\n              <el-table-column prop=\"deptDesc\" label=\"描述\" align=\"center\" />\n              <el-table-column fixed=\"right\" align=\"center\" width=\"140px\" label=\"操作\">\n                <template slot-scope=\"scope\">\n                  <el-button type=\"text\" @click=\"handleUpdate(scope.row)\">编辑</el-button>\n                  <div class=\"erc-divider-vertical\" />\n                  <el-button type=\"text\" @click=\"handleDelete(scope.row.id)\">删除</el-button>\n                </template>\n              </el-table-column>\n            </el-table>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n    <el-dialog :title=\"titleMap[deptDialogStatus]\" :visible.sync=\"departVisible\" center>\n      <div style=\"width: 400px;margin:0 auto;\">\n        <el-form ref=\"departForm\" :model=\"departForm\" :rules=\"departRules\" label-width=\"110px\">\n          <el-form-item prop=\"deptName\" label=\"部门名称:\">\n            <el-input\n              v-model=\"departForm.deptName\"\n              placeholder=\"请录入部门名称\"\n              maxlength=\"15\"\n              show-word-limit\n              style=\"width:90%\"\n            />\n          </el-form-item>\n          <el-form-item prop=\"platformDeptId\" label=\"部门职能:\">\n            <el-select\n              v-model=\"departForm.platformDeptId\"\n              style=\"width:90%\"\n              placeholder=\"业务流转权限关联\"\n            >\n              <el-option\n                v-for=\"item in Object.keys(plDeptmentArray)\"\n                :key=\"item\"\n                :label=\"plDeptmentArray[item]\"\n                :value=\"item\"\n              />\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"部门描述:\">\n            <el-input\n              v-model=\"departForm.deptDesc\"\n              type=\"textarea\"\n              :rows=\"4\"\n              maxlength=\"50\"\n              show-word-limit\n              placeholder=\"请录入部门描述\"\n              style=\"width:90%\"\n            />\n          </el-form-item>\n        </el-form>\n      </div>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"departVisible=false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"confirmDepart\">保存</el-button>\n      </div>\n    </el-dialog>\n\n  </div>\n</template>\n\n<script>\nimport * as deptServer from '@/api/dept'\nimport { getDicKey } from '@/api/dict'\nexport default {\n  name: 'DeptList',\n  data() {\n    return {\n      deptTreeData: [],\n      defaultProps: {\n        children: 'children',\n        label: 'deptName',\n        id: 'id'\n      },\n      titleMap: {\n        edit: '修改部门',\n        create: '新增部门'\n      },\n      posTitleMap: {\n        edit: '修改岗位',\n        create: '新增岗位'\n      },\n      deptDialogStatus: 'create',\n      currentDeptId: '',\n      currentDeptName: '',\n      departData: [],\n      filterText: '',\n      departVisible: false,\n      departForm: {\n        parentDeptId: '',\n        platformDeptId: '',\n        deptId: '',\n        deptName: '',\n        deptDesc: ''\n      },\n      departRules: {\n        deptName: [{ required: true, message: '部门名称', trigger: 'blur' }],\n        platformDeptId: [{ required: true, message: '请选择平台流转权限', trigger: 'change' }]\n      },\n      currentTreeItem: {},\n      departName: '',\n      roleListArray: [],\n      currentNode: {},\n      currentResolve: {},\n      plDeptmentArray: []\n    }\n  },\n  watch: {\n    filterText(val) {\n      this.$refs.tree.filter(val)\n    }\n  },\n  created() {\n    this.getDicKey('plDeptmentArray', 1001)\n    this.getDeptTreeList()\n  },\n  methods: {\n    getDicKey(type, code) {\n      getDicKey(code).then(result => {\n        if (result.code === 200) {\n          this[type] = result.result\n        }\n      })\n    },\n    getDeptTreeList() {\n      this.deptTreeData = []\n      deptServer.getDeptTreeList().then(res => {\n        const resObj = res.result || {}\n        this.deptTreeData.push(resObj)\n      })\n    },\n    getPlDepartList() {\n\n    },\n    filterNode(value, data) {\n      if (!value) return true\n\n      return data.deptName.indexOf(value) !== -1\n    },\n    loadNode(node, resolve) {\n      this.currentNode = node\n      this.currentResolve = resolve\n      const obj = node.data\n      this.currentDeptId = obj.id\n      this.currentDeptName = obj.deptName\n      if (node.level === 0) {\n        return resolve([{\n          id: -1001,\n          deptName: this.$store.getters.userInfo.organName || '当前机构',\n          children: []\n        }])\n      }\n      if (this.currentDeptId) {\n        this.departData = []\n        deptServer.findTopDeptListByParentId(this.currentDeptId).then(res => {\n          if (res.code === 200 && res.result) {\n            this.departData = res.result.map(i => {\n              return { ...i, parentName: this.currentDeptName }\n            }) || []\n            resolve(res.result)\n          } else {\n            resolve([])\n          }\n        }).catch(() => {\n          resolve([])\n        })\n      } else {\n        resolve([])\n      }\n    },\n    onSelectDepart(even) {\n      if (even.id === this.currentDeptId) {\n        return\n      }\n      this.currentDeptId = even.id\n      this.currentDeptName = even.deptName\n      this.$nextTick(() => {\n        this.handleSearch()\n      })\n    },\n    confirmDepart() {\n      this.$refs.departForm.validate(valid => {\n        if (valid) {\n          if (this.deptDialogStatus === 'create') {\n            const params = {\n              parentDeptId: this.departForm.parentDeptId,\n              platformDeptId: this.departForm.platformDeptId,\n              deptName: this.departForm.deptName,\n              deptDesc: this.departForm.deptDesc\n            }\n            deptServer.createDeptInfo(params).then(res => {\n              if (res.code === 200) {\n                this.handleSearch()\n                this.getDeptTreeList()\n                this.departVisible = false\n              }\n            })\n          } else {\n            const params = {\n              deptId: this.departForm.deptId,\n              platformDeptId: this.departForm.platformDeptId,\n              deptName: this.departForm.deptName,\n              deptDesc: this.departForm.deptDesc\n            }\n            deptServer.updateDeptInfo(params).then(res => {\n              if (res.code === 200) {\n                this.handleSearch()\n                this.getDeptTreeList()\n                this.departVisible = false\n              }\n            })\n          }\n        }\n      })\n    },\n    handleSearch() {\n      if (this.currentDeptId) {\n        this.departData = []\n        deptServer.findTopDeptListByParentId(this.currentDeptId).then(res => {\n          if (res.code === 200 && res.result) {\n            this.departData = res.result.map(i => {\n              return { ...i, parentName: this.currentDeptName }\n            }) || []\n          }\n        }).catch(() => {\n        })\n      }\n    },\n    // 重置\n    handleCreate() {\n      this.clearForm()\n      this.departForm.parentDeptId = this.currentDeptId\n      this.deptDialogStatus = 'create'\n      this.departVisible = true\n    },\n    handleUpdate(row) {\n      this.clearForm()\n      this.departForm.deptId = row.id\n      this.departForm.platformDeptId = row.platformDeptId\n      this.departForm.deptName = row.deptName || ''\n      this.departForm.deptDesc = row.deptDesc || ''\n      this.deptDialogStatus = 'edit'\n      this.departVisible = true\n    },\n    handleDelete(id) {\n      this.$confirm('确定删除?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        deptServer.delDeptById(id).then(result => {\n          if (result.code === 200) {\n            this.$notify({\n              title: '成功',\n              message: result.message,\n              type: 'success'\n            })\n            this.handleSearch()\n            this.getDeptTreeList()\n          } else {\n            this.$notify({\n              title: '失败',\n              message: result.message,\n              type: 'error'\n            })\n          }\n        })\n      }).catch(() => {})\n    },\n    appendDepart(data) {\n      this.currentTreeItem = data\n      this.deptDialogStatus = 'create'\n      this.departName = ''\n      this.departVisible = true\n    },\n    updateDepart(data) {\n      this.currentTreeItem = data\n      this.deptDialogStatus = 'edit'\n      this.departName = data.deptName\n      this.departVisible = true\n    },\n    removeDepart(node, data) {\n      this.$confirm('确定删除?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        deptServer.delDeptById(data.id).then(res => {\n          if (res.code === 200) {\n            this.getDepartList()\n            this.currentDeptId = ''\n            this.positionData = []\n          }\n        })\n      })\n    },\n    clearForm() {\n      this.departForm = {\n        parentDeptId: '',\n        platformDeptId: '',\n        deptId: '',\n        deptName: '',\n        deptDesc: ''\n      }\n    }\n\n  }\n}\n</script>\n\n<style scoped lang=\"scss\" type=\"text/scss\">\n  .search_div {\n    >div {\n      &:nth-child(1){\n        margin-right: 10px;\n      }\n      display: inline-block;\n    }\n  }\n\n  .search_input {\n    width: 200px;\n    margin-bottom: 5px;\n  }\n  .search-right {\n    text-align: right;\n    padding-right: 25px;\n  }\n  .info-container {\n    padding: 0;\n    margin: 0;\n    height: auto;\n    width: 100%;\n  }\n  .card-left {\n    width: 100%;\n    min-height: 600px;\n  }\n  .card-right {\n    width: 100%;\n    min-height: 600px;\n  }\n  .card-right {\n    right: 0px;\n    width: 100%;\n    height: 100%;\n  }\n  .filter-tree {\n    margin-top: 15px;\n    line-height: 10px;;\n  }\n  .custom-tree-node {\n    flex: 1;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    font-size: 14px;\n    padding-right: 8px;\n  }\n  ::v-deep .el-card .el-card__header {\n    padding: 5px 20px;\n  }\n  .block-flex {\n    position: relative;\n    display: flex;\n    &>div{\n      border: 1px solid #B7B7B7;\n      width: 100px;\n      margin: 0;\n      line-height: 30px;\n      text-align: center;\n    }\n    &>div:first-child {\n      background: #B7B7B7;\n    }\n  }\n</style>\n"]}]}